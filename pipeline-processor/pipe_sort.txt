IF
pc: 0x400000
instruction: ['00111100000000010001000000000001', 4194304]
IFID: ['00111100000000010001000000000001', 4194304]
IDEX: [0, 0, 0, 0]
EXMEM: [0, 0, 0, 0, 0]
MEMWB: [0, 0, 0, 0, 0]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 0, '$10': 0, '$11': 0, '$12': 0, '$13': 0, '$14': 0, '$15': 0, '$16': 0, '$17': 0, '$18': 0, '$19': 0, '$20': 0, '$21': 0, '$22': 0, '$23': 0, '$24': 0, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 1
_________________________
ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 7, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 12
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [0, 1, 2, 4097, 69633, 0, 0]

IF
pc: 0x400004
instruction: ['00110100001010010000000000000000', 4194308]
IFID: ['00110100001010010000000000000000', 4194308]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 7, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 12, 4194304, [0, 1, 2, 4097, 69633, 0, 0]]
EXMEM: [0, 0, 0, 0, 0]
MEMWB: [0, 0, 0, 0, 0]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 0, '$10': 0, '$11': 0, '$12': 0, '$13': 0, '$14': 0, '$15': 0, '$16': 0, '$17': 0, '$18': 0, '$19': 0, '$20': 0, '$21': 0, '$22': 0, '$23': 0, '$24': 0, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 2
_________________________
1 0 4097
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 7, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268500992
WriteData: 0
rd: 1
rt: 1

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 8, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 7
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [1, 9, 0, 0, 2686976, 0, 0]

*** Forwarding EX->EX(rs) ***
IF
pc: 0x400008
instruction: ['00100100000110000000000000000111', 4194312]
IFID: ['00100100000110000000000000000111', 4194312]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 8, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 7, 4194308, [1, 9, 0, 0, 2686976, 268500992, 0]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 7, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268500992, 0, 1, 1, [4097, 4194304]]
MEMWB: [0, 0, 0, 0, 0]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 0, '$10': 0, '$11': 0, '$12': 0, '$13': 0, '$14': 0, '$15': 0, '$16': 0, '$17': 0, '$18': 0, '$19': 0, '$20': 0, '$21': 0, '$22': 0, '$23': 0, '$24': 0, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 3
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 7, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268500992
ReadData: 0
rd: 1
rt: 1

1 268500992 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 8, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268500992
WriteData: 0
rd: 9
rt: 9

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [0, 24, 0, 7, 1572871, 0, 0]

IF
pc: 0x40000c
instruction: ['00100100000110010000000000000000', 4194316]
IFID: ['00100100000110010000000000000000', 4194316]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194312, [0, 24, 0, 7, 1572871, 0, 0]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 8, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268500992, 0, 9, 9, [4097, 4194304], [0, 4194308]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 7, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268500992, 0, 1, 1]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 0, '$10': 0, '$11': 0, '$12': 0, '$13': 0, '$14': 0, '$15': 0, '$16': 0, '$17': 0, '$18': 0, '$19': 0, '$20': 0, '$21': 0, '$22': 0, '$23': 0, '$24': 0, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 4
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 8, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268500992
ReadData: 0
rd: 9
rt: 9

1 0 7
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 7
WriteData: 0
rd: 24
rt: 24

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [0, 25, 0, 0, 1638400, 0, 0]

IF
pc: 0x400010
instruction: ['00100100000011010000000000000000', 4194320]
IFID: ['00100100000011010000000000000000', 4194320]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194316, [0, 25, 0, 0, 1638400, 0, 0]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 7, 0, 24, 24, [4097, 4194304], [0, 4194308], [7, 4194312]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 8, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268500992, 0, 9, 9]
{'$0': 0, '$1': 268500992, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 0, '$10': 0, '$11': 0, '$12': 0, '$13': 0, '$14': 0, '$15': 0, '$16': 0, '$17': 0, '$18': 0, '$19': 0, '$20': 0, '$21': 0, '$22': 0, '$23': 0, '$24': 0, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 5
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 7
ReadData: 0
rd: 24
rt: 24

1 0 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 0
WriteData: 0
rd: 25
rt: 25

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [0, 13, 0, 0, 851968, 0, 0]

IF
pc: 0x400014
instruction: ['00100100000101011111111111111111', 4194324]
IFID: ['00100100000101011111111111111111', 4194324]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194320, [0, 13, 0, 0, 851968, 0, 0]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 0, 25, 25, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 7, 0, 24, 24]
{'$0': 0, '$1': 268500992, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 0, '$12': 0, '$13': 0, '$14': 0, '$15': 0, '$16': 0, '$17': 0, '$18': 0, '$19': 0, '$20': 0, '$21': 0, '$22': 0, '$23': 0, '$24': 0, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 6
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 0
ReadData: 0
rd: 25
rt: 25

1 0 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 0
WriteData: 0
rd: 13
rt: 13

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [0, 21, 31, -1, 1441791, 0, 0]

IF
pc: 0x400018
instruction: ['00010001101110000000000000001111', 4194328]
IFID: ['00010001101110000000000000001111', 4194328]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194324, [0, 21, 31, -1, 1441791, 0, 0]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 0, 13, 13, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 0, 25, 25]
{'$0': 0, '$1': 268500992, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 0, '$12': 0, '$13': 0, '$14': 0, '$15': 0, '$16': 0, '$17': 0, '$18': 0, '$19': 0, '$20': 0, '$21': 0, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 7
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 0
ReadData: 0
rd: 13
rt: 13

1 0 -1
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: -1
WriteData: 0
rd: 21
rt: 21

ID
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 10
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [13, 24, 0, 15, 28835855, 0, 7]

*** Previous 2nd EX - forwarding, MEM->EX(rs) ***
IF
pc: 0x40001c
instruction: ['00000011000011010110000000100010', 4194332]
IFID: ['00000011000011010110000000100010', 4194332]
IDEX: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, 10, 4194328, [13, 24, 0, 15, 28835855, 0, 7]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, -1, 0, 21, 21, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 0, 13, 13]
{'$0': 0, '$1': 268500992, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 0, '$12': 0, '$13': 0, '$14': 0, '$15': 0, '$16': 0, '$17': 0, '$18': 0, '$19': 0, '$20': 0, '$21': 0, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 8
_________________________
*** Previous 2nd EX - forwarding, MEM->EX(rs) ***
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: -1
ReadData: 0
rd: 21
rt: 21

0 0 7
EX
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
WriteData: 7
rd: 24
rt: 24

ID
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 15
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [24, 13, 12, 24610, 51208226, 7, 0]

IF
pc: 0x400020
instruction: ['00000000000000000111000000100000', 4194336]
IFID: ['00000000000000000111000000100000', 4194336]
IDEX: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 15, 4194332, [24, 13, 12, 24610, 51208226, 7, 0]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 7, 24, 24, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, -1, 0, 21, 21]
{'$0': 0, '$1': 268500992, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 0, '$12': 0, '$13': 0, '$14': 0, '$15': 0, '$16': 0, '$17': 0, '$18': 0, '$19': 0, '$20': 0, '$21': 0, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 9
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
ReadData: 0
rd: 24
rt: 24

0 7 0
EX
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 7
WriteData: 0
rd: 12
rt: 13

ID
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [0, 0, 14, 28704, 28704, 0, 0]

IF
pc: 0x400024
instruction: ['00000001001000000101100000100000', 4194340]
IFID: ['00000001001000000101100000100000', 4194340]
IDEX: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 4194336, [0, 0, 14, 28704, 28704, 0, 0]]
EXMEM: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 7, 0, 12, 13, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 24, 24]
{'$0': 0, '$1': 268500992, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 0, '$12': 0, '$13': 0, '$14': 0, '$15': 0, '$16': 0, '$17': 0, '$18': 0, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 10
_________________________
MEM
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 7
ReadData: 0
rd: 12
rt: 13

0 0 0
EX
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 0
WriteData: 0
rd: 14
rt: 0

ID
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [9, 0, 11, 22560, 18896928, 268500992, 0]

IF
pc: 0x400028
instruction: ['00100001101011010000000000000001', 4194344]
IFID: ['00100001101011010000000000000001', 4194344]
IDEX: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 4194340, [9, 0, 11, 22560, 18896928, 268500992, 0]]
EXMEM: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 0, 14, 0, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336]]
MEMWB: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 7, 0, 12, 13]
{'$0': 0, '$1': 268500992, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 0, '$12': 0, '$13': 0, '$14': 0, '$15': 0, '$16': 0, '$17': 0, '$18': 0, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 11
_________________________
MEM
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 0
ReadData: 0
rd: 14
rt: 0

0 268500992 0
EX
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268500992
WriteData: 0
rd: 11
rt: 0

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [13, 13, 0, 1, 28114945, 0, 0]

IF
pc: 0x40002c
instruction: ['00001000000100000000000000001100', 4194348]
IFID: ['00001000000100000000000000001100', 4194348]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194344, [13, 13, 0, 1, 28114945, 0, 0]]
EXMEM: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 268500992, 0, 11, 0, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340]]
MEMWB: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 0, 14, 0]
{'$0': 0, '$1': 268500992, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 0, '$12': 7, '$13': 0, '$14': 0, '$15': 0, '$16': 0, '$17': 0, '$18': 0, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 12
_________________________
MEM
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268500992
ReadData: 0
rd: 11
rt: 0

1 0 1
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 1
WriteData: 0
rd: 13
rt: 13

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 1}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [0, 16, 0, 12, 1048588, 0, 0]

jumping to: 0x400030
IF
pc: 0x400030
instruction: ['00010001110011001111111111111001', 4194352]
IFID: ['00010001110011001111111111111001', 4194352]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 1}, 0, 4194348, [0, 16, 0, 12, 1048588, 0, 0]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 1, 0, 13, 13, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344]]
MEMWB: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 268500992, 0, 11, 0]
{'$0': 0, '$1': 268500992, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 0, '$12': 7, '$13': 0, '$14': 0, '$15': 0, '$16': 0, '$17': 0, '$18': 0, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 13
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 1
ReadData: 0
rd: 13
rt: 13

ID
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 10
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [14, 12, 31, -7, 30212089, 0, 7]

IF
pc: 0x400034
instruction: ['10001101011100010000000000000000', 4194356]
IFID: ['10001101011100010000000000000000', 4194356]
IDEX: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, 10, 4194352, [14, 12, 31, -7, 30212089, 0, 7]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 1, 0, 13, 13, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 1, 0, 13, 13]
{'$0': 0, '$1': 268500992, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500992, '$12': 7, '$13': 0, '$14': 0, '$15': 0, '$16': 0, '$17': 0, '$18': 0, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 14
_________________________
0 0 7
EX
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
WriteData: 7
rd: 12
rt: 12

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 17, 0, 0, 24182784, 268500992, 0]

IF
pc: 0x400038
instruction: ['00100001011010110000000000000100', 4194360]
IFID: ['00100001011010110000000000000100', 4194360]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194356, [11, 17, 0, 0, 24182784, 268500992, 0]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 7, 12, 12, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 1, 0, 13, 13]
{'$0': 0, '$1': 268500992, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500992, '$12': 7, '$13': 1, '$14': 0, '$15': 0, '$16': 0, '$17': 0, '$18': 0, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 15
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
ReadData: 0
rd: 12
rt: 12

1 268500992 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268500992
WriteData: 0
rd: 17
rt: 17

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 11, 0, 4, 23789572, 268500992, 268500992]

IF
pc: 0x40003c
instruction: ['10001101011100100000000000000000', 4194364]
IFID: ['10001101011100100000000000000000', 4194364]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194360, [11, 11, 0, 4, 23789572, 268500992, 268500992]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268500992, 0, 17, 17, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 12, 12]
{'$0': 0, '$1': 268500992, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500992, '$12': 7, '$13': 1, '$14': 0, '$15': 0, '$16': 0, '$17': 0, '$18': 0, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 16
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268500992
ReadData: 9
rd: 17
rt: 17

1 268500992 4
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268500996
WriteData: 268500992
rd: 11
rt: 11

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 18, 0, 0, 24248320, 268500992, 0]

*** Forwarding EX->EX(rs) ***
IF
pc: 0x400040
instruction: ['00100001110011100000000000000001', 4194368]
IFID: ['00100001110011100000000000000001', 4194368]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194364, [11, 18, 0, 0, 24248320, 268500996, 0]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268500996, 268500992, 11, 11, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268500992, 9, 17, 17]
{'$0': 0, '$1': 268500992, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500992, '$12': 7, '$13': 1, '$14': 0, '$15': 0, '$16': 0, '$17': 0, '$18': 0, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 17
_________________________
*** Forwarding EX->EX(rs) ***
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268500996
ReadData: 0
rd: 11
rt: 11

1 268500996 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268500996
WriteData: 0
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [14, 14, 0, 1, 30277633, 0, 0]

IF
pc: 0x400044
instruction: ['00000010001100100000100000101010', 4194372]
IFID: ['00000010001100100000100000101010', 4194372]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194368, [14, 14, 0, 1, 30277633, 0, 0]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268500996, 0, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268500996, 0, 11, 11]
{'$0': 0, '$1': 268500992, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500992, '$12': 7, '$13': 1, '$14': 0, '$15': 0, '$16': 0, '$17': 9, '$18': 0, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 18
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268500996
ReadData: 15
rd: 18
rt: 18

1 0 1
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 1
WriteData: 0
rd: 14
rt: 14

ID
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 9
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [17, 18, 1, 2090, 36833322, 9, 0]

*** Forwarding, MEM->EX(rt) ***
*** Previous 2nd EX - forwarding, MEM->EX(rt) ***
IF
pc: 0x400048
instruction: ['00010100001000001111111111111001', 4194376]
IFID: ['00010100001000001111111111111001', 4194376]
IDEX: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 9, 4194372, [17, 18, 1, 2090, 36833322, 9, 15]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 1, 0, 14, 14, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268500996, 15, 18, 18]
{'$0': 0, '$1': 268500992, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500996, '$12': 7, '$13': 1, '$14': 0, '$15': 0, '$16': 0, '$17': 9, '$18': 0, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 19
_________________________
*** Forwarding, MEM->EX(rt) ***
*** Previous 2nd EX - forwarding, MEM->EX(rt) ***
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 1
ReadData: 0
rd: 14
rt: 14

0 9 15
EX
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 1
WriteData: 15
rd: 1
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 11
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [1, 0, 31, -7, 2162681, 268500992, 0]

*** Forwarding EX->EX(rs) ***
IF
pc: 0x40004c
instruction: ['10101101011100010000000000000000', 4194380]
IFID: ['10101101011100010000000000000000', 4194380]
IDEX: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, 11, 4194376, [1, 0, 31, -7, 2162681, 1, 0]]
EXMEM: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 1, 15, 1, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 1, 0, 14, 14]
{'$0': 0, '$1': 268500992, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500996, '$12': 7, '$13': 1, '$14': 0, '$15': 0, '$16': 0, '$17': 9, '$18': 15, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 20
_________________________
*** Forwarding EX->EX(rs) ***
MEM
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 1
ReadData: 0
rd: 1
rt: 18

0 1 0
EX
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: True
WriteData: 0
rd: 0
rt: 0

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 17, 0, 0, 24182784, 268500996, 9]

IF
pc: 0x400050
instruction: ['10101101011100101111111111111100', 4194384]
flushing pipeline
flushing pipeline, PC set to  0x400030
IFID: ['10101101011100101111111111111100', 4194384]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 0, 4194380, [11, 17, 0, 0, 24182784, 268500996, 9]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, True, 0, 0, 0, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376]]
MEMWB: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 1, 0, 1, 18]
{'$0': 0, '$1': 268500992, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500996, '$12': 7, '$13': 1, '$14': 1, '$15': 0, '$16': 0, '$17': 9, '$18': 15, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 21
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: True
ReadData: 0
rd: 0
rt: 0

IF
pc: 0x400030
instruction: ['00010001110011001111111111111001', 4194352]
IFID: ['00010001110011001111111111111001', 4194352]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 0, 4194380, [11, 17, 0, 0, 24182784, 268500996, 9]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, True, 0, 0, 0, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, True, 0, 0, 0]
{'$0': 0, '$1': 1, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500996, '$12': 7, '$13': 1, '$14': 1, '$15': 0, '$16': 0, '$17': 9, '$18': 15, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 22
_________________________
ID
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 10
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [14, 12, 31, -7, 30212089, 1, 7]

IF
pc: 0x400034
instruction: ['10001101011100010000000000000000', 4194356]
IFID: ['10001101011100010000000000000000', 4194356]
IDEX: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, 10, 4194352, [14, 12, 31, -7, 30212089, 1, 7]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, True, 0, 0, 0, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, True, 0, 0, 0]
{'$0': 0, '$1': 1, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500996, '$12': 7, '$13': 1, '$14': 1, '$15': 0, '$16': 0, '$17': 9, '$18': 15, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 23
_________________________
0 1 7
EX
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
WriteData: 7
rd: 12
rt: 12

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 17, 0, 0, 24182784, 268500996, 9]

IF
pc: 0x400038
instruction: ['00100001011010110000000000000100', 4194360]
IFID: ['00100001011010110000000000000100', 4194360]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194356, [11, 17, 0, 0, 24182784, 268500996, 9]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 7, 12, 12, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, True, 0, 0, 0]
{'$0': 0, '$1': 1, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500996, '$12': 7, '$13': 1, '$14': 1, '$15': 0, '$16': 0, '$17': 9, '$18': 15, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 24
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
ReadData: 0
rd: 12
rt: 12

1 268500996 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268500996
WriteData: 9
rd: 17
rt: 17

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 11, 0, 4, 23789572, 268500996, 268500996]

IF
pc: 0x40003c
instruction: ['10001101011100100000000000000000', 4194364]
IFID: ['10001101011100100000000000000000', 4194364]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194360, [11, 11, 0, 4, 23789572, 268500996, 268500996]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268500996, 9, 17, 17, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 12, 12]
{'$0': 0, '$1': 1, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500996, '$12': 7, '$13': 1, '$14': 1, '$15': 0, '$16': 0, '$17': 9, '$18': 15, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 25
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268500996
ReadData: 15
rd: 17
rt: 17

1 268500996 4
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501000
WriteData: 268500996
rd: 11
rt: 11

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 18, 0, 0, 24248320, 268500996, 15]

*** Forwarding EX->EX(rs) ***
IF
pc: 0x400040
instruction: ['00100001110011100000000000000001', 4194368]
IFID: ['00100001110011100000000000000001', 4194368]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194364, [11, 18, 0, 0, 24248320, 268501000, 15]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501000, 268500996, 11, 11, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268500996, 15, 17, 17]
{'$0': 0, '$1': 1, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500996, '$12': 7, '$13': 1, '$14': 1, '$15': 0, '$16': 0, '$17': 9, '$18': 15, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 26
_________________________
*** Forwarding EX->EX(rs) ***
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501000
ReadData: 0
rd: 11
rt: 11

1 268501000 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501000
WriteData: 15
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [14, 14, 0, 1, 30277633, 1, 1]

IF
pc: 0x400044
instruction: ['00000010001100100000100000101010', 4194372]
IFID: ['00000010001100100000100000101010', 4194372]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194368, [14, 14, 0, 1, 30277633, 1, 1]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501000, 15, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501000, 0, 11, 11]
{'$0': 0, '$1': 1, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500996, '$12': 7, '$13': 1, '$14': 1, '$15': 0, '$16': 0, '$17': 15, '$18': 15, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 27
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501000
ReadData: 6
rd: 18
rt: 18

1 1 1
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 2
WriteData: 1
rd: 14
rt: 14

ID
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 9
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [17, 18, 1, 2090, 36833322, 15, 15]

*** Forwarding, MEM->EX(rt) ***
*** Previous 2nd EX - forwarding, MEM->EX(rt) ***
IF
pc: 0x400048
instruction: ['00010100001000001111111111111001', 4194376]
IFID: ['00010100001000001111111111111001', 4194376]
IDEX: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 9, 4194372, [17, 18, 1, 2090, 36833322, 15, 6]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 2, 1, 14, 14, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501000, 6, 18, 18]
{'$0': 0, '$1': 1, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501000, '$12': 7, '$13': 1, '$14': 1, '$15': 0, '$16': 0, '$17': 15, '$18': 15, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 28
_________________________
*** Forwarding, MEM->EX(rt) ***
*** Previous 2nd EX - forwarding, MEM->EX(rt) ***
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 2
ReadData: 0
rd: 14
rt: 14

0 15 6
EX
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 0
WriteData: 6
rd: 1
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 11
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [1, 0, 31, -7, 2162681, 1, 0]

*** Forwarding EX->EX(rs) ***
IF
pc: 0x40004c
instruction: ['10101101011100010000000000000000', 4194380]
IFID: ['10101101011100010000000000000000', 4194380]
IDEX: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, 11, 4194376, [1, 0, 31, -7, 2162681, 0, 0]]
EXMEM: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 6, 1, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 2, 0, 14, 14]
{'$0': 0, '$1': 1, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501000, '$12': 7, '$13': 1, '$14': 1, '$15': 0, '$16': 0, '$17': 15, '$18': 6, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 29
_________________________
*** Forwarding EX->EX(rs) ***
MEM
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 0
ReadData: 0
rd: 1
rt: 18

0 0 0
EX
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
WriteData: 0
rd: 0
rt: 0

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 17, 0, 0, 24182784, 268501000, 15]

IF
pc: 0x400050
instruction: ['10101101011100101111111111111100', 4194384]
IFID: ['10101101011100101111111111111100', 4194384]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 0, 4194380, [11, 17, 0, 0, 24182784, 268501000, 15]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 0, 0, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376]]
MEMWB: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 0, 1, 18]
{'$0': 0, '$1': 1, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501000, '$12': 7, '$13': 1, '$14': 2, '$15': 0, '$16': 0, '$17': 15, '$18': 6, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 30
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
ReadData: 0
rd: 0
rt: 0

1 268501000 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268501000
WriteData: 15
rd: 17
rt: 17

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 18, 31, -4, 24313852, 268501000, 6]

IF
pc: 0x400054
instruction: ['00001000000100000000000000001100', 4194388]
IFID: ['00001000000100000000000000001100', 4194388]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 0, 4194384, [11, 18, 31, -4, 24313852, 268501000, 6]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501000, 15, 17, 17, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 0, 0]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501000, '$12': 7, '$13': 1, '$14': 2, '$15': 0, '$16': 0, '$17': 15, '$18': 6, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 31
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268501000
ReadData: 0
rd: 17
rt: 17

1 268501000 -4
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268500996
WriteData: 6
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 1}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [0, 16, 0, 12, 1048588, 0, 0]

jumping to: 0x400030
IF
pc: 0x400030
instruction: ['00010001110011001111111111111001', 4194352]
IFID: ['00010001110011001111111111111001', 4194352]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 1}, 0, 4194388, [0, 16, 0, 12, 1048588, 0, 0]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268500996, 6, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501000, 0, 17, 17]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501000, '$12': 7, '$13': 1, '$14': 2, '$15': 0, '$16': 0, '$17': 15, '$18': 6, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 32
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268500996
ReadData: 0
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 10
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [14, 12, 31, -7, 30212089, 2, 7]

IF
pc: 0x400034
instruction: ['10001101011100010000000000000000', 4194356]
IFID: ['10001101011100010000000000000000', 4194356]
IDEX: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, 10, 4194352, [14, 12, 31, -7, 30212089, 2, 7]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268500996, 268500996, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268500996, 0, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501000, '$12': 7, '$13': 1, '$14': 2, '$15': 0, '$16': 0, '$17': 15, '$18': 6, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 33
_________________________
0 2 7
EX
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
WriteData: 7
rd: 12
rt: 12

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 17, 0, 0, 24182784, 268501000, 15]

IF
pc: 0x400038
instruction: ['00100001011010110000000000000100', 4194360]
IFID: ['00100001011010110000000000000100', 4194360]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194356, [11, 17, 0, 0, 24182784, 268501000, 15]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 7, 12, 12, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268500996, 0, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501000, '$12': 7, '$13': 1, '$14': 2, '$15': 0, '$16': 0, '$17': 15, '$18': 6, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 34
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
ReadData: 0
rd: 12
rt: 12

1 268501000 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501000
WriteData: 15
rd: 17
rt: 17

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 11, 0, 4, 23789572, 268501000, 268501000]

IF
pc: 0x40003c
instruction: ['10001101011100100000000000000000', 4194364]
IFID: ['10001101011100100000000000000000', 4194364]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194360, [11, 11, 0, 4, 23789572, 268501000, 268501000]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501000, 15, 17, 17, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 12, 12]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501000, '$12': 7, '$13': 1, '$14': 2, '$15': 0, '$16': 0, '$17': 15, '$18': 6, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 35
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501000
ReadData: 15
rd: 17
rt: 17

1 268501000 4
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501004
WriteData: 268501000
rd: 11
rt: 11

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 18, 0, 0, 24248320, 268501000, 6]

*** Forwarding EX->EX(rs) ***
IF
pc: 0x400040
instruction: ['00100001110011100000000000000001', 4194368]
IFID: ['00100001110011100000000000000001', 4194368]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194364, [11, 18, 0, 0, 24248320, 268501004, 6]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501004, 268501000, 11, 11, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501000, 15, 17, 17]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501000, '$12': 7, '$13': 1, '$14': 2, '$15': 0, '$16': 0, '$17': 15, '$18': 6, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 36
_________________________
*** Forwarding EX->EX(rs) ***
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501004
ReadData: 0
rd: 11
rt: 11

1 268501004 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501004
WriteData: 6
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [14, 14, 0, 1, 30277633, 2, 2]

IF
pc: 0x400044
instruction: ['00000010001100100000100000101010', 4194372]
IFID: ['00000010001100100000100000101010', 4194372]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194368, [14, 14, 0, 1, 30277633, 2, 2]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501004, 6, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501004, 0, 11, 11]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501000, '$12': 7, '$13': 1, '$14': 2, '$15': 0, '$16': 0, '$17': 15, '$18': 6, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 37
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501004
ReadData: 5
rd: 18
rt: 18

1 2 1
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 3
WriteData: 2
rd: 14
rt: 14

ID
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 9
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [17, 18, 1, 2090, 36833322, 15, 6]

*** Forwarding, MEM->EX(rt) ***
*** Previous 2nd EX - forwarding, MEM->EX(rt) ***
IF
pc: 0x400048
instruction: ['00010100001000001111111111111001', 4194376]
IFID: ['00010100001000001111111111111001', 4194376]
IDEX: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 9, 4194372, [17, 18, 1, 2090, 36833322, 15, 5]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 3, 2, 14, 14, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501004, 5, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501004, '$12': 7, '$13': 1, '$14': 2, '$15': 0, '$16': 0, '$17': 15, '$18': 6, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 38
_________________________
*** Forwarding, MEM->EX(rt) ***
*** Previous 2nd EX - forwarding, MEM->EX(rt) ***
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 3
ReadData: 0
rd: 14
rt: 14

0 15 5
EX
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 0
WriteData: 5
rd: 1
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 11
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [1, 0, 31, -7, 2162681, 0, 0]

*** Forwarding EX->EX(rs) ***
IF
pc: 0x40004c
instruction: ['10101101011100010000000000000000', 4194380]
IFID: ['10101101011100010000000000000000', 4194380]
IDEX: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, 11, 4194376, [1, 0, 31, -7, 2162681, 0, 0]]
EXMEM: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 5, 1, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 3, 0, 14, 14]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501004, '$12': 7, '$13': 1, '$14': 2, '$15': 0, '$16': 0, '$17': 15, '$18': 5, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 39
_________________________
*** Forwarding EX->EX(rs) ***
MEM
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 0
ReadData: 0
rd: 1
rt: 18

0 0 0
EX
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
WriteData: 0
rd: 0
rt: 0

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 17, 0, 0, 24182784, 268501004, 15]

IF
pc: 0x400050
instruction: ['10101101011100101111111111111100', 4194384]
IFID: ['10101101011100101111111111111100', 4194384]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 0, 4194380, [11, 17, 0, 0, 24182784, 268501004, 15]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 0, 0, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376]]
MEMWB: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 0, 1, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501004, '$12': 7, '$13': 1, '$14': 3, '$15': 0, '$16': 0, '$17': 15, '$18': 5, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 40
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
ReadData: 0
rd: 0
rt: 0

1 268501004 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268501004
WriteData: 15
rd: 17
rt: 17

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 18, 31, -4, 24313852, 268501004, 5]

IF
pc: 0x400054
instruction: ['00001000000100000000000000001100', 4194388]
IFID: ['00001000000100000000000000001100', 4194388]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 0, 4194384, [11, 18, 31, -4, 24313852, 268501004, 5]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501004, 15, 17, 17, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 0, 0]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501004, '$12': 7, '$13': 1, '$14': 3, '$15': 0, '$16': 0, '$17': 15, '$18': 5, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 41
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268501004
ReadData: 0
rd: 17
rt: 17

1 268501004 -4
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268501000
WriteData: 5
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 1}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [0, 16, 0, 12, 1048588, 0, 0]

jumping to: 0x400030
IF
pc: 0x400030
instruction: ['00010001110011001111111111111001', 4194352]
IFID: ['00010001110011001111111111111001', 4194352]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 1}, 0, 4194388, [0, 16, 0, 12, 1048588, 0, 0]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501000, 5, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501004, 0, 17, 17]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501004, '$12': 7, '$13': 1, '$14': 3, '$15': 0, '$16': 0, '$17': 15, '$18': 5, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 42
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268501000
ReadData: 0
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 10
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [14, 12, 31, -7, 30212089, 3, 7]

IF
pc: 0x400034
instruction: ['10001101011100010000000000000000', 4194356]
IFID: ['10001101011100010000000000000000', 4194356]
IDEX: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, 10, 4194352, [14, 12, 31, -7, 30212089, 3, 7]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501000, 268501000, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501000, 0, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501004, '$12': 7, '$13': 1, '$14': 3, '$15': 0, '$16': 0, '$17': 15, '$18': 5, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 43
_________________________
0 3 7
EX
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
WriteData: 7
rd: 12
rt: 12

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 17, 0, 0, 24182784, 268501004, 15]

IF
pc: 0x400038
instruction: ['00100001011010110000000000000100', 4194360]
IFID: ['00100001011010110000000000000100', 4194360]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194356, [11, 17, 0, 0, 24182784, 268501004, 15]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 7, 12, 12, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501000, 0, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501004, '$12': 7, '$13': 1, '$14': 3, '$15': 0, '$16': 0, '$17': 15, '$18': 5, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 44
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
ReadData: 0
rd: 12
rt: 12

1 268501004 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501004
WriteData: 15
rd: 17
rt: 17

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 11, 0, 4, 23789572, 268501004, 268501004]

IF
pc: 0x40003c
instruction: ['10001101011100100000000000000000', 4194364]
IFID: ['10001101011100100000000000000000', 4194364]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194360, [11, 11, 0, 4, 23789572, 268501004, 268501004]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501004, 15, 17, 17, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 12, 12]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501004, '$12': 7, '$13': 1, '$14': 3, '$15': 0, '$16': 0, '$17': 15, '$18': 5, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 45
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501004
ReadData: 15
rd: 17
rt: 17

1 268501004 4
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501008
WriteData: 268501004
rd: 11
rt: 11

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 18, 0, 0, 24248320, 268501004, 5]

*** Forwarding EX->EX(rs) ***
IF
pc: 0x400040
instruction: ['00100001110011100000000000000001', 4194368]
IFID: ['00100001110011100000000000000001', 4194368]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194364, [11, 18, 0, 0, 24248320, 268501008, 5]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501008, 268501004, 11, 11, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501004, 15, 17, 17]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501004, '$12': 7, '$13': 1, '$14': 3, '$15': 0, '$16': 0, '$17': 15, '$18': 5, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 46
_________________________
*** Forwarding EX->EX(rs) ***
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501008
ReadData: 0
rd: 11
rt: 11

1 268501008 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501008
WriteData: 5
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [14, 14, 0, 1, 30277633, 3, 3]

IF
pc: 0x400044
instruction: ['00000010001100100000100000101010', 4194372]
IFID: ['00000010001100100000100000101010', 4194372]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194368, [14, 14, 0, 1, 30277633, 3, 3]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501008, 5, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501008, 0, 11, 11]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501004, '$12': 7, '$13': 1, '$14': 3, '$15': 0, '$16': 0, '$17': 15, '$18': 5, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 47
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501008
ReadData: 4
rd: 18
rt: 18

1 3 1
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 4
WriteData: 3
rd: 14
rt: 14

ID
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 9
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [17, 18, 1, 2090, 36833322, 15, 5]

*** Forwarding, MEM->EX(rt) ***
*** Previous 2nd EX - forwarding, MEM->EX(rt) ***
IF
pc: 0x400048
instruction: ['00010100001000001111111111111001', 4194376]
IFID: ['00010100001000001111111111111001', 4194376]
IDEX: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 9, 4194372, [17, 18, 1, 2090, 36833322, 15, 4]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 4, 3, 14, 14, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501008, 4, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501008, '$12': 7, '$13': 1, '$14': 3, '$15': 0, '$16': 0, '$17': 15, '$18': 5, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 48
_________________________
*** Forwarding, MEM->EX(rt) ***
*** Previous 2nd EX - forwarding, MEM->EX(rt) ***
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 4
ReadData: 0
rd: 14
rt: 14

0 15 4
EX
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 0
WriteData: 4
rd: 1
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 11
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [1, 0, 31, -7, 2162681, 0, 0]

*** Forwarding EX->EX(rs) ***
IF
pc: 0x40004c
instruction: ['10101101011100010000000000000000', 4194380]
IFID: ['10101101011100010000000000000000', 4194380]
IDEX: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, 11, 4194376, [1, 0, 31, -7, 2162681, 0, 0]]
EXMEM: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 4, 1, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 4, 0, 14, 14]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501008, '$12': 7, '$13': 1, '$14': 3, '$15': 0, '$16': 0, '$17': 15, '$18': 4, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 49
_________________________
*** Forwarding EX->EX(rs) ***
MEM
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 0
ReadData: 0
rd: 1
rt: 18

0 0 0
EX
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
WriteData: 0
rd: 0
rt: 0

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 17, 0, 0, 24182784, 268501008, 15]

IF
pc: 0x400050
instruction: ['10101101011100101111111111111100', 4194384]
IFID: ['10101101011100101111111111111100', 4194384]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 0, 4194380, [11, 17, 0, 0, 24182784, 268501008, 15]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 0, 0, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376]]
MEMWB: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 0, 1, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501008, '$12': 7, '$13': 1, '$14': 4, '$15': 0, '$16': 0, '$17': 15, '$18': 4, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 50
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
ReadData: 0
rd: 0
rt: 0

1 268501008 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268501008
WriteData: 15
rd: 17
rt: 17

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 18, 31, -4, 24313852, 268501008, 4]

IF
pc: 0x400054
instruction: ['00001000000100000000000000001100', 4194388]
IFID: ['00001000000100000000000000001100', 4194388]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 0, 4194384, [11, 18, 31, -4, 24313852, 268501008, 4]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501008, 15, 17, 17, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 0, 0]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501008, '$12': 7, '$13': 1, '$14': 4, '$15': 0, '$16': 0, '$17': 15, '$18': 4, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 51
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268501008
ReadData: 0
rd: 17
rt: 17

1 268501008 -4
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268501004
WriteData: 4
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 1}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [0, 16, 0, 12, 1048588, 0, 0]

jumping to: 0x400030
IF
pc: 0x400030
instruction: ['00010001110011001111111111111001', 4194352]
IFID: ['00010001110011001111111111111001', 4194352]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 1}, 0, 4194388, [0, 16, 0, 12, 1048588, 0, 0]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501004, 4, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501008, 0, 17, 17]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501008, '$12': 7, '$13': 1, '$14': 4, '$15': 0, '$16': 0, '$17': 15, '$18': 4, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 52
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268501004
ReadData: 0
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 10
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [14, 12, 31, -7, 30212089, 4, 7]

IF
pc: 0x400034
instruction: ['10001101011100010000000000000000', 4194356]
IFID: ['10001101011100010000000000000000', 4194356]
IDEX: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, 10, 4194352, [14, 12, 31, -7, 30212089, 4, 7]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501004, 268501004, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501004, 0, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501008, '$12': 7, '$13': 1, '$14': 4, '$15': 0, '$16': 0, '$17': 15, '$18': 4, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 53
_________________________
0 4 7
EX
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
WriteData: 7
rd: 12
rt: 12

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 17, 0, 0, 24182784, 268501008, 15]

IF
pc: 0x400038
instruction: ['00100001011010110000000000000100', 4194360]
IFID: ['00100001011010110000000000000100', 4194360]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194356, [11, 17, 0, 0, 24182784, 268501008, 15]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 7, 12, 12, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501004, 0, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501008, '$12': 7, '$13': 1, '$14': 4, '$15': 0, '$16': 0, '$17': 15, '$18': 4, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 54
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
ReadData: 0
rd: 12
rt: 12

1 268501008 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501008
WriteData: 15
rd: 17
rt: 17

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 11, 0, 4, 23789572, 268501008, 268501008]

IF
pc: 0x40003c
instruction: ['10001101011100100000000000000000', 4194364]
IFID: ['10001101011100100000000000000000', 4194364]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194360, [11, 11, 0, 4, 23789572, 268501008, 268501008]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501008, 15, 17, 17, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 12, 12]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501008, '$12': 7, '$13': 1, '$14': 4, '$15': 0, '$16': 0, '$17': 15, '$18': 4, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 55
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501008
ReadData: 15
rd: 17
rt: 17

1 268501008 4
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501012
WriteData: 268501008
rd: 11
rt: 11

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 18, 0, 0, 24248320, 268501008, 4]

*** Forwarding EX->EX(rs) ***
IF
pc: 0x400040
instruction: ['00100001110011100000000000000001', 4194368]
IFID: ['00100001110011100000000000000001', 4194368]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194364, [11, 18, 0, 0, 24248320, 268501012, 4]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501012, 268501008, 11, 11, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501008, 15, 17, 17]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501008, '$12': 7, '$13': 1, '$14': 4, '$15': 0, '$16': 0, '$17': 15, '$18': 4, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 56
_________________________
*** Forwarding EX->EX(rs) ***
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501012
ReadData: 0
rd: 11
rt: 11

1 268501012 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501012
WriteData: 4
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [14, 14, 0, 1, 30277633, 4, 4]

IF
pc: 0x400044
instruction: ['00000010001100100000100000101010', 4194372]
IFID: ['00000010001100100000100000101010', 4194372]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194368, [14, 14, 0, 1, 30277633, 4, 4]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501012, 4, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501012, 0, 11, 11]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501008, '$12': 7, '$13': 1, '$14': 4, '$15': 0, '$16': 0, '$17': 15, '$18': 4, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 57
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501012
ReadData: 3
rd: 18
rt: 18

1 4 1
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 5
WriteData: 4
rd: 14
rt: 14

ID
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 9
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [17, 18, 1, 2090, 36833322, 15, 4]

*** Forwarding, MEM->EX(rt) ***
*** Previous 2nd EX - forwarding, MEM->EX(rt) ***
IF
pc: 0x400048
instruction: ['00010100001000001111111111111001', 4194376]
IFID: ['00010100001000001111111111111001', 4194376]
IDEX: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 9, 4194372, [17, 18, 1, 2090, 36833322, 15, 3]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 5, 4, 14, 14, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501012, 3, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501012, '$12': 7, '$13': 1, '$14': 4, '$15': 0, '$16': 0, '$17': 15, '$18': 4, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 58
_________________________
*** Forwarding, MEM->EX(rt) ***
*** Previous 2nd EX - forwarding, MEM->EX(rt) ***
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 5
ReadData: 0
rd: 14
rt: 14

0 15 3
EX
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 0
WriteData: 3
rd: 1
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 11
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [1, 0, 31, -7, 2162681, 0, 0]

*** Forwarding EX->EX(rs) ***
IF
pc: 0x40004c
instruction: ['10101101011100010000000000000000', 4194380]
IFID: ['10101101011100010000000000000000', 4194380]
IDEX: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, 11, 4194376, [1, 0, 31, -7, 2162681, 0, 0]]
EXMEM: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 3, 1, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 5, 0, 14, 14]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501012, '$12': 7, '$13': 1, '$14': 4, '$15': 0, '$16': 0, '$17': 15, '$18': 3, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 59
_________________________
*** Forwarding EX->EX(rs) ***
MEM
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 0
ReadData: 0
rd: 1
rt: 18

0 0 0
EX
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
WriteData: 0
rd: 0
rt: 0

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 17, 0, 0, 24182784, 268501012, 15]

IF
pc: 0x400050
instruction: ['10101101011100101111111111111100', 4194384]
IFID: ['10101101011100101111111111111100', 4194384]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 0, 4194380, [11, 17, 0, 0, 24182784, 268501012, 15]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 0, 0, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376]]
MEMWB: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 0, 1, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501012, '$12': 7, '$13': 1, '$14': 5, '$15': 0, '$16': 0, '$17': 15, '$18': 3, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 60
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
ReadData: 0
rd: 0
rt: 0

1 268501012 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268501012
WriteData: 15
rd: 17
rt: 17

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 18, 31, -4, 24313852, 268501012, 3]

IF
pc: 0x400054
instruction: ['00001000000100000000000000001100', 4194388]
IFID: ['00001000000100000000000000001100', 4194388]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 0, 4194384, [11, 18, 31, -4, 24313852, 268501012, 3]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501012, 15, 17, 17, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 0, 0]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501012, '$12': 7, '$13': 1, '$14': 5, '$15': 0, '$16': 0, '$17': 15, '$18': 3, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 61
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268501012
ReadData: 0
rd: 17
rt: 17

1 268501012 -4
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268501008
WriteData: 3
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 1}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [0, 16, 0, 12, 1048588, 0, 0]

jumping to: 0x400030
IF
pc: 0x400030
instruction: ['00010001110011001111111111111001', 4194352]
IFID: ['00010001110011001111111111111001', 4194352]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 1}, 0, 4194388, [0, 16, 0, 12, 1048588, 0, 0]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501008, 3, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501012, 0, 17, 17]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501012, '$12': 7, '$13': 1, '$14': 5, '$15': 0, '$16': 0, '$17': 15, '$18': 3, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 62
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268501008
ReadData: 0
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 10
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [14, 12, 31, -7, 30212089, 5, 7]

IF
pc: 0x400034
instruction: ['10001101011100010000000000000000', 4194356]
IFID: ['10001101011100010000000000000000', 4194356]
IDEX: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, 10, 4194352, [14, 12, 31, -7, 30212089, 5, 7]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501008, 268501008, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501008, 0, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501012, '$12': 7, '$13': 1, '$14': 5, '$15': 0, '$16': 0, '$17': 15, '$18': 3, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 63
_________________________
0 5 7
EX
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
WriteData: 7
rd: 12
rt: 12

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 17, 0, 0, 24182784, 268501012, 15]

IF
pc: 0x400038
instruction: ['00100001011010110000000000000100', 4194360]
IFID: ['00100001011010110000000000000100', 4194360]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194356, [11, 17, 0, 0, 24182784, 268501012, 15]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 7, 12, 12, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501008, 0, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501012, '$12': 7, '$13': 1, '$14': 5, '$15': 0, '$16': 0, '$17': 15, '$18': 3, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 64
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
ReadData: 0
rd: 12
rt: 12

1 268501012 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501012
WriteData: 15
rd: 17
rt: 17

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 11, 0, 4, 23789572, 268501012, 268501012]

IF
pc: 0x40003c
instruction: ['10001101011100100000000000000000', 4194364]
IFID: ['10001101011100100000000000000000', 4194364]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194360, [11, 11, 0, 4, 23789572, 268501012, 268501012]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501012, 15, 17, 17, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 12, 12]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501012, '$12': 7, '$13': 1, '$14': 5, '$15': 0, '$16': 0, '$17': 15, '$18': 3, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 65
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501012
ReadData: 15
rd: 17
rt: 17

1 268501012 4
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501016
WriteData: 268501012
rd: 11
rt: 11

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 18, 0, 0, 24248320, 268501012, 3]

*** Forwarding EX->EX(rs) ***
IF
pc: 0x400040
instruction: ['00100001110011100000000000000001', 4194368]
IFID: ['00100001110011100000000000000001', 4194368]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194364, [11, 18, 0, 0, 24248320, 268501016, 3]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501016, 268501012, 11, 11, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501012, 15, 17, 17]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501012, '$12': 7, '$13': 1, '$14': 5, '$15': 0, '$16': 0, '$17': 15, '$18': 3, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 66
_________________________
*** Forwarding EX->EX(rs) ***
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501016
ReadData: 0
rd: 11
rt: 11

1 268501016 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501016
WriteData: 3
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [14, 14, 0, 1, 30277633, 5, 5]

IF
pc: 0x400044
instruction: ['00000010001100100000100000101010', 4194372]
IFID: ['00000010001100100000100000101010', 4194372]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194368, [14, 14, 0, 1, 30277633, 5, 5]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501016, 3, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501016, 0, 11, 11]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501012, '$12': 7, '$13': 1, '$14': 5, '$15': 0, '$16': 0, '$17': 15, '$18': 3, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 67
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501016
ReadData: 2
rd: 18
rt: 18

1 5 1
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 6
WriteData: 5
rd: 14
rt: 14

ID
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 9
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [17, 18, 1, 2090, 36833322, 15, 3]

*** Forwarding, MEM->EX(rt) ***
*** Previous 2nd EX - forwarding, MEM->EX(rt) ***
IF
pc: 0x400048
instruction: ['00010100001000001111111111111001', 4194376]
IFID: ['00010100001000001111111111111001', 4194376]
IDEX: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 9, 4194372, [17, 18, 1, 2090, 36833322, 15, 2]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 6, 5, 14, 14, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501016, 2, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501016, '$12': 7, '$13': 1, '$14': 5, '$15': 0, '$16': 0, '$17': 15, '$18': 3, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 68
_________________________
*** Forwarding, MEM->EX(rt) ***
*** Previous 2nd EX - forwarding, MEM->EX(rt) ***
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 6
ReadData: 0
rd: 14
rt: 14

0 15 2
EX
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 0
WriteData: 2
rd: 1
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 11
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [1, 0, 31, -7, 2162681, 0, 0]

*** Forwarding EX->EX(rs) ***
IF
pc: 0x40004c
instruction: ['10101101011100010000000000000000', 4194380]
IFID: ['10101101011100010000000000000000', 4194380]
IDEX: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, 11, 4194376, [1, 0, 31, -7, 2162681, 0, 0]]
EXMEM: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 2, 1, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 6, 0, 14, 14]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501016, '$12': 7, '$13': 1, '$14': 5, '$15': 0, '$16': 0, '$17': 15, '$18': 2, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 69
_________________________
*** Forwarding EX->EX(rs) ***
MEM
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 0
ReadData: 0
rd: 1
rt: 18

0 0 0
EX
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
WriteData: 0
rd: 0
rt: 0

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 17, 0, 0, 24182784, 268501016, 15]

IF
pc: 0x400050
instruction: ['10101101011100101111111111111100', 4194384]
IFID: ['10101101011100101111111111111100', 4194384]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 0, 4194380, [11, 17, 0, 0, 24182784, 268501016, 15]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 0, 0, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376]]
MEMWB: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 0, 1, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501016, '$12': 7, '$13': 1, '$14': 6, '$15': 0, '$16': 0, '$17': 15, '$18': 2, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 70
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
ReadData: 0
rd: 0
rt: 0

1 268501016 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268501016
WriteData: 15
rd: 17
rt: 17

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 18, 31, -4, 24313852, 268501016, 2]

IF
pc: 0x400054
instruction: ['00001000000100000000000000001100', 4194388]
IFID: ['00001000000100000000000000001100', 4194388]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 0, 4194384, [11, 18, 31, -4, 24313852, 268501016, 2]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501016, 15, 17, 17, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 0, 0]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501016, '$12': 7, '$13': 1, '$14': 6, '$15': 0, '$16': 0, '$17': 15, '$18': 2, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 71
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268501016
ReadData: 0
rd: 17
rt: 17

1 268501016 -4
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268501012
WriteData: 2
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 1}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [0, 16, 0, 12, 1048588, 0, 0]

jumping to: 0x400030
IF
pc: 0x400030
instruction: ['00010001110011001111111111111001', 4194352]
IFID: ['00010001110011001111111111111001', 4194352]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 1}, 0, 4194388, [0, 16, 0, 12, 1048588, 0, 0]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501012, 2, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501016, 0, 17, 17]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501016, '$12': 7, '$13': 1, '$14': 6, '$15': 0, '$16': 0, '$17': 15, '$18': 2, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 72
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268501012
ReadData: 0
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 10
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [14, 12, 31, -7, 30212089, 6, 7]

IF
pc: 0x400034
instruction: ['10001101011100010000000000000000', 4194356]
IFID: ['10001101011100010000000000000000', 4194356]
IDEX: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, 10, 4194352, [14, 12, 31, -7, 30212089, 6, 7]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501012, 268501012, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501012, 0, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501016, '$12': 7, '$13': 1, '$14': 6, '$15': 0, '$16': 0, '$17': 15, '$18': 2, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 73
_________________________
0 6 7
EX
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
WriteData: 7
rd: 12
rt: 12

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 17, 0, 0, 24182784, 268501016, 15]

IF
pc: 0x400038
instruction: ['00100001011010110000000000000100', 4194360]
IFID: ['00100001011010110000000000000100', 4194360]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194356, [11, 17, 0, 0, 24182784, 268501016, 15]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 7, 12, 12, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501012, 0, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501016, '$12': 7, '$13': 1, '$14': 6, '$15': 0, '$16': 0, '$17': 15, '$18': 2, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 74
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
ReadData: 0
rd: 12
rt: 12

1 268501016 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501016
WriteData: 15
rd: 17
rt: 17

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 11, 0, 4, 23789572, 268501016, 268501016]

IF
pc: 0x40003c
instruction: ['10001101011100100000000000000000', 4194364]
IFID: ['10001101011100100000000000000000', 4194364]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194360, [11, 11, 0, 4, 23789572, 268501016, 268501016]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501016, 15, 17, 17, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 12, 12]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501016, '$12': 7, '$13': 1, '$14': 6, '$15': 0, '$16': 0, '$17': 15, '$18': 2, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 75
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501016
ReadData: 15
rd: 17
rt: 17

1 268501016 4
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501020
WriteData: 268501016
rd: 11
rt: 11

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 18, 0, 0, 24248320, 268501016, 2]

*** Forwarding EX->EX(rs) ***
IF
pc: 0x400040
instruction: ['00100001110011100000000000000001', 4194368]
IFID: ['00100001110011100000000000000001', 4194368]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194364, [11, 18, 0, 0, 24248320, 268501020, 2]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501020, 268501016, 11, 11, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501016, 15, 17, 17]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501016, '$12': 7, '$13': 1, '$14': 6, '$15': 0, '$16': 0, '$17': 15, '$18': 2, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 76
_________________________
*** Forwarding EX->EX(rs) ***
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501020
ReadData: 0
rd: 11
rt: 11

1 268501020 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501020
WriteData: 2
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [14, 14, 0, 1, 30277633, 6, 6]

IF
pc: 0x400044
instruction: ['00000010001100100000100000101010', 4194372]
IFID: ['00000010001100100000100000101010', 4194372]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194368, [14, 14, 0, 1, 30277633, 6, 6]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501020, 2, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501020, 0, 11, 11]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501016, '$12': 7, '$13': 1, '$14': 6, '$15': 0, '$16': 0, '$17': 15, '$18': 2, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 77
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501020
ReadData: 1
rd: 18
rt: 18

1 6 1
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 7
WriteData: 6
rd: 14
rt: 14

ID
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 9
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [17, 18, 1, 2090, 36833322, 15, 2]

*** Forwarding, MEM->EX(rt) ***
*** Previous 2nd EX - forwarding, MEM->EX(rt) ***
IF
pc: 0x400048
instruction: ['00010100001000001111111111111001', 4194376]
IFID: ['00010100001000001111111111111001', 4194376]
IDEX: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 9, 4194372, [17, 18, 1, 2090, 36833322, 15, 1]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 7, 6, 14, 14, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501020, 1, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501020, '$12': 7, '$13': 1, '$14': 6, '$15': 0, '$16': 0, '$17': 15, '$18': 2, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 78
_________________________
*** Forwarding, MEM->EX(rt) ***
*** Previous 2nd EX - forwarding, MEM->EX(rt) ***
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 7
ReadData: 0
rd: 14
rt: 14

0 15 1
EX
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 0
WriteData: 1
rd: 1
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 11
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [1, 0, 31, -7, 2162681, 0, 0]

*** Forwarding EX->EX(rs) ***
IF
pc: 0x40004c
instruction: ['10101101011100010000000000000000', 4194380]
IFID: ['10101101011100010000000000000000', 4194380]
IDEX: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, 11, 4194376, [1, 0, 31, -7, 2162681, 0, 0]]
EXMEM: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 1, 1, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 7, 0, 14, 14]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501020, '$12': 7, '$13': 1, '$14': 6, '$15': 0, '$16': 0, '$17': 15, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 79
_________________________
*** Forwarding EX->EX(rs) ***
MEM
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 0
ReadData: 0
rd: 1
rt: 18

0 0 0
EX
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
WriteData: 0
rd: 0
rt: 0

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 17, 0, 0, 24182784, 268501020, 15]

IF
pc: 0x400050
instruction: ['10101101011100101111111111111100', 4194384]
IFID: ['10101101011100101111111111111100', 4194384]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 0, 4194380, [11, 17, 0, 0, 24182784, 268501020, 15]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 0, 0, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376]]
MEMWB: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 0, 1, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501020, '$12': 7, '$13': 1, '$14': 7, '$15': 0, '$16': 0, '$17': 15, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 80
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
ReadData: 0
rd: 0
rt: 0

1 268501020 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268501020
WriteData: 15
rd: 17
rt: 17

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 18, 31, -4, 24313852, 268501020, 1]

IF
pc: 0x400054
instruction: ['00001000000100000000000000001100', 4194388]
IFID: ['00001000000100000000000000001100', 4194388]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 0, 4194384, [11, 18, 31, -4, 24313852, 268501020, 1]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501020, 15, 17, 17, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 0, 0]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501020, '$12': 7, '$13': 1, '$14': 7, '$15': 0, '$16': 0, '$17': 15, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 81
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268501020
ReadData: 0
rd: 17
rt: 17

1 268501020 -4
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268501016
WriteData: 1
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 1}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [0, 16, 0, 12, 1048588, 0, 0]

jumping to: 0x400030
IF
pc: 0x400030
instruction: ['00010001110011001111111111111001', 4194352]
IFID: ['00010001110011001111111111111001', 4194352]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 1}, 0, 4194388, [0, 16, 0, 12, 1048588, 0, 0]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501016, 1, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501020, 0, 17, 17]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501020, '$12': 7, '$13': 1, '$14': 7, '$15': 0, '$16': 0, '$17': 15, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 82
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268501016
ReadData: 0
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 10
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [14, 12, 31, -7, 30212089, 7, 7]

IF
pc: 0x400034
instruction: ['10001101011100010000000000000000', 4194356]
IFID: ['10001101011100010000000000000000', 4194356]
IDEX: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, 10, 4194352, [14, 12, 31, -7, 30212089, 7, 7]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501016, 268501016, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501016, 0, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501020, '$12': 7, '$13': 1, '$14': 7, '$15': 0, '$16': 0, '$17': 15, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 83
_________________________
0 7 7
EX
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: True
WriteData: 7
rd: 12
rt: 12

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 17, 0, 0, 24182784, 268501020, 15]

IF
pc: 0x400038
instruction: ['00100001011010110000000000000100', 4194360]
flushing pipeline
flushing pipeline, PC set to  0x400018
IFID: ['00100001011010110000000000000100', 4194360]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194356, [11, 17, 0, 0, 24182784, 268501020, 15]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, True, 7, 12, 12, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501016, 0, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501020, '$12': 7, '$13': 1, '$14': 7, '$15': 0, '$16': 0, '$17': 15, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 84
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: True
ReadData: 0
rd: 12
rt: 12

IF
pc: 0x400018
instruction: ['00010001101110000000000000001111', 4194328]
IFID: ['00010001101110000000000000001111', 4194328]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194356, [11, 17, 0, 0, 24182784, 268501020, 15]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, True, 7, 12, 12, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, True, 0, 12, 12]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501020, '$12': 7, '$13': 1, '$14': 7, '$15': 0, '$16': 0, '$17': 15, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 85
_________________________
ID
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 10
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [13, 24, 0, 15, 28835855, 1, 7]

IF
pc: 0x40001c
instruction: ['00000011000011010110000000100010', 4194332]
IFID: ['00000011000011010110000000100010', 4194332]
IDEX: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, 10, 4194328, [13, 24, 0, 15, 28835855, 1, 7]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, True, 7, 12, 12, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, True, 0, 12, 12]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501020, '$12': 7, '$13': 1, '$14': 7, '$15': 0, '$16': 0, '$17': 15, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 86
_________________________
0 1 7
EX
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
WriteData: 7
rd: 24
rt: 24

ID
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 15
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [24, 13, 12, 24610, 51208226, 7, 1]

IF
pc: 0x400020
instruction: ['00000000000000000111000000100000', 4194336]
IFID: ['00000000000000000111000000100000', 4194336]
IDEX: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 15, 4194332, [24, 13, 12, 24610, 51208226, 7, 1]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 7, 24, 24, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, True, 0, 12, 12]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501020, '$12': 7, '$13': 1, '$14': 7, '$15': 0, '$16': 0, '$17': 15, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 87
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
ReadData: 0
rd: 24
rt: 24

0 7 1
EX
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 6
WriteData: 1
rd: 12
rt: 13

ID
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [0, 0, 14, 28704, 28704, 0, 0]

IF
pc: 0x400024
instruction: ['00000001001000000101100000100000', 4194340]
IFID: ['00000001001000000101100000100000', 4194340]
IDEX: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 4194336, [0, 0, 14, 28704, 28704, 0, 0]]
EXMEM: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 6, 1, 12, 13, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 24, 24]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501020, '$12': 7, '$13': 1, '$14': 7, '$15': 0, '$16': 0, '$17': 15, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 88
_________________________
MEM
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 6
ReadData: 0
rd: 12
rt: 13

0 0 0
EX
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 0
WriteData: 0
rd: 14
rt: 0

ID
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [9, 0, 11, 22560, 18896928, 268500992, 0]

IF
pc: 0x400028
instruction: ['00100001101011010000000000000001', 4194344]
IFID: ['00100001101011010000000000000001', 4194344]
IDEX: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 4194340, [9, 0, 11, 22560, 18896928, 268500992, 0]]
EXMEM: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 0, 14, 0, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336]]
MEMWB: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 6, 0, 12, 13]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501020, '$12': 7, '$13': 1, '$14': 7, '$15': 0, '$16': 0, '$17': 15, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 89
_________________________
MEM
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 0
ReadData: 0
rd: 14
rt: 0

0 268500992 0
EX
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268500992
WriteData: 0
rd: 11
rt: 0

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [13, 13, 0, 1, 28114945, 1, 1]

IF
pc: 0x40002c
instruction: ['00001000000100000000000000001100', 4194348]
IFID: ['00001000000100000000000000001100', 4194348]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194344, [13, 13, 0, 1, 28114945, 1, 1]]
EXMEM: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 268500992, 0, 11, 0, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340]]
MEMWB: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 0, 14, 0]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501020, '$12': 6, '$13': 1, '$14': 7, '$15': 0, '$16': 0, '$17': 15, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 90
_________________________
MEM
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268500992
ReadData: 0
rd: 11
rt: 0

1 1 1
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 2
WriteData: 1
rd: 13
rt: 13

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 1}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [0, 16, 0, 12, 1048588, 0, 0]

jumping to: 0x400030
IF
pc: 0x400030
instruction: ['00010001110011001111111111111001', 4194352]
IFID: ['00010001110011001111111111111001', 4194352]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 1}, 0, 4194348, [0, 16, 0, 12, 1048588, 0, 0]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 2, 1, 13, 13, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344]]
MEMWB: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 268500992, 0, 11, 0]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501020, '$12': 6, '$13': 1, '$14': 0, '$15': 0, '$16': 0, '$17': 15, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 91
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 2
ReadData: 0
rd: 13
rt: 13

ID
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 10
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [14, 12, 31, -7, 30212089, 0, 6]

IF
pc: 0x400034
instruction: ['10001101011100010000000000000000', 4194356]
IFID: ['10001101011100010000000000000000', 4194356]
IDEX: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, 10, 4194352, [14, 12, 31, -7, 30212089, 0, 6]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 2, 1, 13, 13, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 2, 0, 13, 13]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500992, '$12': 6, '$13': 1, '$14': 0, '$15': 0, '$16': 0, '$17': 15, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 92
_________________________
0 0 6
EX
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
WriteData: 6
rd: 12
rt: 12

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 17, 0, 0, 24182784, 268500992, 15]

IF
pc: 0x400038
instruction: ['00100001011010110000000000000100', 4194360]
IFID: ['00100001011010110000000000000100', 4194360]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194356, [11, 17, 0, 0, 24182784, 268500992, 15]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 6, 12, 12, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 2, 0, 13, 13]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500992, '$12': 6, '$13': 2, '$14': 0, '$15': 0, '$16': 0, '$17': 15, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 93
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
ReadData: 0
rd: 12
rt: 12

1 268500992 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268500992
WriteData: 15
rd: 17
rt: 17

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 11, 0, 4, 23789572, 268500992, 268500992]

IF
pc: 0x40003c
instruction: ['10001101011100100000000000000000', 4194364]
IFID: ['10001101011100100000000000000000', 4194364]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194360, [11, 11, 0, 4, 23789572, 268500992, 268500992]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268500992, 15, 17, 17, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 12, 12]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500992, '$12': 6, '$13': 2, '$14': 0, '$15': 0, '$16': 0, '$17': 15, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 94
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268500992
ReadData: 9
rd: 17
rt: 17

1 268500992 4
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268500996
WriteData: 268500992
rd: 11
rt: 11

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 18, 0, 0, 24248320, 268500992, 1]

*** Forwarding EX->EX(rs) ***
IF
pc: 0x400040
instruction: ['00100001110011100000000000000001', 4194368]
IFID: ['00100001110011100000000000000001', 4194368]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194364, [11, 18, 0, 0, 24248320, 268500996, 1]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268500996, 268500992, 11, 11, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268500992, 9, 17, 17]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500992, '$12': 6, '$13': 2, '$14': 0, '$15': 0, '$16': 0, '$17': 15, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 95
_________________________
*** Forwarding EX->EX(rs) ***
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268500996
ReadData: 0
rd: 11
rt: 11

1 268500996 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268500996
WriteData: 1
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [14, 14, 0, 1, 30277633, 0, 0]

IF
pc: 0x400044
instruction: ['00000010001100100000100000101010', 4194372]
IFID: ['00000010001100100000100000101010', 4194372]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194368, [14, 14, 0, 1, 30277633, 0, 0]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268500996, 1, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268500996, 0, 11, 11]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500992, '$12': 6, '$13': 2, '$14': 0, '$15': 0, '$16': 0, '$17': 9, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 96
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268500996
ReadData: 6
rd: 18
rt: 18

1 0 1
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 1
WriteData: 0
rd: 14
rt: 14

ID
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 9
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [17, 18, 1, 2090, 36833322, 9, 1]

*** Forwarding, MEM->EX(rt) ***
*** Previous 2nd EX - forwarding, MEM->EX(rt) ***
IF
pc: 0x400048
instruction: ['00010100001000001111111111111001', 4194376]
IFID: ['00010100001000001111111111111001', 4194376]
IDEX: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 9, 4194372, [17, 18, 1, 2090, 36833322, 9, 6]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 1, 0, 14, 14, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268500996, 6, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500996, '$12': 6, '$13': 2, '$14': 0, '$15': 0, '$16': 0, '$17': 9, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 97
_________________________
*** Forwarding, MEM->EX(rt) ***
*** Previous 2nd EX - forwarding, MEM->EX(rt) ***
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 1
ReadData: 0
rd: 14
rt: 14

0 9 6
EX
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 0
WriteData: 6
rd: 1
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 11
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [1, 0, 31, -7, 2162681, 0, 0]

*** Forwarding EX->EX(rs) ***
IF
pc: 0x40004c
instruction: ['10101101011100010000000000000000', 4194380]
IFID: ['10101101011100010000000000000000', 4194380]
IDEX: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, 11, 4194376, [1, 0, 31, -7, 2162681, 0, 0]]
EXMEM: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 6, 1, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 1, 0, 14, 14]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500996, '$12': 6, '$13': 2, '$14': 0, '$15': 0, '$16': 0, '$17': 9, '$18': 6, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 98
_________________________
*** Forwarding EX->EX(rs) ***
MEM
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 0
ReadData: 0
rd: 1
rt: 18

0 0 0
EX
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
WriteData: 0
rd: 0
rt: 0

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 17, 0, 0, 24182784, 268500996, 9]

IF
pc: 0x400050
instruction: ['10101101011100101111111111111100', 4194384]
IFID: ['10101101011100101111111111111100', 4194384]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 0, 4194380, [11, 17, 0, 0, 24182784, 268500996, 9]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 0, 0, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376]]
MEMWB: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 0, 1, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500996, '$12': 6, '$13': 2, '$14': 1, '$15': 0, '$16': 0, '$17': 9, '$18': 6, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 99
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
ReadData: 0
rd: 0
rt: 0

1 268500996 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268500996
WriteData: 9
rd: 17
rt: 17

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 18, 31, -4, 24313852, 268500996, 6]

IF
pc: 0x400054
instruction: ['00001000000100000000000000001100', 4194388]
IFID: ['00001000000100000000000000001100', 4194388]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 0, 4194384, [11, 18, 31, -4, 24313852, 268500996, 6]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268500996, 9, 17, 17, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 0, 0]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500996, '$12': 6, '$13': 2, '$14': 1, '$15': 0, '$16': 0, '$17': 9, '$18': 6, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 100
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268500996
ReadData: 0
rd: 17
rt: 17

1 268500996 -4
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268500992
WriteData: 6
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 1}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [0, 16, 0, 12, 1048588, 0, 0]

jumping to: 0x400030
IF
pc: 0x400030
instruction: ['00010001110011001111111111111001', 4194352]
IFID: ['00010001110011001111111111111001', 4194352]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 1}, 0, 4194388, [0, 16, 0, 12, 1048588, 0, 0]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268500992, 6, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268500996, 0, 17, 17]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500996, '$12': 6, '$13': 2, '$14': 1, '$15': 0, '$16': 0, '$17': 9, '$18': 6, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 101
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268500992
ReadData: 0
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 10
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [14, 12, 31, -7, 30212089, 1, 6]

IF
pc: 0x400034
instruction: ['10001101011100010000000000000000', 4194356]
IFID: ['10001101011100010000000000000000', 4194356]
IDEX: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, 10, 4194352, [14, 12, 31, -7, 30212089, 1, 6]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268500992, 268500992, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268500992, 0, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500996, '$12': 6, '$13': 2, '$14': 1, '$15': 0, '$16': 0, '$17': 9, '$18': 6, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 102
_________________________
0 1 6
EX
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
WriteData: 6
rd: 12
rt: 12

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 17, 0, 0, 24182784, 268500996, 9]

IF
pc: 0x400038
instruction: ['00100001011010110000000000000100', 4194360]
IFID: ['00100001011010110000000000000100', 4194360]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194356, [11, 17, 0, 0, 24182784, 268500996, 9]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 6, 12, 12, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268500992, 0, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500996, '$12': 6, '$13': 2, '$14': 1, '$15': 0, '$16': 0, '$17': 9, '$18': 6, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 103
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
ReadData: 0
rd: 12
rt: 12

1 268500996 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268500996
WriteData: 9
rd: 17
rt: 17

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 11, 0, 4, 23789572, 268500996, 268500996]

IF
pc: 0x40003c
instruction: ['10001101011100100000000000000000', 4194364]
IFID: ['10001101011100100000000000000000', 4194364]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194360, [11, 11, 0, 4, 23789572, 268500996, 268500996]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268500996, 9, 17, 17, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 12, 12]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500996, '$12': 6, '$13': 2, '$14': 1, '$15': 0, '$16': 0, '$17': 9, '$18': 6, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 104
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268500996
ReadData: 9
rd: 17
rt: 17

1 268500996 4
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501000
WriteData: 268500996
rd: 11
rt: 11

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 18, 0, 0, 24248320, 268500996, 6]

*** Forwarding EX->EX(rs) ***
IF
pc: 0x400040
instruction: ['00100001110011100000000000000001', 4194368]
IFID: ['00100001110011100000000000000001', 4194368]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194364, [11, 18, 0, 0, 24248320, 268501000, 6]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501000, 268500996, 11, 11, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268500996, 9, 17, 17]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500996, '$12': 6, '$13': 2, '$14': 1, '$15': 0, '$16': 0, '$17': 9, '$18': 6, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 105
_________________________
*** Forwarding EX->EX(rs) ***
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501000
ReadData: 0
rd: 11
rt: 11

1 268501000 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501000
WriteData: 6
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [14, 14, 0, 1, 30277633, 1, 1]

IF
pc: 0x400044
instruction: ['00000010001100100000100000101010', 4194372]
IFID: ['00000010001100100000100000101010', 4194372]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194368, [14, 14, 0, 1, 30277633, 1, 1]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501000, 6, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501000, 0, 11, 11]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500996, '$12': 6, '$13': 2, '$14': 1, '$15': 0, '$16': 0, '$17': 9, '$18': 6, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 106
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501000
ReadData: 5
rd: 18
rt: 18

1 1 1
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 2
WriteData: 1
rd: 14
rt: 14

ID
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 9
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [17, 18, 1, 2090, 36833322, 9, 6]

*** Forwarding, MEM->EX(rt) ***
*** Previous 2nd EX - forwarding, MEM->EX(rt) ***
IF
pc: 0x400048
instruction: ['00010100001000001111111111111001', 4194376]
IFID: ['00010100001000001111111111111001', 4194376]
IDEX: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 9, 4194372, [17, 18, 1, 2090, 36833322, 9, 5]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 2, 1, 14, 14, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501000, 5, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501000, '$12': 6, '$13': 2, '$14': 1, '$15': 0, '$16': 0, '$17': 9, '$18': 6, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 107
_________________________
*** Forwarding, MEM->EX(rt) ***
*** Previous 2nd EX - forwarding, MEM->EX(rt) ***
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 2
ReadData: 0
rd: 14
rt: 14

0 9 5
EX
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 0
WriteData: 5
rd: 1
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 11
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [1, 0, 31, -7, 2162681, 0, 0]

*** Forwarding EX->EX(rs) ***
IF
pc: 0x40004c
instruction: ['10101101011100010000000000000000', 4194380]
IFID: ['10101101011100010000000000000000', 4194380]
IDEX: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, 11, 4194376, [1, 0, 31, -7, 2162681, 0, 0]]
EXMEM: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 5, 1, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 2, 0, 14, 14]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501000, '$12': 6, '$13': 2, '$14': 1, '$15': 0, '$16': 0, '$17': 9, '$18': 5, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 108
_________________________
*** Forwarding EX->EX(rs) ***
MEM
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 0
ReadData: 0
rd: 1
rt: 18

0 0 0
EX
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
WriteData: 0
rd: 0
rt: 0

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 17, 0, 0, 24182784, 268501000, 9]

IF
pc: 0x400050
instruction: ['10101101011100101111111111111100', 4194384]
IFID: ['10101101011100101111111111111100', 4194384]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 0, 4194380, [11, 17, 0, 0, 24182784, 268501000, 9]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 0, 0, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376]]
MEMWB: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 0, 1, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501000, '$12': 6, '$13': 2, '$14': 2, '$15': 0, '$16': 0, '$17': 9, '$18': 5, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 109
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
ReadData: 0
rd: 0
rt: 0

1 268501000 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268501000
WriteData: 9
rd: 17
rt: 17

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 18, 31, -4, 24313852, 268501000, 5]

IF
pc: 0x400054
instruction: ['00001000000100000000000000001100', 4194388]
IFID: ['00001000000100000000000000001100', 4194388]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 0, 4194384, [11, 18, 31, -4, 24313852, 268501000, 5]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501000, 9, 17, 17, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 0, 0]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501000, '$12': 6, '$13': 2, '$14': 2, '$15': 0, '$16': 0, '$17': 9, '$18': 5, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 110
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268501000
ReadData: 0
rd: 17
rt: 17

1 268501000 -4
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268500996
WriteData: 5
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 1}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [0, 16, 0, 12, 1048588, 0, 0]

jumping to: 0x400030
IF
pc: 0x400030
instruction: ['00010001110011001111111111111001', 4194352]
IFID: ['00010001110011001111111111111001', 4194352]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 1}, 0, 4194388, [0, 16, 0, 12, 1048588, 0, 0]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268500996, 5, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501000, 0, 17, 17]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501000, '$12': 6, '$13': 2, '$14': 2, '$15': 0, '$16': 0, '$17': 9, '$18': 5, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 111
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268500996
ReadData: 0
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 10
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [14, 12, 31, -7, 30212089, 2, 6]

IF
pc: 0x400034
instruction: ['10001101011100010000000000000000', 4194356]
IFID: ['10001101011100010000000000000000', 4194356]
IDEX: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, 10, 4194352, [14, 12, 31, -7, 30212089, 2, 6]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268500996, 268500996, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268500996, 0, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501000, '$12': 6, '$13': 2, '$14': 2, '$15': 0, '$16': 0, '$17': 9, '$18': 5, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 112
_________________________
0 2 6
EX
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
WriteData: 6
rd: 12
rt: 12

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 17, 0, 0, 24182784, 268501000, 9]

IF
pc: 0x400038
instruction: ['00100001011010110000000000000100', 4194360]
IFID: ['00100001011010110000000000000100', 4194360]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194356, [11, 17, 0, 0, 24182784, 268501000, 9]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 6, 12, 12, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268500996, 0, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501000, '$12': 6, '$13': 2, '$14': 2, '$15': 0, '$16': 0, '$17': 9, '$18': 5, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 113
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
ReadData: 0
rd: 12
rt: 12

1 268501000 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501000
WriteData: 9
rd: 17
rt: 17

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 11, 0, 4, 23789572, 268501000, 268501000]

IF
pc: 0x40003c
instruction: ['10001101011100100000000000000000', 4194364]
IFID: ['10001101011100100000000000000000', 4194364]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194360, [11, 11, 0, 4, 23789572, 268501000, 268501000]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501000, 9, 17, 17, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 12, 12]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501000, '$12': 6, '$13': 2, '$14': 2, '$15': 0, '$16': 0, '$17': 9, '$18': 5, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 114
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501000
ReadData: 9
rd: 17
rt: 17

1 268501000 4
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501004
WriteData: 268501000
rd: 11
rt: 11

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 18, 0, 0, 24248320, 268501000, 5]

*** Forwarding EX->EX(rs) ***
IF
pc: 0x400040
instruction: ['00100001110011100000000000000001', 4194368]
IFID: ['00100001110011100000000000000001', 4194368]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194364, [11, 18, 0, 0, 24248320, 268501004, 5]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501004, 268501000, 11, 11, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501000, 9, 17, 17]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501000, '$12': 6, '$13': 2, '$14': 2, '$15': 0, '$16': 0, '$17': 9, '$18': 5, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 115
_________________________
*** Forwarding EX->EX(rs) ***
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501004
ReadData: 0
rd: 11
rt: 11

1 268501004 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501004
WriteData: 5
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [14, 14, 0, 1, 30277633, 2, 2]

IF
pc: 0x400044
instruction: ['00000010001100100000100000101010', 4194372]
IFID: ['00000010001100100000100000101010', 4194372]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194368, [14, 14, 0, 1, 30277633, 2, 2]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501004, 5, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501004, 0, 11, 11]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501000, '$12': 6, '$13': 2, '$14': 2, '$15': 0, '$16': 0, '$17': 9, '$18': 5, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 116
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501004
ReadData: 4
rd: 18
rt: 18

1 2 1
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 3
WriteData: 2
rd: 14
rt: 14

ID
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 9
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [17, 18, 1, 2090, 36833322, 9, 5]

*** Forwarding, MEM->EX(rt) ***
*** Previous 2nd EX - forwarding, MEM->EX(rt) ***
IF
pc: 0x400048
instruction: ['00010100001000001111111111111001', 4194376]
IFID: ['00010100001000001111111111111001', 4194376]
IDEX: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 9, 4194372, [17, 18, 1, 2090, 36833322, 9, 4]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 3, 2, 14, 14, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501004, 4, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501004, '$12': 6, '$13': 2, '$14': 2, '$15': 0, '$16': 0, '$17': 9, '$18': 5, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 117
_________________________
*** Forwarding, MEM->EX(rt) ***
*** Previous 2nd EX - forwarding, MEM->EX(rt) ***
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 3
ReadData: 0
rd: 14
rt: 14

0 9 4
EX
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 0
WriteData: 4
rd: 1
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 11
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [1, 0, 31, -7, 2162681, 0, 0]

*** Forwarding EX->EX(rs) ***
IF
pc: 0x40004c
instruction: ['10101101011100010000000000000000', 4194380]
IFID: ['10101101011100010000000000000000', 4194380]
IDEX: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, 11, 4194376, [1, 0, 31, -7, 2162681, 0, 0]]
EXMEM: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 4, 1, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 3, 0, 14, 14]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501004, '$12': 6, '$13': 2, '$14': 2, '$15': 0, '$16': 0, '$17': 9, '$18': 4, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 118
_________________________
*** Forwarding EX->EX(rs) ***
MEM
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 0
ReadData: 0
rd: 1
rt: 18

0 0 0
EX
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
WriteData: 0
rd: 0
rt: 0

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 17, 0, 0, 24182784, 268501004, 9]

IF
pc: 0x400050
instruction: ['10101101011100101111111111111100', 4194384]
IFID: ['10101101011100101111111111111100', 4194384]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 0, 4194380, [11, 17, 0, 0, 24182784, 268501004, 9]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 0, 0, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376]]
MEMWB: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 0, 1, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501004, '$12': 6, '$13': 2, '$14': 3, '$15': 0, '$16': 0, '$17': 9, '$18': 4, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 119
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
ReadData: 0
rd: 0
rt: 0

1 268501004 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268501004
WriteData: 9
rd: 17
rt: 17

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 18, 31, -4, 24313852, 268501004, 4]

IF
pc: 0x400054
instruction: ['00001000000100000000000000001100', 4194388]
IFID: ['00001000000100000000000000001100', 4194388]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 0, 4194384, [11, 18, 31, -4, 24313852, 268501004, 4]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501004, 9, 17, 17, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 0, 0]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501004, '$12': 6, '$13': 2, '$14': 3, '$15': 0, '$16': 0, '$17': 9, '$18': 4, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 120
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268501004
ReadData: 0
rd: 17
rt: 17

1 268501004 -4
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268501000
WriteData: 4
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 1}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [0, 16, 0, 12, 1048588, 0, 0]

jumping to: 0x400030
IF
pc: 0x400030
instruction: ['00010001110011001111111111111001', 4194352]
IFID: ['00010001110011001111111111111001', 4194352]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 1}, 0, 4194388, [0, 16, 0, 12, 1048588, 0, 0]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501000, 4, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501004, 0, 17, 17]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501004, '$12': 6, '$13': 2, '$14': 3, '$15': 0, '$16': 0, '$17': 9, '$18': 4, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 121
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268501000
ReadData: 0
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 10
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [14, 12, 31, -7, 30212089, 3, 6]

IF
pc: 0x400034
instruction: ['10001101011100010000000000000000', 4194356]
IFID: ['10001101011100010000000000000000', 4194356]
IDEX: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, 10, 4194352, [14, 12, 31, -7, 30212089, 3, 6]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501000, 268501000, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501000, 0, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501004, '$12': 6, '$13': 2, '$14': 3, '$15': 0, '$16': 0, '$17': 9, '$18': 4, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 122
_________________________
0 3 6
EX
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
WriteData: 6
rd: 12
rt: 12

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 17, 0, 0, 24182784, 268501004, 9]

IF
pc: 0x400038
instruction: ['00100001011010110000000000000100', 4194360]
IFID: ['00100001011010110000000000000100', 4194360]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194356, [11, 17, 0, 0, 24182784, 268501004, 9]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 6, 12, 12, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501000, 0, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501004, '$12': 6, '$13': 2, '$14': 3, '$15': 0, '$16': 0, '$17': 9, '$18': 4, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 123
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
ReadData: 0
rd: 12
rt: 12

1 268501004 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501004
WriteData: 9
rd: 17
rt: 17

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 11, 0, 4, 23789572, 268501004, 268501004]

IF
pc: 0x40003c
instruction: ['10001101011100100000000000000000', 4194364]
IFID: ['10001101011100100000000000000000', 4194364]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194360, [11, 11, 0, 4, 23789572, 268501004, 268501004]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501004, 9, 17, 17, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 12, 12]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501004, '$12': 6, '$13': 2, '$14': 3, '$15': 0, '$16': 0, '$17': 9, '$18': 4, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 124
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501004
ReadData: 9
rd: 17
rt: 17

1 268501004 4
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501008
WriteData: 268501004
rd: 11
rt: 11

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 18, 0, 0, 24248320, 268501004, 4]

*** Forwarding EX->EX(rs) ***
IF
pc: 0x400040
instruction: ['00100001110011100000000000000001', 4194368]
IFID: ['00100001110011100000000000000001', 4194368]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194364, [11, 18, 0, 0, 24248320, 268501008, 4]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501008, 268501004, 11, 11, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501004, 9, 17, 17]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501004, '$12': 6, '$13': 2, '$14': 3, '$15': 0, '$16': 0, '$17': 9, '$18': 4, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 125
_________________________
*** Forwarding EX->EX(rs) ***
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501008
ReadData: 0
rd: 11
rt: 11

1 268501008 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501008
WriteData: 4
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [14, 14, 0, 1, 30277633, 3, 3]

IF
pc: 0x400044
instruction: ['00000010001100100000100000101010', 4194372]
IFID: ['00000010001100100000100000101010', 4194372]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194368, [14, 14, 0, 1, 30277633, 3, 3]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501008, 4, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501008, 0, 11, 11]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501004, '$12': 6, '$13': 2, '$14': 3, '$15': 0, '$16': 0, '$17': 9, '$18': 4, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 126
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501008
ReadData: 3
rd: 18
rt: 18

1 3 1
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 4
WriteData: 3
rd: 14
rt: 14

ID
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 9
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [17, 18, 1, 2090, 36833322, 9, 4]

*** Forwarding, MEM->EX(rt) ***
*** Previous 2nd EX - forwarding, MEM->EX(rt) ***
IF
pc: 0x400048
instruction: ['00010100001000001111111111111001', 4194376]
IFID: ['00010100001000001111111111111001', 4194376]
IDEX: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 9, 4194372, [17, 18, 1, 2090, 36833322, 9, 3]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 4, 3, 14, 14, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501008, 3, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501008, '$12': 6, '$13': 2, '$14': 3, '$15': 0, '$16': 0, '$17': 9, '$18': 4, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 127
_________________________
*** Forwarding, MEM->EX(rt) ***
*** Previous 2nd EX - forwarding, MEM->EX(rt) ***
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 4
ReadData: 0
rd: 14
rt: 14

0 9 3
EX
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 0
WriteData: 3
rd: 1
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 11
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [1, 0, 31, -7, 2162681, 0, 0]

*** Forwarding EX->EX(rs) ***
IF
pc: 0x40004c
instruction: ['10101101011100010000000000000000', 4194380]
IFID: ['10101101011100010000000000000000', 4194380]
IDEX: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, 11, 4194376, [1, 0, 31, -7, 2162681, 0, 0]]
EXMEM: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 3, 1, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 4, 0, 14, 14]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501008, '$12': 6, '$13': 2, '$14': 3, '$15': 0, '$16': 0, '$17': 9, '$18': 3, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 128
_________________________
*** Forwarding EX->EX(rs) ***
MEM
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 0
ReadData: 0
rd: 1
rt: 18

0 0 0
EX
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
WriteData: 0
rd: 0
rt: 0

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 17, 0, 0, 24182784, 268501008, 9]

IF
pc: 0x400050
instruction: ['10101101011100101111111111111100', 4194384]
IFID: ['10101101011100101111111111111100', 4194384]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 0, 4194380, [11, 17, 0, 0, 24182784, 268501008, 9]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 0, 0, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376]]
MEMWB: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 0, 1, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501008, '$12': 6, '$13': 2, '$14': 4, '$15': 0, '$16': 0, '$17': 9, '$18': 3, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 129
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
ReadData: 0
rd: 0
rt: 0

1 268501008 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268501008
WriteData: 9
rd: 17
rt: 17

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 18, 31, -4, 24313852, 268501008, 3]

IF
pc: 0x400054
instruction: ['00001000000100000000000000001100', 4194388]
IFID: ['00001000000100000000000000001100', 4194388]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 0, 4194384, [11, 18, 31, -4, 24313852, 268501008, 3]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501008, 9, 17, 17, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 0, 0]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501008, '$12': 6, '$13': 2, '$14': 4, '$15': 0, '$16': 0, '$17': 9, '$18': 3, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 130
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268501008
ReadData: 0
rd: 17
rt: 17

1 268501008 -4
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268501004
WriteData: 3
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 1}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [0, 16, 0, 12, 1048588, 0, 0]

jumping to: 0x400030
IF
pc: 0x400030
instruction: ['00010001110011001111111111111001', 4194352]
IFID: ['00010001110011001111111111111001', 4194352]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 1}, 0, 4194388, [0, 16, 0, 12, 1048588, 0, 0]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501004, 3, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501008, 0, 17, 17]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501008, '$12': 6, '$13': 2, '$14': 4, '$15': 0, '$16': 0, '$17': 9, '$18': 3, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 131
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268501004
ReadData: 0
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 10
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [14, 12, 31, -7, 30212089, 4, 6]

IF
pc: 0x400034
instruction: ['10001101011100010000000000000000', 4194356]
IFID: ['10001101011100010000000000000000', 4194356]
IDEX: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, 10, 4194352, [14, 12, 31, -7, 30212089, 4, 6]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501004, 268501004, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501004, 0, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501008, '$12': 6, '$13': 2, '$14': 4, '$15': 0, '$16': 0, '$17': 9, '$18': 3, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 132
_________________________
0 4 6
EX
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
WriteData: 6
rd: 12
rt: 12

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 17, 0, 0, 24182784, 268501008, 9]

IF
pc: 0x400038
instruction: ['00100001011010110000000000000100', 4194360]
IFID: ['00100001011010110000000000000100', 4194360]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194356, [11, 17, 0, 0, 24182784, 268501008, 9]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 6, 12, 12, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501004, 0, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501008, '$12': 6, '$13': 2, '$14': 4, '$15': 0, '$16': 0, '$17': 9, '$18': 3, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 133
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
ReadData: 0
rd: 12
rt: 12

1 268501008 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501008
WriteData: 9
rd: 17
rt: 17

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 11, 0, 4, 23789572, 268501008, 268501008]

IF
pc: 0x40003c
instruction: ['10001101011100100000000000000000', 4194364]
IFID: ['10001101011100100000000000000000', 4194364]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194360, [11, 11, 0, 4, 23789572, 268501008, 268501008]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501008, 9, 17, 17, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 12, 12]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501008, '$12': 6, '$13': 2, '$14': 4, '$15': 0, '$16': 0, '$17': 9, '$18': 3, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 134
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501008
ReadData: 9
rd: 17
rt: 17

1 268501008 4
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501012
WriteData: 268501008
rd: 11
rt: 11

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 18, 0, 0, 24248320, 268501008, 3]

*** Forwarding EX->EX(rs) ***
IF
pc: 0x400040
instruction: ['00100001110011100000000000000001', 4194368]
IFID: ['00100001110011100000000000000001', 4194368]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194364, [11, 18, 0, 0, 24248320, 268501012, 3]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501012, 268501008, 11, 11, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501008, 9, 17, 17]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501008, '$12': 6, '$13': 2, '$14': 4, '$15': 0, '$16': 0, '$17': 9, '$18': 3, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 135
_________________________
*** Forwarding EX->EX(rs) ***
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501012
ReadData: 0
rd: 11
rt: 11

1 268501012 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501012
WriteData: 3
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [14, 14, 0, 1, 30277633, 4, 4]

IF
pc: 0x400044
instruction: ['00000010001100100000100000101010', 4194372]
IFID: ['00000010001100100000100000101010', 4194372]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194368, [14, 14, 0, 1, 30277633, 4, 4]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501012, 3, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501012, 0, 11, 11]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501008, '$12': 6, '$13': 2, '$14': 4, '$15': 0, '$16': 0, '$17': 9, '$18': 3, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 136
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501012
ReadData: 2
rd: 18
rt: 18

1 4 1
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 5
WriteData: 4
rd: 14
rt: 14

ID
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 9
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [17, 18, 1, 2090, 36833322, 9, 3]

*** Forwarding, MEM->EX(rt) ***
*** Previous 2nd EX - forwarding, MEM->EX(rt) ***
IF
pc: 0x400048
instruction: ['00010100001000001111111111111001', 4194376]
IFID: ['00010100001000001111111111111001', 4194376]
IDEX: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 9, 4194372, [17, 18, 1, 2090, 36833322, 9, 2]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 5, 4, 14, 14, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501012, 2, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501012, '$12': 6, '$13': 2, '$14': 4, '$15': 0, '$16': 0, '$17': 9, '$18': 3, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 137
_________________________
*** Forwarding, MEM->EX(rt) ***
*** Previous 2nd EX - forwarding, MEM->EX(rt) ***
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 5
ReadData: 0
rd: 14
rt: 14

0 9 2
EX
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 0
WriteData: 2
rd: 1
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 11
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [1, 0, 31, -7, 2162681, 0, 0]

*** Forwarding EX->EX(rs) ***
IF
pc: 0x40004c
instruction: ['10101101011100010000000000000000', 4194380]
IFID: ['10101101011100010000000000000000', 4194380]
IDEX: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, 11, 4194376, [1, 0, 31, -7, 2162681, 0, 0]]
EXMEM: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 2, 1, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 5, 0, 14, 14]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501012, '$12': 6, '$13': 2, '$14': 4, '$15': 0, '$16': 0, '$17': 9, '$18': 2, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 138
_________________________
*** Forwarding EX->EX(rs) ***
MEM
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 0
ReadData: 0
rd: 1
rt: 18

0 0 0
EX
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
WriteData: 0
rd: 0
rt: 0

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 17, 0, 0, 24182784, 268501012, 9]

IF
pc: 0x400050
instruction: ['10101101011100101111111111111100', 4194384]
IFID: ['10101101011100101111111111111100', 4194384]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 0, 4194380, [11, 17, 0, 0, 24182784, 268501012, 9]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 0, 0, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376]]
MEMWB: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 0, 1, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501012, '$12': 6, '$13': 2, '$14': 5, '$15': 0, '$16': 0, '$17': 9, '$18': 2, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 139
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
ReadData: 0
rd: 0
rt: 0

1 268501012 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268501012
WriteData: 9
rd: 17
rt: 17

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 18, 31, -4, 24313852, 268501012, 2]

IF
pc: 0x400054
instruction: ['00001000000100000000000000001100', 4194388]
IFID: ['00001000000100000000000000001100', 4194388]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 0, 4194384, [11, 18, 31, -4, 24313852, 268501012, 2]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501012, 9, 17, 17, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 0, 0]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501012, '$12': 6, '$13': 2, '$14': 5, '$15': 0, '$16': 0, '$17': 9, '$18': 2, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 140
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268501012
ReadData: 0
rd: 17
rt: 17

1 268501012 -4
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268501008
WriteData: 2
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 1}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [0, 16, 0, 12, 1048588, 0, 0]

jumping to: 0x400030
IF
pc: 0x400030
instruction: ['00010001110011001111111111111001', 4194352]
IFID: ['00010001110011001111111111111001', 4194352]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 1}, 0, 4194388, [0, 16, 0, 12, 1048588, 0, 0]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501008, 2, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501012, 0, 17, 17]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501012, '$12': 6, '$13': 2, '$14': 5, '$15': 0, '$16': 0, '$17': 9, '$18': 2, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 141
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268501008
ReadData: 0
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 10
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [14, 12, 31, -7, 30212089, 5, 6]

IF
pc: 0x400034
instruction: ['10001101011100010000000000000000', 4194356]
IFID: ['10001101011100010000000000000000', 4194356]
IDEX: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, 10, 4194352, [14, 12, 31, -7, 30212089, 5, 6]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501008, 268501008, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501008, 0, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501012, '$12': 6, '$13': 2, '$14': 5, '$15': 0, '$16': 0, '$17': 9, '$18': 2, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 142
_________________________
0 5 6
EX
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
WriteData: 6
rd: 12
rt: 12

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 17, 0, 0, 24182784, 268501012, 9]

IF
pc: 0x400038
instruction: ['00100001011010110000000000000100', 4194360]
IFID: ['00100001011010110000000000000100', 4194360]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194356, [11, 17, 0, 0, 24182784, 268501012, 9]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 6, 12, 12, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501008, 0, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501012, '$12': 6, '$13': 2, '$14': 5, '$15': 0, '$16': 0, '$17': 9, '$18': 2, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 143
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
ReadData: 0
rd: 12
rt: 12

1 268501012 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501012
WriteData: 9
rd: 17
rt: 17

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 11, 0, 4, 23789572, 268501012, 268501012]

IF
pc: 0x40003c
instruction: ['10001101011100100000000000000000', 4194364]
IFID: ['10001101011100100000000000000000', 4194364]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194360, [11, 11, 0, 4, 23789572, 268501012, 268501012]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501012, 9, 17, 17, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 12, 12]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501012, '$12': 6, '$13': 2, '$14': 5, '$15': 0, '$16': 0, '$17': 9, '$18': 2, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 144
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501012
ReadData: 9
rd: 17
rt: 17

1 268501012 4
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501016
WriteData: 268501012
rd: 11
rt: 11

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 18, 0, 0, 24248320, 268501012, 2]

*** Forwarding EX->EX(rs) ***
IF
pc: 0x400040
instruction: ['00100001110011100000000000000001', 4194368]
IFID: ['00100001110011100000000000000001', 4194368]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194364, [11, 18, 0, 0, 24248320, 268501016, 2]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501016, 268501012, 11, 11, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501012, 9, 17, 17]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501012, '$12': 6, '$13': 2, '$14': 5, '$15': 0, '$16': 0, '$17': 9, '$18': 2, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 145
_________________________
*** Forwarding EX->EX(rs) ***
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501016
ReadData: 0
rd: 11
rt: 11

1 268501016 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501016
WriteData: 2
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [14, 14, 0, 1, 30277633, 5, 5]

IF
pc: 0x400044
instruction: ['00000010001100100000100000101010', 4194372]
IFID: ['00000010001100100000100000101010', 4194372]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194368, [14, 14, 0, 1, 30277633, 5, 5]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501016, 2, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501016, 0, 11, 11]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501012, '$12': 6, '$13': 2, '$14': 5, '$15': 0, '$16': 0, '$17': 9, '$18': 2, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 146
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501016
ReadData: 1
rd: 18
rt: 18

1 5 1
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 6
WriteData: 5
rd: 14
rt: 14

ID
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 9
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [17, 18, 1, 2090, 36833322, 9, 2]

*** Forwarding, MEM->EX(rt) ***
*** Previous 2nd EX - forwarding, MEM->EX(rt) ***
IF
pc: 0x400048
instruction: ['00010100001000001111111111111001', 4194376]
IFID: ['00010100001000001111111111111001', 4194376]
IDEX: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 9, 4194372, [17, 18, 1, 2090, 36833322, 9, 1]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 6, 5, 14, 14, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501016, 1, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501016, '$12': 6, '$13': 2, '$14': 5, '$15': 0, '$16': 0, '$17': 9, '$18': 2, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 147
_________________________
*** Forwarding, MEM->EX(rt) ***
*** Previous 2nd EX - forwarding, MEM->EX(rt) ***
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 6
ReadData: 0
rd: 14
rt: 14

0 9 1
EX
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 0
WriteData: 1
rd: 1
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 11
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [1, 0, 31, -7, 2162681, 0, 0]

*** Forwarding EX->EX(rs) ***
IF
pc: 0x40004c
instruction: ['10101101011100010000000000000000', 4194380]
IFID: ['10101101011100010000000000000000', 4194380]
IDEX: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, 11, 4194376, [1, 0, 31, -7, 2162681, 0, 0]]
EXMEM: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 1, 1, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 6, 0, 14, 14]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501016, '$12': 6, '$13': 2, '$14': 5, '$15': 0, '$16': 0, '$17': 9, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 148
_________________________
*** Forwarding EX->EX(rs) ***
MEM
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 0
ReadData: 0
rd: 1
rt: 18

0 0 0
EX
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
WriteData: 0
rd: 0
rt: 0

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 17, 0, 0, 24182784, 268501016, 9]

IF
pc: 0x400050
instruction: ['10101101011100101111111111111100', 4194384]
IFID: ['10101101011100101111111111111100', 4194384]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 0, 4194380, [11, 17, 0, 0, 24182784, 268501016, 9]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 0, 0, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376]]
MEMWB: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 0, 1, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501016, '$12': 6, '$13': 2, '$14': 6, '$15': 0, '$16': 0, '$17': 9, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 149
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
ReadData: 0
rd: 0
rt: 0

1 268501016 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268501016
WriteData: 9
rd: 17
rt: 17

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 18, 31, -4, 24313852, 268501016, 1]

IF
pc: 0x400054
instruction: ['00001000000100000000000000001100', 4194388]
IFID: ['00001000000100000000000000001100', 4194388]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 0, 4194384, [11, 18, 31, -4, 24313852, 268501016, 1]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501016, 9, 17, 17, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 0, 0]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501016, '$12': 6, '$13': 2, '$14': 6, '$15': 0, '$16': 0, '$17': 9, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 150
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268501016
ReadData: 0
rd: 17
rt: 17

1 268501016 -4
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268501012
WriteData: 1
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 1}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [0, 16, 0, 12, 1048588, 0, 0]

jumping to: 0x400030
IF
pc: 0x400030
instruction: ['00010001110011001111111111111001', 4194352]
IFID: ['00010001110011001111111111111001', 4194352]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 1}, 0, 4194388, [0, 16, 0, 12, 1048588, 0, 0]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501012, 1, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501016, 0, 17, 17]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501016, '$12': 6, '$13': 2, '$14': 6, '$15': 0, '$16': 0, '$17': 9, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 151
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268501012
ReadData: 0
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 10
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [14, 12, 31, -7, 30212089, 6, 6]

IF
pc: 0x400034
instruction: ['10001101011100010000000000000000', 4194356]
IFID: ['10001101011100010000000000000000', 4194356]
IDEX: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, 10, 4194352, [14, 12, 31, -7, 30212089, 6, 6]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501012, 268501012, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501012, 0, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501016, '$12': 6, '$13': 2, '$14': 6, '$15': 0, '$16': 0, '$17': 9, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 152
_________________________
0 6 6
EX
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: True
WriteData: 6
rd: 12
rt: 12

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 17, 0, 0, 24182784, 268501016, 9]

IF
pc: 0x400038
instruction: ['00100001011010110000000000000100', 4194360]
flushing pipeline
flushing pipeline, PC set to  0x400018
IFID: ['00100001011010110000000000000100', 4194360]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194356, [11, 17, 0, 0, 24182784, 268501016, 9]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, True, 6, 12, 12, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501012, 0, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501016, '$12': 6, '$13': 2, '$14': 6, '$15': 0, '$16': 0, '$17': 9, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 153
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: True
ReadData: 0
rd: 12
rt: 12

IF
pc: 0x400018
instruction: ['00010001101110000000000000001111', 4194328]
IFID: ['00010001101110000000000000001111', 4194328]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194356, [11, 17, 0, 0, 24182784, 268501016, 9]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, True, 6, 12, 12, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, True, 0, 12, 12]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501016, '$12': 6, '$13': 2, '$14': 6, '$15': 0, '$16': 0, '$17': 9, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 154
_________________________
ID
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 10
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [13, 24, 0, 15, 28835855, 2, 7]

IF
pc: 0x40001c
instruction: ['00000011000011010110000000100010', 4194332]
IFID: ['00000011000011010110000000100010', 4194332]
IDEX: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, 10, 4194328, [13, 24, 0, 15, 28835855, 2, 7]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, True, 6, 12, 12, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, True, 0, 12, 12]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501016, '$12': 6, '$13': 2, '$14': 6, '$15': 0, '$16': 0, '$17': 9, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 155
_________________________
0 2 7
EX
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
WriteData: 7
rd: 24
rt: 24

ID
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 15
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [24, 13, 12, 24610, 51208226, 7, 2]

IF
pc: 0x400020
instruction: ['00000000000000000111000000100000', 4194336]
IFID: ['00000000000000000111000000100000', 4194336]
IDEX: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 15, 4194332, [24, 13, 12, 24610, 51208226, 7, 2]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 7, 24, 24, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, True, 0, 12, 12]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501016, '$12': 6, '$13': 2, '$14': 6, '$15': 0, '$16': 0, '$17': 9, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 156
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
ReadData: 0
rd: 24
rt: 24

0 7 2
EX
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 5
WriteData: 2
rd: 12
rt: 13

ID
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [0, 0, 14, 28704, 28704, 0, 0]

IF
pc: 0x400024
instruction: ['00000001001000000101100000100000', 4194340]
IFID: ['00000001001000000101100000100000', 4194340]
IDEX: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 4194336, [0, 0, 14, 28704, 28704, 0, 0]]
EXMEM: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 5, 2, 12, 13, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 24, 24]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501016, '$12': 6, '$13': 2, '$14': 6, '$15': 0, '$16': 0, '$17': 9, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 157
_________________________
MEM
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 5
ReadData: 0
rd: 12
rt: 13

0 0 0
EX
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 0
WriteData: 0
rd: 14
rt: 0

ID
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [9, 0, 11, 22560, 18896928, 268500992, 0]

IF
pc: 0x400028
instruction: ['00100001101011010000000000000001', 4194344]
IFID: ['00100001101011010000000000000001', 4194344]
IDEX: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 4194340, [9, 0, 11, 22560, 18896928, 268500992, 0]]
EXMEM: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 0, 14, 0, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336]]
MEMWB: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 5, 0, 12, 13]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501016, '$12': 6, '$13': 2, '$14': 6, '$15': 0, '$16': 0, '$17': 9, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 158
_________________________
MEM
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 0
ReadData: 0
rd: 14
rt: 0

0 268500992 0
EX
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268500992
WriteData: 0
rd: 11
rt: 0

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [13, 13, 0, 1, 28114945, 2, 2]

IF
pc: 0x40002c
instruction: ['00001000000100000000000000001100', 4194348]
IFID: ['00001000000100000000000000001100', 4194348]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194344, [13, 13, 0, 1, 28114945, 2, 2]]
EXMEM: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 268500992, 0, 11, 0, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340]]
MEMWB: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 0, 14, 0]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501016, '$12': 5, '$13': 2, '$14': 6, '$15': 0, '$16': 0, '$17': 9, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 159
_________________________
MEM
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268500992
ReadData: 0
rd: 11
rt: 0

1 2 1
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 3
WriteData: 2
rd: 13
rt: 13

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 1}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [0, 16, 0, 12, 1048588, 0, 0]

jumping to: 0x400030
IF
pc: 0x400030
instruction: ['00010001110011001111111111111001', 4194352]
IFID: ['00010001110011001111111111111001', 4194352]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 1}, 0, 4194348, [0, 16, 0, 12, 1048588, 0, 0]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 3, 2, 13, 13, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344]]
MEMWB: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 268500992, 0, 11, 0]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501016, '$12': 5, '$13': 2, '$14': 0, '$15': 0, '$16': 0, '$17': 9, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 160
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 3
ReadData: 0
rd: 13
rt: 13

ID
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 10
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [14, 12, 31, -7, 30212089, 0, 5]

IF
pc: 0x400034
instruction: ['10001101011100010000000000000000', 4194356]
IFID: ['10001101011100010000000000000000', 4194356]
IDEX: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, 10, 4194352, [14, 12, 31, -7, 30212089, 0, 5]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 3, 2, 13, 13, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 3, 0, 13, 13]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500992, '$12': 5, '$13': 2, '$14': 0, '$15': 0, '$16': 0, '$17': 9, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 161
_________________________
0 0 5
EX
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
WriteData: 5
rd: 12
rt: 12

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 17, 0, 0, 24182784, 268500992, 9]

IF
pc: 0x400038
instruction: ['00100001011010110000000000000100', 4194360]
IFID: ['00100001011010110000000000000100', 4194360]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194356, [11, 17, 0, 0, 24182784, 268500992, 9]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 5, 12, 12, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 3, 0, 13, 13]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500992, '$12': 5, '$13': 3, '$14': 0, '$15': 0, '$16': 0, '$17': 9, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 162
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
ReadData: 0
rd: 12
rt: 12

1 268500992 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268500992
WriteData: 9
rd: 17
rt: 17

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 11, 0, 4, 23789572, 268500992, 268500992]

IF
pc: 0x40003c
instruction: ['10001101011100100000000000000000', 4194364]
IFID: ['10001101011100100000000000000000', 4194364]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194360, [11, 11, 0, 4, 23789572, 268500992, 268500992]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268500992, 9, 17, 17, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 12, 12]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500992, '$12': 5, '$13': 3, '$14': 0, '$15': 0, '$16': 0, '$17': 9, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 163
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268500992
ReadData: 6
rd: 17
rt: 17

1 268500992 4
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268500996
WriteData: 268500992
rd: 11
rt: 11

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 18, 0, 0, 24248320, 268500992, 1]

*** Forwarding EX->EX(rs) ***
IF
pc: 0x400040
instruction: ['00100001110011100000000000000001', 4194368]
IFID: ['00100001110011100000000000000001', 4194368]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194364, [11, 18, 0, 0, 24248320, 268500996, 1]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268500996, 268500992, 11, 11, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268500992, 6, 17, 17]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500992, '$12': 5, '$13': 3, '$14': 0, '$15': 0, '$16': 0, '$17': 9, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 164
_________________________
*** Forwarding EX->EX(rs) ***
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268500996
ReadData: 0
rd: 11
rt: 11

1 268500996 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268500996
WriteData: 1
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [14, 14, 0, 1, 30277633, 0, 0]

IF
pc: 0x400044
instruction: ['00000010001100100000100000101010', 4194372]
IFID: ['00000010001100100000100000101010', 4194372]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194368, [14, 14, 0, 1, 30277633, 0, 0]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268500996, 1, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268500996, 0, 11, 11]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500992, '$12': 5, '$13': 3, '$14': 0, '$15': 0, '$16': 0, '$17': 6, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 165
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268500996
ReadData: 5
rd: 18
rt: 18

1 0 1
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 1
WriteData: 0
rd: 14
rt: 14

ID
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 9
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [17, 18, 1, 2090, 36833322, 6, 1]

*** Forwarding, MEM->EX(rt) ***
*** Previous 2nd EX - forwarding, MEM->EX(rt) ***
IF
pc: 0x400048
instruction: ['00010100001000001111111111111001', 4194376]
IFID: ['00010100001000001111111111111001', 4194376]
IDEX: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 9, 4194372, [17, 18, 1, 2090, 36833322, 6, 5]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 1, 0, 14, 14, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268500996, 5, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500996, '$12': 5, '$13': 3, '$14': 0, '$15': 0, '$16': 0, '$17': 6, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 166
_________________________
*** Forwarding, MEM->EX(rt) ***
*** Previous 2nd EX - forwarding, MEM->EX(rt) ***
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 1
ReadData: 0
rd: 14
rt: 14

0 6 5
EX
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 0
WriteData: 5
rd: 1
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 11
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [1, 0, 31, -7, 2162681, 0, 0]

*** Forwarding EX->EX(rs) ***
IF
pc: 0x40004c
instruction: ['10101101011100010000000000000000', 4194380]
IFID: ['10101101011100010000000000000000', 4194380]
IDEX: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, 11, 4194376, [1, 0, 31, -7, 2162681, 0, 0]]
EXMEM: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 5, 1, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 1, 0, 14, 14]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500996, '$12': 5, '$13': 3, '$14': 0, '$15': 0, '$16': 0, '$17': 6, '$18': 5, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 167
_________________________
*** Forwarding EX->EX(rs) ***
MEM
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 0
ReadData: 0
rd: 1
rt: 18

0 0 0
EX
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
WriteData: 0
rd: 0
rt: 0

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 17, 0, 0, 24182784, 268500996, 6]

IF
pc: 0x400050
instruction: ['10101101011100101111111111111100', 4194384]
IFID: ['10101101011100101111111111111100', 4194384]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 0, 4194380, [11, 17, 0, 0, 24182784, 268500996, 6]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 0, 0, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376]]
MEMWB: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 0, 1, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500996, '$12': 5, '$13': 3, '$14': 1, '$15': 0, '$16': 0, '$17': 6, '$18': 5, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 168
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
ReadData: 0
rd: 0
rt: 0

1 268500996 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268500996
WriteData: 6
rd: 17
rt: 17

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 18, 31, -4, 24313852, 268500996, 5]

IF
pc: 0x400054
instruction: ['00001000000100000000000000001100', 4194388]
IFID: ['00001000000100000000000000001100', 4194388]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 0, 4194384, [11, 18, 31, -4, 24313852, 268500996, 5]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268500996, 6, 17, 17, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 0, 0]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500996, '$12': 5, '$13': 3, '$14': 1, '$15': 0, '$16': 0, '$17': 6, '$18': 5, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 169
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268500996
ReadData: 0
rd: 17
rt: 17

1 268500996 -4
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268500992
WriteData: 5
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 1}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [0, 16, 0, 12, 1048588, 0, 0]

jumping to: 0x400030
IF
pc: 0x400030
instruction: ['00010001110011001111111111111001', 4194352]
IFID: ['00010001110011001111111111111001', 4194352]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 1}, 0, 4194388, [0, 16, 0, 12, 1048588, 0, 0]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268500992, 5, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268500996, 0, 17, 17]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500996, '$12': 5, '$13': 3, '$14': 1, '$15': 0, '$16': 0, '$17': 6, '$18': 5, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 170
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268500992
ReadData: 0
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 10
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [14, 12, 31, -7, 30212089, 1, 5]

IF
pc: 0x400034
instruction: ['10001101011100010000000000000000', 4194356]
IFID: ['10001101011100010000000000000000', 4194356]
IDEX: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, 10, 4194352, [14, 12, 31, -7, 30212089, 1, 5]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268500992, 268500992, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268500992, 0, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500996, '$12': 5, '$13': 3, '$14': 1, '$15': 0, '$16': 0, '$17': 6, '$18': 5, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 171
_________________________
0 1 5
EX
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
WriteData: 5
rd: 12
rt: 12

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 17, 0, 0, 24182784, 268500996, 6]

IF
pc: 0x400038
instruction: ['00100001011010110000000000000100', 4194360]
IFID: ['00100001011010110000000000000100', 4194360]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194356, [11, 17, 0, 0, 24182784, 268500996, 6]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 5, 12, 12, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268500992, 0, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500996, '$12': 5, '$13': 3, '$14': 1, '$15': 0, '$16': 0, '$17': 6, '$18': 5, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 172
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
ReadData: 0
rd: 12
rt: 12

1 268500996 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268500996
WriteData: 6
rd: 17
rt: 17

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 11, 0, 4, 23789572, 268500996, 268500996]

IF
pc: 0x40003c
instruction: ['10001101011100100000000000000000', 4194364]
IFID: ['10001101011100100000000000000000', 4194364]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194360, [11, 11, 0, 4, 23789572, 268500996, 268500996]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268500996, 6, 17, 17, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 12, 12]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500996, '$12': 5, '$13': 3, '$14': 1, '$15': 0, '$16': 0, '$17': 6, '$18': 5, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 173
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268500996
ReadData: 6
rd: 17
rt: 17

1 268500996 4
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501000
WriteData: 268500996
rd: 11
rt: 11

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 18, 0, 0, 24248320, 268500996, 5]

*** Forwarding EX->EX(rs) ***
IF
pc: 0x400040
instruction: ['00100001110011100000000000000001', 4194368]
IFID: ['00100001110011100000000000000001', 4194368]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194364, [11, 18, 0, 0, 24248320, 268501000, 5]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501000, 268500996, 11, 11, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268500996, 6, 17, 17]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500996, '$12': 5, '$13': 3, '$14': 1, '$15': 0, '$16': 0, '$17': 6, '$18': 5, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 174
_________________________
*** Forwarding EX->EX(rs) ***
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501000
ReadData: 0
rd: 11
rt: 11

1 268501000 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501000
WriteData: 5
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [14, 14, 0, 1, 30277633, 1, 1]

IF
pc: 0x400044
instruction: ['00000010001100100000100000101010', 4194372]
IFID: ['00000010001100100000100000101010', 4194372]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194368, [14, 14, 0, 1, 30277633, 1, 1]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501000, 5, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501000, 0, 11, 11]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500996, '$12': 5, '$13': 3, '$14': 1, '$15': 0, '$16': 0, '$17': 6, '$18': 5, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 175
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501000
ReadData: 4
rd: 18
rt: 18

1 1 1
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 2
WriteData: 1
rd: 14
rt: 14

ID
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 9
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [17, 18, 1, 2090, 36833322, 6, 5]

*** Forwarding, MEM->EX(rt) ***
*** Previous 2nd EX - forwarding, MEM->EX(rt) ***
IF
pc: 0x400048
instruction: ['00010100001000001111111111111001', 4194376]
IFID: ['00010100001000001111111111111001', 4194376]
IDEX: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 9, 4194372, [17, 18, 1, 2090, 36833322, 6, 4]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 2, 1, 14, 14, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501000, 4, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501000, '$12': 5, '$13': 3, '$14': 1, '$15': 0, '$16': 0, '$17': 6, '$18': 5, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 176
_________________________
*** Forwarding, MEM->EX(rt) ***
*** Previous 2nd EX - forwarding, MEM->EX(rt) ***
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 2
ReadData: 0
rd: 14
rt: 14

0 6 4
EX
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 0
WriteData: 4
rd: 1
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 11
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [1, 0, 31, -7, 2162681, 0, 0]

*** Forwarding EX->EX(rs) ***
IF
pc: 0x40004c
instruction: ['10101101011100010000000000000000', 4194380]
IFID: ['10101101011100010000000000000000', 4194380]
IDEX: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, 11, 4194376, [1, 0, 31, -7, 2162681, 0, 0]]
EXMEM: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 4, 1, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 2, 0, 14, 14]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501000, '$12': 5, '$13': 3, '$14': 1, '$15': 0, '$16': 0, '$17': 6, '$18': 4, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 177
_________________________
*** Forwarding EX->EX(rs) ***
MEM
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 0
ReadData: 0
rd: 1
rt: 18

0 0 0
EX
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
WriteData: 0
rd: 0
rt: 0

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 17, 0, 0, 24182784, 268501000, 6]

IF
pc: 0x400050
instruction: ['10101101011100101111111111111100', 4194384]
IFID: ['10101101011100101111111111111100', 4194384]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 0, 4194380, [11, 17, 0, 0, 24182784, 268501000, 6]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 0, 0, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376]]
MEMWB: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 0, 1, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501000, '$12': 5, '$13': 3, '$14': 2, '$15': 0, '$16': 0, '$17': 6, '$18': 4, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 178
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
ReadData: 0
rd: 0
rt: 0

1 268501000 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268501000
WriteData: 6
rd: 17
rt: 17

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 18, 31, -4, 24313852, 268501000, 4]

IF
pc: 0x400054
instruction: ['00001000000100000000000000001100', 4194388]
IFID: ['00001000000100000000000000001100', 4194388]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 0, 4194384, [11, 18, 31, -4, 24313852, 268501000, 4]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501000, 6, 17, 17, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 0, 0]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501000, '$12': 5, '$13': 3, '$14': 2, '$15': 0, '$16': 0, '$17': 6, '$18': 4, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 179
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268501000
ReadData: 0
rd: 17
rt: 17

1 268501000 -4
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268500996
WriteData: 4
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 1}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [0, 16, 0, 12, 1048588, 0, 0]

jumping to: 0x400030
IF
pc: 0x400030
instruction: ['00010001110011001111111111111001', 4194352]
IFID: ['00010001110011001111111111111001', 4194352]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 1}, 0, 4194388, [0, 16, 0, 12, 1048588, 0, 0]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268500996, 4, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501000, 0, 17, 17]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501000, '$12': 5, '$13': 3, '$14': 2, '$15': 0, '$16': 0, '$17': 6, '$18': 4, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 180
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268500996
ReadData: 0
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 10
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [14, 12, 31, -7, 30212089, 2, 5]

IF
pc: 0x400034
instruction: ['10001101011100010000000000000000', 4194356]
IFID: ['10001101011100010000000000000000', 4194356]
IDEX: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, 10, 4194352, [14, 12, 31, -7, 30212089, 2, 5]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268500996, 268500996, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268500996, 0, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501000, '$12': 5, '$13': 3, '$14': 2, '$15': 0, '$16': 0, '$17': 6, '$18': 4, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 181
_________________________
0 2 5
EX
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
WriteData: 5
rd: 12
rt: 12

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 17, 0, 0, 24182784, 268501000, 6]

IF
pc: 0x400038
instruction: ['00100001011010110000000000000100', 4194360]
IFID: ['00100001011010110000000000000100', 4194360]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194356, [11, 17, 0, 0, 24182784, 268501000, 6]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 5, 12, 12, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268500996, 0, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501000, '$12': 5, '$13': 3, '$14': 2, '$15': 0, '$16': 0, '$17': 6, '$18': 4, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 182
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
ReadData: 0
rd: 12
rt: 12

1 268501000 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501000
WriteData: 6
rd: 17
rt: 17

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 11, 0, 4, 23789572, 268501000, 268501000]

IF
pc: 0x40003c
instruction: ['10001101011100100000000000000000', 4194364]
IFID: ['10001101011100100000000000000000', 4194364]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194360, [11, 11, 0, 4, 23789572, 268501000, 268501000]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501000, 6, 17, 17, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 12, 12]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501000, '$12': 5, '$13': 3, '$14': 2, '$15': 0, '$16': 0, '$17': 6, '$18': 4, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 183
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501000
ReadData: 6
rd: 17
rt: 17

1 268501000 4
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501004
WriteData: 268501000
rd: 11
rt: 11

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 18, 0, 0, 24248320, 268501000, 4]

*** Forwarding EX->EX(rs) ***
IF
pc: 0x400040
instruction: ['00100001110011100000000000000001', 4194368]
IFID: ['00100001110011100000000000000001', 4194368]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194364, [11, 18, 0, 0, 24248320, 268501004, 4]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501004, 268501000, 11, 11, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501000, 6, 17, 17]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501000, '$12': 5, '$13': 3, '$14': 2, '$15': 0, '$16': 0, '$17': 6, '$18': 4, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 184
_________________________
*** Forwarding EX->EX(rs) ***
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501004
ReadData: 0
rd: 11
rt: 11

1 268501004 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501004
WriteData: 4
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [14, 14, 0, 1, 30277633, 2, 2]

IF
pc: 0x400044
instruction: ['00000010001100100000100000101010', 4194372]
IFID: ['00000010001100100000100000101010', 4194372]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194368, [14, 14, 0, 1, 30277633, 2, 2]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501004, 4, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501004, 0, 11, 11]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501000, '$12': 5, '$13': 3, '$14': 2, '$15': 0, '$16': 0, '$17': 6, '$18': 4, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 185
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501004
ReadData: 3
rd: 18
rt: 18

1 2 1
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 3
WriteData: 2
rd: 14
rt: 14

ID
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 9
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [17, 18, 1, 2090, 36833322, 6, 4]

*** Forwarding, MEM->EX(rt) ***
*** Previous 2nd EX - forwarding, MEM->EX(rt) ***
IF
pc: 0x400048
instruction: ['00010100001000001111111111111001', 4194376]
IFID: ['00010100001000001111111111111001', 4194376]
IDEX: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 9, 4194372, [17, 18, 1, 2090, 36833322, 6, 3]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 3, 2, 14, 14, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501004, 3, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501004, '$12': 5, '$13': 3, '$14': 2, '$15': 0, '$16': 0, '$17': 6, '$18': 4, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 186
_________________________
*** Forwarding, MEM->EX(rt) ***
*** Previous 2nd EX - forwarding, MEM->EX(rt) ***
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 3
ReadData: 0
rd: 14
rt: 14

0 6 3
EX
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 0
WriteData: 3
rd: 1
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 11
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [1, 0, 31, -7, 2162681, 0, 0]

*** Forwarding EX->EX(rs) ***
IF
pc: 0x40004c
instruction: ['10101101011100010000000000000000', 4194380]
IFID: ['10101101011100010000000000000000', 4194380]
IDEX: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, 11, 4194376, [1, 0, 31, -7, 2162681, 0, 0]]
EXMEM: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 3, 1, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 3, 0, 14, 14]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501004, '$12': 5, '$13': 3, '$14': 2, '$15': 0, '$16': 0, '$17': 6, '$18': 3, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 187
_________________________
*** Forwarding EX->EX(rs) ***
MEM
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 0
ReadData: 0
rd: 1
rt: 18

0 0 0
EX
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
WriteData: 0
rd: 0
rt: 0

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 17, 0, 0, 24182784, 268501004, 6]

IF
pc: 0x400050
instruction: ['10101101011100101111111111111100', 4194384]
IFID: ['10101101011100101111111111111100', 4194384]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 0, 4194380, [11, 17, 0, 0, 24182784, 268501004, 6]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 0, 0, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376]]
MEMWB: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 0, 1, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501004, '$12': 5, '$13': 3, '$14': 3, '$15': 0, '$16': 0, '$17': 6, '$18': 3, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 188
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
ReadData: 0
rd: 0
rt: 0

1 268501004 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268501004
WriteData: 6
rd: 17
rt: 17

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 18, 31, -4, 24313852, 268501004, 3]

IF
pc: 0x400054
instruction: ['00001000000100000000000000001100', 4194388]
IFID: ['00001000000100000000000000001100', 4194388]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 0, 4194384, [11, 18, 31, -4, 24313852, 268501004, 3]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501004, 6, 17, 17, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 0, 0]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501004, '$12': 5, '$13': 3, '$14': 3, '$15': 0, '$16': 0, '$17': 6, '$18': 3, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 189
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268501004
ReadData: 0
rd: 17
rt: 17

1 268501004 -4
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268501000
WriteData: 3
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 1}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [0, 16, 0, 12, 1048588, 0, 0]

jumping to: 0x400030
IF
pc: 0x400030
instruction: ['00010001110011001111111111111001', 4194352]
IFID: ['00010001110011001111111111111001', 4194352]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 1}, 0, 4194388, [0, 16, 0, 12, 1048588, 0, 0]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501000, 3, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501004, 0, 17, 17]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501004, '$12': 5, '$13': 3, '$14': 3, '$15': 0, '$16': 0, '$17': 6, '$18': 3, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 190
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268501000
ReadData: 0
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 10
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [14, 12, 31, -7, 30212089, 3, 5]

IF
pc: 0x400034
instruction: ['10001101011100010000000000000000', 4194356]
IFID: ['10001101011100010000000000000000', 4194356]
IDEX: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, 10, 4194352, [14, 12, 31, -7, 30212089, 3, 5]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501000, 268501000, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501000, 0, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501004, '$12': 5, '$13': 3, '$14': 3, '$15': 0, '$16': 0, '$17': 6, '$18': 3, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 191
_________________________
0 3 5
EX
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
WriteData: 5
rd: 12
rt: 12

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 17, 0, 0, 24182784, 268501004, 6]

IF
pc: 0x400038
instruction: ['00100001011010110000000000000100', 4194360]
IFID: ['00100001011010110000000000000100', 4194360]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194356, [11, 17, 0, 0, 24182784, 268501004, 6]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 5, 12, 12, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501000, 0, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501004, '$12': 5, '$13': 3, '$14': 3, '$15': 0, '$16': 0, '$17': 6, '$18': 3, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 192
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
ReadData: 0
rd: 12
rt: 12

1 268501004 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501004
WriteData: 6
rd: 17
rt: 17

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 11, 0, 4, 23789572, 268501004, 268501004]

IF
pc: 0x40003c
instruction: ['10001101011100100000000000000000', 4194364]
IFID: ['10001101011100100000000000000000', 4194364]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194360, [11, 11, 0, 4, 23789572, 268501004, 268501004]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501004, 6, 17, 17, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 12, 12]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501004, '$12': 5, '$13': 3, '$14': 3, '$15': 0, '$16': 0, '$17': 6, '$18': 3, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 193
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501004
ReadData: 6
rd: 17
rt: 17

1 268501004 4
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501008
WriteData: 268501004
rd: 11
rt: 11

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 18, 0, 0, 24248320, 268501004, 3]

*** Forwarding EX->EX(rs) ***
IF
pc: 0x400040
instruction: ['00100001110011100000000000000001', 4194368]
IFID: ['00100001110011100000000000000001', 4194368]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194364, [11, 18, 0, 0, 24248320, 268501008, 3]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501008, 268501004, 11, 11, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501004, 6, 17, 17]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501004, '$12': 5, '$13': 3, '$14': 3, '$15': 0, '$16': 0, '$17': 6, '$18': 3, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 194
_________________________
*** Forwarding EX->EX(rs) ***
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501008
ReadData: 0
rd: 11
rt: 11

1 268501008 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501008
WriteData: 3
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [14, 14, 0, 1, 30277633, 3, 3]

IF
pc: 0x400044
instruction: ['00000010001100100000100000101010', 4194372]
IFID: ['00000010001100100000100000101010', 4194372]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194368, [14, 14, 0, 1, 30277633, 3, 3]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501008, 3, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501008, 0, 11, 11]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501004, '$12': 5, '$13': 3, '$14': 3, '$15': 0, '$16': 0, '$17': 6, '$18': 3, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 195
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501008
ReadData: 2
rd: 18
rt: 18

1 3 1
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 4
WriteData: 3
rd: 14
rt: 14

ID
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 9
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [17, 18, 1, 2090, 36833322, 6, 3]

*** Forwarding, MEM->EX(rt) ***
*** Previous 2nd EX - forwarding, MEM->EX(rt) ***
IF
pc: 0x400048
instruction: ['00010100001000001111111111111001', 4194376]
IFID: ['00010100001000001111111111111001', 4194376]
IDEX: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 9, 4194372, [17, 18, 1, 2090, 36833322, 6, 2]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 4, 3, 14, 14, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501008, 2, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501008, '$12': 5, '$13': 3, '$14': 3, '$15': 0, '$16': 0, '$17': 6, '$18': 3, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 196
_________________________
*** Forwarding, MEM->EX(rt) ***
*** Previous 2nd EX - forwarding, MEM->EX(rt) ***
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 4
ReadData: 0
rd: 14
rt: 14

0 6 2
EX
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 0
WriteData: 2
rd: 1
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 11
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [1, 0, 31, -7, 2162681, 0, 0]

*** Forwarding EX->EX(rs) ***
IF
pc: 0x40004c
instruction: ['10101101011100010000000000000000', 4194380]
IFID: ['10101101011100010000000000000000', 4194380]
IDEX: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, 11, 4194376, [1, 0, 31, -7, 2162681, 0, 0]]
EXMEM: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 2, 1, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 4, 0, 14, 14]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501008, '$12': 5, '$13': 3, '$14': 3, '$15': 0, '$16': 0, '$17': 6, '$18': 2, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 197
_________________________
*** Forwarding EX->EX(rs) ***
MEM
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 0
ReadData: 0
rd: 1
rt: 18

0 0 0
EX
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
WriteData: 0
rd: 0
rt: 0

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 17, 0, 0, 24182784, 268501008, 6]

IF
pc: 0x400050
instruction: ['10101101011100101111111111111100', 4194384]
IFID: ['10101101011100101111111111111100', 4194384]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 0, 4194380, [11, 17, 0, 0, 24182784, 268501008, 6]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 0, 0, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376]]
MEMWB: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 0, 1, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501008, '$12': 5, '$13': 3, '$14': 4, '$15': 0, '$16': 0, '$17': 6, '$18': 2, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 198
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
ReadData: 0
rd: 0
rt: 0

1 268501008 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268501008
WriteData: 6
rd: 17
rt: 17

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 18, 31, -4, 24313852, 268501008, 2]

IF
pc: 0x400054
instruction: ['00001000000100000000000000001100', 4194388]
IFID: ['00001000000100000000000000001100', 4194388]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 0, 4194384, [11, 18, 31, -4, 24313852, 268501008, 2]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501008, 6, 17, 17, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 0, 0]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501008, '$12': 5, '$13': 3, '$14': 4, '$15': 0, '$16': 0, '$17': 6, '$18': 2, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 199
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268501008
ReadData: 0
rd: 17
rt: 17

1 268501008 -4
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268501004
WriteData: 2
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 1}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [0, 16, 0, 12, 1048588, 0, 0]

jumping to: 0x400030
IF
pc: 0x400030
instruction: ['00010001110011001111111111111001', 4194352]
IFID: ['00010001110011001111111111111001', 4194352]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 1}, 0, 4194388, [0, 16, 0, 12, 1048588, 0, 0]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501004, 2, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501008, 0, 17, 17]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501008, '$12': 5, '$13': 3, '$14': 4, '$15': 0, '$16': 0, '$17': 6, '$18': 2, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 200
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268501004
ReadData: 0
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 10
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [14, 12, 31, -7, 30212089, 4, 5]

IF
pc: 0x400034
instruction: ['10001101011100010000000000000000', 4194356]
IFID: ['10001101011100010000000000000000', 4194356]
IDEX: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, 10, 4194352, [14, 12, 31, -7, 30212089, 4, 5]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501004, 268501004, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501004, 0, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501008, '$12': 5, '$13': 3, '$14': 4, '$15': 0, '$16': 0, '$17': 6, '$18': 2, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 201
_________________________
0 4 5
EX
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
WriteData: 5
rd: 12
rt: 12

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 17, 0, 0, 24182784, 268501008, 6]

IF
pc: 0x400038
instruction: ['00100001011010110000000000000100', 4194360]
IFID: ['00100001011010110000000000000100', 4194360]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194356, [11, 17, 0, 0, 24182784, 268501008, 6]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 5, 12, 12, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501004, 0, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501008, '$12': 5, '$13': 3, '$14': 4, '$15': 0, '$16': 0, '$17': 6, '$18': 2, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 202
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
ReadData: 0
rd: 12
rt: 12

1 268501008 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501008
WriteData: 6
rd: 17
rt: 17

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 11, 0, 4, 23789572, 268501008, 268501008]

IF
pc: 0x40003c
instruction: ['10001101011100100000000000000000', 4194364]
IFID: ['10001101011100100000000000000000', 4194364]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194360, [11, 11, 0, 4, 23789572, 268501008, 268501008]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501008, 6, 17, 17, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 12, 12]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501008, '$12': 5, '$13': 3, '$14': 4, '$15': 0, '$16': 0, '$17': 6, '$18': 2, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 203
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501008
ReadData: 6
rd: 17
rt: 17

1 268501008 4
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501012
WriteData: 268501008
rd: 11
rt: 11

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 18, 0, 0, 24248320, 268501008, 2]

*** Forwarding EX->EX(rs) ***
IF
pc: 0x400040
instruction: ['00100001110011100000000000000001', 4194368]
IFID: ['00100001110011100000000000000001', 4194368]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194364, [11, 18, 0, 0, 24248320, 268501012, 2]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501012, 268501008, 11, 11, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501008, 6, 17, 17]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501008, '$12': 5, '$13': 3, '$14': 4, '$15': 0, '$16': 0, '$17': 6, '$18': 2, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 204
_________________________
*** Forwarding EX->EX(rs) ***
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501012
ReadData: 0
rd: 11
rt: 11

1 268501012 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501012
WriteData: 2
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [14, 14, 0, 1, 30277633, 4, 4]

IF
pc: 0x400044
instruction: ['00000010001100100000100000101010', 4194372]
IFID: ['00000010001100100000100000101010', 4194372]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194368, [14, 14, 0, 1, 30277633, 4, 4]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501012, 2, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501012, 0, 11, 11]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501008, '$12': 5, '$13': 3, '$14': 4, '$15': 0, '$16': 0, '$17': 6, '$18': 2, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 205
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501012
ReadData: 1
rd: 18
rt: 18

1 4 1
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 5
WriteData: 4
rd: 14
rt: 14

ID
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 9
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [17, 18, 1, 2090, 36833322, 6, 2]

*** Forwarding, MEM->EX(rt) ***
*** Previous 2nd EX - forwarding, MEM->EX(rt) ***
IF
pc: 0x400048
instruction: ['00010100001000001111111111111001', 4194376]
IFID: ['00010100001000001111111111111001', 4194376]
IDEX: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 9, 4194372, [17, 18, 1, 2090, 36833322, 6, 1]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 5, 4, 14, 14, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501012, 1, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501012, '$12': 5, '$13': 3, '$14': 4, '$15': 0, '$16': 0, '$17': 6, '$18': 2, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 206
_________________________
*** Forwarding, MEM->EX(rt) ***
*** Previous 2nd EX - forwarding, MEM->EX(rt) ***
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 5
ReadData: 0
rd: 14
rt: 14

0 6 1
EX
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 0
WriteData: 1
rd: 1
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 11
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [1, 0, 31, -7, 2162681, 0, 0]

*** Forwarding EX->EX(rs) ***
IF
pc: 0x40004c
instruction: ['10101101011100010000000000000000', 4194380]
IFID: ['10101101011100010000000000000000', 4194380]
IDEX: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, 11, 4194376, [1, 0, 31, -7, 2162681, 0, 0]]
EXMEM: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 1, 1, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 5, 0, 14, 14]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501012, '$12': 5, '$13': 3, '$14': 4, '$15': 0, '$16': 0, '$17': 6, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 207
_________________________
*** Forwarding EX->EX(rs) ***
MEM
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 0
ReadData: 0
rd: 1
rt: 18

0 0 0
EX
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
WriteData: 0
rd: 0
rt: 0

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 17, 0, 0, 24182784, 268501012, 6]

IF
pc: 0x400050
instruction: ['10101101011100101111111111111100', 4194384]
IFID: ['10101101011100101111111111111100', 4194384]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 0, 4194380, [11, 17, 0, 0, 24182784, 268501012, 6]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 0, 0, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376]]
MEMWB: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 0, 1, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501012, '$12': 5, '$13': 3, '$14': 5, '$15': 0, '$16': 0, '$17': 6, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 208
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
ReadData: 0
rd: 0
rt: 0

1 268501012 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268501012
WriteData: 6
rd: 17
rt: 17

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 18, 31, -4, 24313852, 268501012, 1]

IF
pc: 0x400054
instruction: ['00001000000100000000000000001100', 4194388]
IFID: ['00001000000100000000000000001100', 4194388]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 0, 4194384, [11, 18, 31, -4, 24313852, 268501012, 1]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501012, 6, 17, 17, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 0, 0]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501012, '$12': 5, '$13': 3, '$14': 5, '$15': 0, '$16': 0, '$17': 6, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 209
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268501012
ReadData: 0
rd: 17
rt: 17

1 268501012 -4
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268501008
WriteData: 1
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 1}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [0, 16, 0, 12, 1048588, 0, 0]

jumping to: 0x400030
IF
pc: 0x400030
instruction: ['00010001110011001111111111111001', 4194352]
IFID: ['00010001110011001111111111111001', 4194352]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 1}, 0, 4194388, [0, 16, 0, 12, 1048588, 0, 0]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501008, 1, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501012, 0, 17, 17]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501012, '$12': 5, '$13': 3, '$14': 5, '$15': 0, '$16': 0, '$17': 6, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 210
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268501008
ReadData: 0
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 10
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [14, 12, 31, -7, 30212089, 5, 5]

IF
pc: 0x400034
instruction: ['10001101011100010000000000000000', 4194356]
IFID: ['10001101011100010000000000000000', 4194356]
IDEX: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, 10, 4194352, [14, 12, 31, -7, 30212089, 5, 5]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501008, 268501008, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501008, 0, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501012, '$12': 5, '$13': 3, '$14': 5, '$15': 0, '$16': 0, '$17': 6, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 211
_________________________
0 5 5
EX
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: True
WriteData: 5
rd: 12
rt: 12

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 17, 0, 0, 24182784, 268501012, 6]

IF
pc: 0x400038
instruction: ['00100001011010110000000000000100', 4194360]
flushing pipeline
flushing pipeline, PC set to  0x400018
IFID: ['00100001011010110000000000000100', 4194360]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194356, [11, 17, 0, 0, 24182784, 268501012, 6]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, True, 5, 12, 12, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501008, 0, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501012, '$12': 5, '$13': 3, '$14': 5, '$15': 0, '$16': 0, '$17': 6, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 212
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: True
ReadData: 0
rd: 12
rt: 12

IF
pc: 0x400018
instruction: ['00010001101110000000000000001111', 4194328]
IFID: ['00010001101110000000000000001111', 4194328]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194356, [11, 17, 0, 0, 24182784, 268501012, 6]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, True, 5, 12, 12, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, True, 0, 12, 12]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501012, '$12': 5, '$13': 3, '$14': 5, '$15': 0, '$16': 0, '$17': 6, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 213
_________________________
ID
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 10
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [13, 24, 0, 15, 28835855, 3, 7]

IF
pc: 0x40001c
instruction: ['00000011000011010110000000100010', 4194332]
IFID: ['00000011000011010110000000100010', 4194332]
IDEX: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, 10, 4194328, [13, 24, 0, 15, 28835855, 3, 7]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, True, 5, 12, 12, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, True, 0, 12, 12]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501012, '$12': 5, '$13': 3, '$14': 5, '$15': 0, '$16': 0, '$17': 6, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 214
_________________________
0 3 7
EX
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
WriteData: 7
rd: 24
rt: 24

ID
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 15
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [24, 13, 12, 24610, 51208226, 7, 3]

IF
pc: 0x400020
instruction: ['00000000000000000111000000100000', 4194336]
IFID: ['00000000000000000111000000100000', 4194336]
IDEX: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 15, 4194332, [24, 13, 12, 24610, 51208226, 7, 3]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 7, 24, 24, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, True, 0, 12, 12]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501012, '$12': 5, '$13': 3, '$14': 5, '$15': 0, '$16': 0, '$17': 6, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 215
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
ReadData: 0
rd: 24
rt: 24

0 7 3
EX
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 4
WriteData: 3
rd: 12
rt: 13

ID
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [0, 0, 14, 28704, 28704, 0, 0]

IF
pc: 0x400024
instruction: ['00000001001000000101100000100000', 4194340]
IFID: ['00000001001000000101100000100000', 4194340]
IDEX: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 4194336, [0, 0, 14, 28704, 28704, 0, 0]]
EXMEM: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 4, 3, 12, 13, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 24, 24]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501012, '$12': 5, '$13': 3, '$14': 5, '$15': 0, '$16': 0, '$17': 6, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 216
_________________________
MEM
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 4
ReadData: 0
rd: 12
rt: 13

0 0 0
EX
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 0
WriteData: 0
rd: 14
rt: 0

ID
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [9, 0, 11, 22560, 18896928, 268500992, 0]

IF
pc: 0x400028
instruction: ['00100001101011010000000000000001', 4194344]
IFID: ['00100001101011010000000000000001', 4194344]
IDEX: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 4194340, [9, 0, 11, 22560, 18896928, 268500992, 0]]
EXMEM: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 0, 14, 0, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336]]
MEMWB: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 4, 0, 12, 13]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501012, '$12': 5, '$13': 3, '$14': 5, '$15': 0, '$16': 0, '$17': 6, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 217
_________________________
MEM
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 0
ReadData: 0
rd: 14
rt: 0

0 268500992 0
EX
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268500992
WriteData: 0
rd: 11
rt: 0

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [13, 13, 0, 1, 28114945, 3, 3]

IF
pc: 0x40002c
instruction: ['00001000000100000000000000001100', 4194348]
IFID: ['00001000000100000000000000001100', 4194348]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194344, [13, 13, 0, 1, 28114945, 3, 3]]
EXMEM: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 268500992, 0, 11, 0, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340]]
MEMWB: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 0, 14, 0]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501012, '$12': 4, '$13': 3, '$14': 5, '$15': 0, '$16': 0, '$17': 6, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 218
_________________________
MEM
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268500992
ReadData: 0
rd: 11
rt: 0

1 3 1
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 4
WriteData: 3
rd: 13
rt: 13

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 1}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [0, 16, 0, 12, 1048588, 0, 0]

jumping to: 0x400030
IF
pc: 0x400030
instruction: ['00010001110011001111111111111001', 4194352]
IFID: ['00010001110011001111111111111001', 4194352]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 1}, 0, 4194348, [0, 16, 0, 12, 1048588, 0, 0]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 4, 3, 13, 13, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344]]
MEMWB: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 268500992, 0, 11, 0]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501012, '$12': 4, '$13': 3, '$14': 0, '$15': 0, '$16': 0, '$17': 6, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 219
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 4
ReadData: 0
rd: 13
rt: 13

ID
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 10
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [14, 12, 31, -7, 30212089, 0, 4]

IF
pc: 0x400034
instruction: ['10001101011100010000000000000000', 4194356]
IFID: ['10001101011100010000000000000000', 4194356]
IDEX: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, 10, 4194352, [14, 12, 31, -7, 30212089, 0, 4]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 4, 3, 13, 13, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 4, 0, 13, 13]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500992, '$12': 4, '$13': 3, '$14': 0, '$15': 0, '$16': 0, '$17': 6, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 220
_________________________
0 0 4
EX
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
WriteData: 4
rd: 12
rt: 12

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 17, 0, 0, 24182784, 268500992, 6]

IF
pc: 0x400038
instruction: ['00100001011010110000000000000100', 4194360]
IFID: ['00100001011010110000000000000100', 4194360]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194356, [11, 17, 0, 0, 24182784, 268500992, 6]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 4, 12, 12, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 4, 0, 13, 13]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500992, '$12': 4, '$13': 4, '$14': 0, '$15': 0, '$16': 0, '$17': 6, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 221
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
ReadData: 0
rd: 12
rt: 12

1 268500992 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268500992
WriteData: 6
rd: 17
rt: 17

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 11, 0, 4, 23789572, 268500992, 268500992]

IF
pc: 0x40003c
instruction: ['10001101011100100000000000000000', 4194364]
IFID: ['10001101011100100000000000000000', 4194364]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194360, [11, 11, 0, 4, 23789572, 268500992, 268500992]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268500992, 6, 17, 17, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 12, 12]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500992, '$12': 4, '$13': 4, '$14': 0, '$15': 0, '$16': 0, '$17': 6, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 222
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268500992
ReadData: 5
rd: 17
rt: 17

1 268500992 4
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268500996
WriteData: 268500992
rd: 11
rt: 11

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 18, 0, 0, 24248320, 268500992, 1]

*** Forwarding EX->EX(rs) ***
IF
pc: 0x400040
instruction: ['00100001110011100000000000000001', 4194368]
IFID: ['00100001110011100000000000000001', 4194368]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194364, [11, 18, 0, 0, 24248320, 268500996, 1]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268500996, 268500992, 11, 11, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268500992, 5, 17, 17]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500992, '$12': 4, '$13': 4, '$14': 0, '$15': 0, '$16': 0, '$17': 6, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 223
_________________________
*** Forwarding EX->EX(rs) ***
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268500996
ReadData: 0
rd: 11
rt: 11

1 268500996 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268500996
WriteData: 1
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [14, 14, 0, 1, 30277633, 0, 0]

IF
pc: 0x400044
instruction: ['00000010001100100000100000101010', 4194372]
IFID: ['00000010001100100000100000101010', 4194372]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194368, [14, 14, 0, 1, 30277633, 0, 0]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268500996, 1, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268500996, 0, 11, 11]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500992, '$12': 4, '$13': 4, '$14': 0, '$15': 0, '$16': 0, '$17': 5, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 224
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268500996
ReadData: 4
rd: 18
rt: 18

1 0 1
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 1
WriteData: 0
rd: 14
rt: 14

ID
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 9
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [17, 18, 1, 2090, 36833322, 5, 1]

*** Forwarding, MEM->EX(rt) ***
*** Previous 2nd EX - forwarding, MEM->EX(rt) ***
IF
pc: 0x400048
instruction: ['00010100001000001111111111111001', 4194376]
IFID: ['00010100001000001111111111111001', 4194376]
IDEX: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 9, 4194372, [17, 18, 1, 2090, 36833322, 5, 4]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 1, 0, 14, 14, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268500996, 4, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500996, '$12': 4, '$13': 4, '$14': 0, '$15': 0, '$16': 0, '$17': 5, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 225
_________________________
*** Forwarding, MEM->EX(rt) ***
*** Previous 2nd EX - forwarding, MEM->EX(rt) ***
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 1
ReadData: 0
rd: 14
rt: 14

0 5 4
EX
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 0
WriteData: 4
rd: 1
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 11
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [1, 0, 31, -7, 2162681, 0, 0]

*** Forwarding EX->EX(rs) ***
IF
pc: 0x40004c
instruction: ['10101101011100010000000000000000', 4194380]
IFID: ['10101101011100010000000000000000', 4194380]
IDEX: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, 11, 4194376, [1, 0, 31, -7, 2162681, 0, 0]]
EXMEM: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 4, 1, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 1, 0, 14, 14]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500996, '$12': 4, '$13': 4, '$14': 0, '$15': 0, '$16': 0, '$17': 5, '$18': 4, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 226
_________________________
*** Forwarding EX->EX(rs) ***
MEM
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 0
ReadData: 0
rd: 1
rt: 18

0 0 0
EX
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
WriteData: 0
rd: 0
rt: 0

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 17, 0, 0, 24182784, 268500996, 5]

IF
pc: 0x400050
instruction: ['10101101011100101111111111111100', 4194384]
IFID: ['10101101011100101111111111111100', 4194384]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 0, 4194380, [11, 17, 0, 0, 24182784, 268500996, 5]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 0, 0, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376]]
MEMWB: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 0, 1, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500996, '$12': 4, '$13': 4, '$14': 1, '$15': 0, '$16': 0, '$17': 5, '$18': 4, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 227
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
ReadData: 0
rd: 0
rt: 0

1 268500996 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268500996
WriteData: 5
rd: 17
rt: 17

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 18, 31, -4, 24313852, 268500996, 4]

IF
pc: 0x400054
instruction: ['00001000000100000000000000001100', 4194388]
IFID: ['00001000000100000000000000001100', 4194388]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 0, 4194384, [11, 18, 31, -4, 24313852, 268500996, 4]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268500996, 5, 17, 17, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 0, 0]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500996, '$12': 4, '$13': 4, '$14': 1, '$15': 0, '$16': 0, '$17': 5, '$18': 4, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 228
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268500996
ReadData: 0
rd: 17
rt: 17

1 268500996 -4
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268500992
WriteData: 4
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 1}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [0, 16, 0, 12, 1048588, 0, 0]

jumping to: 0x400030
IF
pc: 0x400030
instruction: ['00010001110011001111111111111001', 4194352]
IFID: ['00010001110011001111111111111001', 4194352]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 1}, 0, 4194388, [0, 16, 0, 12, 1048588, 0, 0]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268500992, 4, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268500996, 0, 17, 17]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500996, '$12': 4, '$13': 4, '$14': 1, '$15': 0, '$16': 0, '$17': 5, '$18': 4, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 229
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268500992
ReadData: 0
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 10
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [14, 12, 31, -7, 30212089, 1, 4]

IF
pc: 0x400034
instruction: ['10001101011100010000000000000000', 4194356]
IFID: ['10001101011100010000000000000000', 4194356]
IDEX: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, 10, 4194352, [14, 12, 31, -7, 30212089, 1, 4]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268500992, 268500992, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268500992, 0, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500996, '$12': 4, '$13': 4, '$14': 1, '$15': 0, '$16': 0, '$17': 5, '$18': 4, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 230
_________________________
0 1 4
EX
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
WriteData: 4
rd: 12
rt: 12

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 17, 0, 0, 24182784, 268500996, 5]

IF
pc: 0x400038
instruction: ['00100001011010110000000000000100', 4194360]
IFID: ['00100001011010110000000000000100', 4194360]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194356, [11, 17, 0, 0, 24182784, 268500996, 5]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 4, 12, 12, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268500992, 0, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500996, '$12': 4, '$13': 4, '$14': 1, '$15': 0, '$16': 0, '$17': 5, '$18': 4, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 231
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
ReadData: 0
rd: 12
rt: 12

1 268500996 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268500996
WriteData: 5
rd: 17
rt: 17

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 11, 0, 4, 23789572, 268500996, 268500996]

IF
pc: 0x40003c
instruction: ['10001101011100100000000000000000', 4194364]
IFID: ['10001101011100100000000000000000', 4194364]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194360, [11, 11, 0, 4, 23789572, 268500996, 268500996]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268500996, 5, 17, 17, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 12, 12]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500996, '$12': 4, '$13': 4, '$14': 1, '$15': 0, '$16': 0, '$17': 5, '$18': 4, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 232
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268500996
ReadData: 5
rd: 17
rt: 17

1 268500996 4
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501000
WriteData: 268500996
rd: 11
rt: 11

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 18, 0, 0, 24248320, 268500996, 4]

*** Forwarding EX->EX(rs) ***
IF
pc: 0x400040
instruction: ['00100001110011100000000000000001', 4194368]
IFID: ['00100001110011100000000000000001', 4194368]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194364, [11, 18, 0, 0, 24248320, 268501000, 4]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501000, 268500996, 11, 11, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268500996, 5, 17, 17]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500996, '$12': 4, '$13': 4, '$14': 1, '$15': 0, '$16': 0, '$17': 5, '$18': 4, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 233
_________________________
*** Forwarding EX->EX(rs) ***
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501000
ReadData: 0
rd: 11
rt: 11

1 268501000 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501000
WriteData: 4
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [14, 14, 0, 1, 30277633, 1, 1]

IF
pc: 0x400044
instruction: ['00000010001100100000100000101010', 4194372]
IFID: ['00000010001100100000100000101010', 4194372]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194368, [14, 14, 0, 1, 30277633, 1, 1]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501000, 4, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501000, 0, 11, 11]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500996, '$12': 4, '$13': 4, '$14': 1, '$15': 0, '$16': 0, '$17': 5, '$18': 4, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 234
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501000
ReadData: 3
rd: 18
rt: 18

1 1 1
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 2
WriteData: 1
rd: 14
rt: 14

ID
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 9
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [17, 18, 1, 2090, 36833322, 5, 4]

*** Forwarding, MEM->EX(rt) ***
*** Previous 2nd EX - forwarding, MEM->EX(rt) ***
IF
pc: 0x400048
instruction: ['00010100001000001111111111111001', 4194376]
IFID: ['00010100001000001111111111111001', 4194376]
IDEX: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 9, 4194372, [17, 18, 1, 2090, 36833322, 5, 3]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 2, 1, 14, 14, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501000, 3, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501000, '$12': 4, '$13': 4, '$14': 1, '$15': 0, '$16': 0, '$17': 5, '$18': 4, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 235
_________________________
*** Forwarding, MEM->EX(rt) ***
*** Previous 2nd EX - forwarding, MEM->EX(rt) ***
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 2
ReadData: 0
rd: 14
rt: 14

0 5 3
EX
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 0
WriteData: 3
rd: 1
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 11
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [1, 0, 31, -7, 2162681, 0, 0]

*** Forwarding EX->EX(rs) ***
IF
pc: 0x40004c
instruction: ['10101101011100010000000000000000', 4194380]
IFID: ['10101101011100010000000000000000', 4194380]
IDEX: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, 11, 4194376, [1, 0, 31, -7, 2162681, 0, 0]]
EXMEM: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 3, 1, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 2, 0, 14, 14]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501000, '$12': 4, '$13': 4, '$14': 1, '$15': 0, '$16': 0, '$17': 5, '$18': 3, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 236
_________________________
*** Forwarding EX->EX(rs) ***
MEM
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 0
ReadData: 0
rd: 1
rt: 18

0 0 0
EX
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
WriteData: 0
rd: 0
rt: 0

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 17, 0, 0, 24182784, 268501000, 5]

IF
pc: 0x400050
instruction: ['10101101011100101111111111111100', 4194384]
IFID: ['10101101011100101111111111111100', 4194384]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 0, 4194380, [11, 17, 0, 0, 24182784, 268501000, 5]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 0, 0, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376]]
MEMWB: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 0, 1, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501000, '$12': 4, '$13': 4, '$14': 2, '$15': 0, '$16': 0, '$17': 5, '$18': 3, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 237
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
ReadData: 0
rd: 0
rt: 0

1 268501000 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268501000
WriteData: 5
rd: 17
rt: 17

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 18, 31, -4, 24313852, 268501000, 3]

IF
pc: 0x400054
instruction: ['00001000000100000000000000001100', 4194388]
IFID: ['00001000000100000000000000001100', 4194388]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 0, 4194384, [11, 18, 31, -4, 24313852, 268501000, 3]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501000, 5, 17, 17, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 0, 0]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501000, '$12': 4, '$13': 4, '$14': 2, '$15': 0, '$16': 0, '$17': 5, '$18': 3, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 238
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268501000
ReadData: 0
rd: 17
rt: 17

1 268501000 -4
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268500996
WriteData: 3
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 1}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [0, 16, 0, 12, 1048588, 0, 0]

jumping to: 0x400030
IF
pc: 0x400030
instruction: ['00010001110011001111111111111001', 4194352]
IFID: ['00010001110011001111111111111001', 4194352]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 1}, 0, 4194388, [0, 16, 0, 12, 1048588, 0, 0]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268500996, 3, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501000, 0, 17, 17]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501000, '$12': 4, '$13': 4, '$14': 2, '$15': 0, '$16': 0, '$17': 5, '$18': 3, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 239
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268500996
ReadData: 0
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 10
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [14, 12, 31, -7, 30212089, 2, 4]

IF
pc: 0x400034
instruction: ['10001101011100010000000000000000', 4194356]
IFID: ['10001101011100010000000000000000', 4194356]
IDEX: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, 10, 4194352, [14, 12, 31, -7, 30212089, 2, 4]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268500996, 268500996, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268500996, 0, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501000, '$12': 4, '$13': 4, '$14': 2, '$15': 0, '$16': 0, '$17': 5, '$18': 3, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 240
_________________________
0 2 4
EX
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
WriteData: 4
rd: 12
rt: 12

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 17, 0, 0, 24182784, 268501000, 5]

IF
pc: 0x400038
instruction: ['00100001011010110000000000000100', 4194360]
IFID: ['00100001011010110000000000000100', 4194360]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194356, [11, 17, 0, 0, 24182784, 268501000, 5]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 4, 12, 12, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268500996, 0, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501000, '$12': 4, '$13': 4, '$14': 2, '$15': 0, '$16': 0, '$17': 5, '$18': 3, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 241
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
ReadData: 0
rd: 12
rt: 12

1 268501000 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501000
WriteData: 5
rd: 17
rt: 17

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 11, 0, 4, 23789572, 268501000, 268501000]

IF
pc: 0x40003c
instruction: ['10001101011100100000000000000000', 4194364]
IFID: ['10001101011100100000000000000000', 4194364]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194360, [11, 11, 0, 4, 23789572, 268501000, 268501000]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501000, 5, 17, 17, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 12, 12]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501000, '$12': 4, '$13': 4, '$14': 2, '$15': 0, '$16': 0, '$17': 5, '$18': 3, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 242
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501000
ReadData: 5
rd: 17
rt: 17

1 268501000 4
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501004
WriteData: 268501000
rd: 11
rt: 11

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 18, 0, 0, 24248320, 268501000, 3]

*** Forwarding EX->EX(rs) ***
IF
pc: 0x400040
instruction: ['00100001110011100000000000000001', 4194368]
IFID: ['00100001110011100000000000000001', 4194368]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194364, [11, 18, 0, 0, 24248320, 268501004, 3]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501004, 268501000, 11, 11, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501000, 5, 17, 17]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501000, '$12': 4, '$13': 4, '$14': 2, '$15': 0, '$16': 0, '$17': 5, '$18': 3, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 243
_________________________
*** Forwarding EX->EX(rs) ***
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501004
ReadData: 0
rd: 11
rt: 11

1 268501004 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501004
WriteData: 3
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [14, 14, 0, 1, 30277633, 2, 2]

IF
pc: 0x400044
instruction: ['00000010001100100000100000101010', 4194372]
IFID: ['00000010001100100000100000101010', 4194372]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194368, [14, 14, 0, 1, 30277633, 2, 2]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501004, 3, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501004, 0, 11, 11]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501000, '$12': 4, '$13': 4, '$14': 2, '$15': 0, '$16': 0, '$17': 5, '$18': 3, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 244
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501004
ReadData: 2
rd: 18
rt: 18

1 2 1
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 3
WriteData: 2
rd: 14
rt: 14

ID
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 9
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [17, 18, 1, 2090, 36833322, 5, 3]

*** Forwarding, MEM->EX(rt) ***
*** Previous 2nd EX - forwarding, MEM->EX(rt) ***
IF
pc: 0x400048
instruction: ['00010100001000001111111111111001', 4194376]
IFID: ['00010100001000001111111111111001', 4194376]
IDEX: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 9, 4194372, [17, 18, 1, 2090, 36833322, 5, 2]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 3, 2, 14, 14, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501004, 2, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501004, '$12': 4, '$13': 4, '$14': 2, '$15': 0, '$16': 0, '$17': 5, '$18': 3, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 245
_________________________
*** Forwarding, MEM->EX(rt) ***
*** Previous 2nd EX - forwarding, MEM->EX(rt) ***
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 3
ReadData: 0
rd: 14
rt: 14

0 5 2
EX
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 0
WriteData: 2
rd: 1
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 11
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [1, 0, 31, -7, 2162681, 0, 0]

*** Forwarding EX->EX(rs) ***
IF
pc: 0x40004c
instruction: ['10101101011100010000000000000000', 4194380]
IFID: ['10101101011100010000000000000000', 4194380]
IDEX: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, 11, 4194376, [1, 0, 31, -7, 2162681, 0, 0]]
EXMEM: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 2, 1, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 3, 0, 14, 14]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501004, '$12': 4, '$13': 4, '$14': 2, '$15': 0, '$16': 0, '$17': 5, '$18': 2, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 246
_________________________
*** Forwarding EX->EX(rs) ***
MEM
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 0
ReadData: 0
rd: 1
rt: 18

0 0 0
EX
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
WriteData: 0
rd: 0
rt: 0

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 17, 0, 0, 24182784, 268501004, 5]

IF
pc: 0x400050
instruction: ['10101101011100101111111111111100', 4194384]
IFID: ['10101101011100101111111111111100', 4194384]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 0, 4194380, [11, 17, 0, 0, 24182784, 268501004, 5]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 0, 0, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376]]
MEMWB: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 0, 1, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501004, '$12': 4, '$13': 4, '$14': 3, '$15': 0, '$16': 0, '$17': 5, '$18': 2, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 247
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
ReadData: 0
rd: 0
rt: 0

1 268501004 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268501004
WriteData: 5
rd: 17
rt: 17

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 18, 31, -4, 24313852, 268501004, 2]

IF
pc: 0x400054
instruction: ['00001000000100000000000000001100', 4194388]
IFID: ['00001000000100000000000000001100', 4194388]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 0, 4194384, [11, 18, 31, -4, 24313852, 268501004, 2]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501004, 5, 17, 17, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 0, 0]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501004, '$12': 4, '$13': 4, '$14': 3, '$15': 0, '$16': 0, '$17': 5, '$18': 2, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 248
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268501004
ReadData: 0
rd: 17
rt: 17

1 268501004 -4
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268501000
WriteData: 2
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 1}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [0, 16, 0, 12, 1048588, 0, 0]

jumping to: 0x400030
IF
pc: 0x400030
instruction: ['00010001110011001111111111111001', 4194352]
IFID: ['00010001110011001111111111111001', 4194352]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 1}, 0, 4194388, [0, 16, 0, 12, 1048588, 0, 0]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501000, 2, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501004, 0, 17, 17]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501004, '$12': 4, '$13': 4, '$14': 3, '$15': 0, '$16': 0, '$17': 5, '$18': 2, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 249
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268501000
ReadData: 0
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 10
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [14, 12, 31, -7, 30212089, 3, 4]

IF
pc: 0x400034
instruction: ['10001101011100010000000000000000', 4194356]
IFID: ['10001101011100010000000000000000', 4194356]
IDEX: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, 10, 4194352, [14, 12, 31, -7, 30212089, 3, 4]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501000, 268501000, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501000, 0, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501004, '$12': 4, '$13': 4, '$14': 3, '$15': 0, '$16': 0, '$17': 5, '$18': 2, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 250
_________________________
0 3 4
EX
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
WriteData: 4
rd: 12
rt: 12

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 17, 0, 0, 24182784, 268501004, 5]

IF
pc: 0x400038
instruction: ['00100001011010110000000000000100', 4194360]
IFID: ['00100001011010110000000000000100', 4194360]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194356, [11, 17, 0, 0, 24182784, 268501004, 5]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 4, 12, 12, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501000, 0, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501004, '$12': 4, '$13': 4, '$14': 3, '$15': 0, '$16': 0, '$17': 5, '$18': 2, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 251
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
ReadData: 0
rd: 12
rt: 12

1 268501004 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501004
WriteData: 5
rd: 17
rt: 17

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 11, 0, 4, 23789572, 268501004, 268501004]

IF
pc: 0x40003c
instruction: ['10001101011100100000000000000000', 4194364]
IFID: ['10001101011100100000000000000000', 4194364]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194360, [11, 11, 0, 4, 23789572, 268501004, 268501004]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501004, 5, 17, 17, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 12, 12]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501004, '$12': 4, '$13': 4, '$14': 3, '$15': 0, '$16': 0, '$17': 5, '$18': 2, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 252
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501004
ReadData: 5
rd: 17
rt: 17

1 268501004 4
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501008
WriteData: 268501004
rd: 11
rt: 11

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 18, 0, 0, 24248320, 268501004, 2]

*** Forwarding EX->EX(rs) ***
IF
pc: 0x400040
instruction: ['00100001110011100000000000000001', 4194368]
IFID: ['00100001110011100000000000000001', 4194368]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194364, [11, 18, 0, 0, 24248320, 268501008, 2]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501008, 268501004, 11, 11, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501004, 5, 17, 17]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501004, '$12': 4, '$13': 4, '$14': 3, '$15': 0, '$16': 0, '$17': 5, '$18': 2, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 253
_________________________
*** Forwarding EX->EX(rs) ***
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501008
ReadData: 0
rd: 11
rt: 11

1 268501008 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501008
WriteData: 2
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [14, 14, 0, 1, 30277633, 3, 3]

IF
pc: 0x400044
instruction: ['00000010001100100000100000101010', 4194372]
IFID: ['00000010001100100000100000101010', 4194372]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194368, [14, 14, 0, 1, 30277633, 3, 3]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501008, 2, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501008, 0, 11, 11]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501004, '$12': 4, '$13': 4, '$14': 3, '$15': 0, '$16': 0, '$17': 5, '$18': 2, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 254
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501008
ReadData: 1
rd: 18
rt: 18

1 3 1
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 4
WriteData: 3
rd: 14
rt: 14

ID
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 9
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [17, 18, 1, 2090, 36833322, 5, 2]

*** Forwarding, MEM->EX(rt) ***
*** Previous 2nd EX - forwarding, MEM->EX(rt) ***
IF
pc: 0x400048
instruction: ['00010100001000001111111111111001', 4194376]
IFID: ['00010100001000001111111111111001', 4194376]
IDEX: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 9, 4194372, [17, 18, 1, 2090, 36833322, 5, 1]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 4, 3, 14, 14, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501008, 1, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501008, '$12': 4, '$13': 4, '$14': 3, '$15': 0, '$16': 0, '$17': 5, '$18': 2, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 255
_________________________
*** Forwarding, MEM->EX(rt) ***
*** Previous 2nd EX - forwarding, MEM->EX(rt) ***
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 4
ReadData: 0
rd: 14
rt: 14

0 5 1
EX
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 0
WriteData: 1
rd: 1
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 11
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [1, 0, 31, -7, 2162681, 0, 0]

*** Forwarding EX->EX(rs) ***
IF
pc: 0x40004c
instruction: ['10101101011100010000000000000000', 4194380]
IFID: ['10101101011100010000000000000000', 4194380]
IDEX: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, 11, 4194376, [1, 0, 31, -7, 2162681, 0, 0]]
EXMEM: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 1, 1, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 4, 0, 14, 14]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501008, '$12': 4, '$13': 4, '$14': 3, '$15': 0, '$16': 0, '$17': 5, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 256
_________________________
*** Forwarding EX->EX(rs) ***
MEM
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 0
ReadData: 0
rd: 1
rt: 18

0 0 0
EX
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
WriteData: 0
rd: 0
rt: 0

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 17, 0, 0, 24182784, 268501008, 5]

IF
pc: 0x400050
instruction: ['10101101011100101111111111111100', 4194384]
IFID: ['10101101011100101111111111111100', 4194384]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 0, 4194380, [11, 17, 0, 0, 24182784, 268501008, 5]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 0, 0, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376]]
MEMWB: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 0, 1, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501008, '$12': 4, '$13': 4, '$14': 4, '$15': 0, '$16': 0, '$17': 5, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 257
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
ReadData: 0
rd: 0
rt: 0

1 268501008 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268501008
WriteData: 5
rd: 17
rt: 17

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 18, 31, -4, 24313852, 268501008, 1]

IF
pc: 0x400054
instruction: ['00001000000100000000000000001100', 4194388]
IFID: ['00001000000100000000000000001100', 4194388]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 0, 4194384, [11, 18, 31, -4, 24313852, 268501008, 1]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501008, 5, 17, 17, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 0, 0]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501008, '$12': 4, '$13': 4, '$14': 4, '$15': 0, '$16': 0, '$17': 5, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 258
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268501008
ReadData: 0
rd: 17
rt: 17

1 268501008 -4
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268501004
WriteData: 1
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 1}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [0, 16, 0, 12, 1048588, 0, 0]

jumping to: 0x400030
IF
pc: 0x400030
instruction: ['00010001110011001111111111111001', 4194352]
IFID: ['00010001110011001111111111111001', 4194352]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 1}, 0, 4194388, [0, 16, 0, 12, 1048588, 0, 0]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501004, 1, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501008, 0, 17, 17]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501008, '$12': 4, '$13': 4, '$14': 4, '$15': 0, '$16': 0, '$17': 5, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 259
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268501004
ReadData: 0
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 10
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [14, 12, 31, -7, 30212089, 4, 4]

IF
pc: 0x400034
instruction: ['10001101011100010000000000000000', 4194356]
IFID: ['10001101011100010000000000000000', 4194356]
IDEX: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, 10, 4194352, [14, 12, 31, -7, 30212089, 4, 4]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501004, 268501004, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501004, 0, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501008, '$12': 4, '$13': 4, '$14': 4, '$15': 0, '$16': 0, '$17': 5, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 260
_________________________
0 4 4
EX
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: True
WriteData: 4
rd: 12
rt: 12

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 17, 0, 0, 24182784, 268501008, 5]

IF
pc: 0x400038
instruction: ['00100001011010110000000000000100', 4194360]
flushing pipeline
flushing pipeline, PC set to  0x400018
IFID: ['00100001011010110000000000000100', 4194360]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194356, [11, 17, 0, 0, 24182784, 268501008, 5]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, True, 4, 12, 12, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501004, 0, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501008, '$12': 4, '$13': 4, '$14': 4, '$15': 0, '$16': 0, '$17': 5, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 261
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: True
ReadData: 0
rd: 12
rt: 12

IF
pc: 0x400018
instruction: ['00010001101110000000000000001111', 4194328]
IFID: ['00010001101110000000000000001111', 4194328]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194356, [11, 17, 0, 0, 24182784, 268501008, 5]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, True, 4, 12, 12, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, True, 0, 12, 12]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501008, '$12': 4, '$13': 4, '$14': 4, '$15': 0, '$16': 0, '$17': 5, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 262
_________________________
ID
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 10
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [13, 24, 0, 15, 28835855, 4, 7]

IF
pc: 0x40001c
instruction: ['00000011000011010110000000100010', 4194332]
IFID: ['00000011000011010110000000100010', 4194332]
IDEX: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, 10, 4194328, [13, 24, 0, 15, 28835855, 4, 7]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, True, 4, 12, 12, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, True, 0, 12, 12]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501008, '$12': 4, '$13': 4, '$14': 4, '$15': 0, '$16': 0, '$17': 5, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 263
_________________________
0 4 7
EX
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
WriteData: 7
rd: 24
rt: 24

ID
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 15
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [24, 13, 12, 24610, 51208226, 7, 4]

IF
pc: 0x400020
instruction: ['00000000000000000111000000100000', 4194336]
IFID: ['00000000000000000111000000100000', 4194336]
IDEX: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 15, 4194332, [24, 13, 12, 24610, 51208226, 7, 4]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 7, 24, 24, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, True, 0, 12, 12]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501008, '$12': 4, '$13': 4, '$14': 4, '$15': 0, '$16': 0, '$17': 5, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 264
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
ReadData: 0
rd: 24
rt: 24

0 7 4
EX
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 3
WriteData: 4
rd: 12
rt: 13

ID
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [0, 0, 14, 28704, 28704, 0, 0]

IF
pc: 0x400024
instruction: ['00000001001000000101100000100000', 4194340]
IFID: ['00000001001000000101100000100000', 4194340]
IDEX: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 4194336, [0, 0, 14, 28704, 28704, 0, 0]]
EXMEM: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 3, 4, 12, 13, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 24, 24]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501008, '$12': 4, '$13': 4, '$14': 4, '$15': 0, '$16': 0, '$17': 5, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 265
_________________________
MEM
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 3
ReadData: 0
rd: 12
rt: 13

0 0 0
EX
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 0
WriteData: 0
rd: 14
rt: 0

ID
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [9, 0, 11, 22560, 18896928, 268500992, 0]

IF
pc: 0x400028
instruction: ['00100001101011010000000000000001', 4194344]
IFID: ['00100001101011010000000000000001', 4194344]
IDEX: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 4194340, [9, 0, 11, 22560, 18896928, 268500992, 0]]
EXMEM: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 0, 14, 0, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336]]
MEMWB: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 3, 0, 12, 13]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501008, '$12': 4, '$13': 4, '$14': 4, '$15': 0, '$16': 0, '$17': 5, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 266
_________________________
MEM
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 0
ReadData: 0
rd: 14
rt: 0

0 268500992 0
EX
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268500992
WriteData: 0
rd: 11
rt: 0

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [13, 13, 0, 1, 28114945, 4, 4]

IF
pc: 0x40002c
instruction: ['00001000000100000000000000001100', 4194348]
IFID: ['00001000000100000000000000001100', 4194348]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194344, [13, 13, 0, 1, 28114945, 4, 4]]
EXMEM: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 268500992, 0, 11, 0, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340]]
MEMWB: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 0, 14, 0]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501008, '$12': 3, '$13': 4, '$14': 4, '$15': 0, '$16': 0, '$17': 5, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 267
_________________________
MEM
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268500992
ReadData: 0
rd: 11
rt: 0

1 4 1
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 5
WriteData: 4
rd: 13
rt: 13

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 1}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [0, 16, 0, 12, 1048588, 0, 0]

jumping to: 0x400030
IF
pc: 0x400030
instruction: ['00010001110011001111111111111001', 4194352]
IFID: ['00010001110011001111111111111001', 4194352]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 1}, 0, 4194348, [0, 16, 0, 12, 1048588, 0, 0]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 5, 4, 13, 13, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344]]
MEMWB: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 268500992, 0, 11, 0]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501008, '$12': 3, '$13': 4, '$14': 0, '$15': 0, '$16': 0, '$17': 5, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 268
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 5
ReadData: 0
rd: 13
rt: 13

ID
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 10
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [14, 12, 31, -7, 30212089, 0, 3]

IF
pc: 0x400034
instruction: ['10001101011100010000000000000000', 4194356]
IFID: ['10001101011100010000000000000000', 4194356]
IDEX: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, 10, 4194352, [14, 12, 31, -7, 30212089, 0, 3]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 5, 4, 13, 13, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 5, 0, 13, 13]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500992, '$12': 3, '$13': 4, '$14': 0, '$15': 0, '$16': 0, '$17': 5, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 269
_________________________
0 0 3
EX
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
WriteData: 3
rd: 12
rt: 12

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 17, 0, 0, 24182784, 268500992, 5]

IF
pc: 0x400038
instruction: ['00100001011010110000000000000100', 4194360]
IFID: ['00100001011010110000000000000100', 4194360]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194356, [11, 17, 0, 0, 24182784, 268500992, 5]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 3, 12, 12, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 5, 0, 13, 13]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500992, '$12': 3, '$13': 5, '$14': 0, '$15': 0, '$16': 0, '$17': 5, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 270
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
ReadData: 0
rd: 12
rt: 12

1 268500992 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268500992
WriteData: 5
rd: 17
rt: 17

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 11, 0, 4, 23789572, 268500992, 268500992]

IF
pc: 0x40003c
instruction: ['10001101011100100000000000000000', 4194364]
IFID: ['10001101011100100000000000000000', 4194364]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194360, [11, 11, 0, 4, 23789572, 268500992, 268500992]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268500992, 5, 17, 17, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 12, 12]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500992, '$12': 3, '$13': 5, '$14': 0, '$15': 0, '$16': 0, '$17': 5, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 271
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268500992
ReadData: 4
rd: 17
rt: 17

1 268500992 4
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268500996
WriteData: 268500992
rd: 11
rt: 11

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 18, 0, 0, 24248320, 268500992, 1]

*** Forwarding EX->EX(rs) ***
IF
pc: 0x400040
instruction: ['00100001110011100000000000000001', 4194368]
IFID: ['00100001110011100000000000000001', 4194368]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194364, [11, 18, 0, 0, 24248320, 268500996, 1]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268500996, 268500992, 11, 11, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268500992, 4, 17, 17]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500992, '$12': 3, '$13': 5, '$14': 0, '$15': 0, '$16': 0, '$17': 5, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 272
_________________________
*** Forwarding EX->EX(rs) ***
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268500996
ReadData: 0
rd: 11
rt: 11

1 268500996 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268500996
WriteData: 1
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [14, 14, 0, 1, 30277633, 0, 0]

IF
pc: 0x400044
instruction: ['00000010001100100000100000101010', 4194372]
IFID: ['00000010001100100000100000101010', 4194372]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194368, [14, 14, 0, 1, 30277633, 0, 0]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268500996, 1, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268500996, 0, 11, 11]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500992, '$12': 3, '$13': 5, '$14': 0, '$15': 0, '$16': 0, '$17': 4, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 273
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268500996
ReadData: 3
rd: 18
rt: 18

1 0 1
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 1
WriteData: 0
rd: 14
rt: 14

ID
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 9
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [17, 18, 1, 2090, 36833322, 4, 1]

*** Forwarding, MEM->EX(rt) ***
*** Previous 2nd EX - forwarding, MEM->EX(rt) ***
IF
pc: 0x400048
instruction: ['00010100001000001111111111111001', 4194376]
IFID: ['00010100001000001111111111111001', 4194376]
IDEX: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 9, 4194372, [17, 18, 1, 2090, 36833322, 4, 3]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 1, 0, 14, 14, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268500996, 3, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500996, '$12': 3, '$13': 5, '$14': 0, '$15': 0, '$16': 0, '$17': 4, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 274
_________________________
*** Forwarding, MEM->EX(rt) ***
*** Previous 2nd EX - forwarding, MEM->EX(rt) ***
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 1
ReadData: 0
rd: 14
rt: 14

0 4 3
EX
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 0
WriteData: 3
rd: 1
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 11
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [1, 0, 31, -7, 2162681, 0, 0]

*** Forwarding EX->EX(rs) ***
IF
pc: 0x40004c
instruction: ['10101101011100010000000000000000', 4194380]
IFID: ['10101101011100010000000000000000', 4194380]
IDEX: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, 11, 4194376, [1, 0, 31, -7, 2162681, 0, 0]]
EXMEM: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 3, 1, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 1, 0, 14, 14]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500996, '$12': 3, '$13': 5, '$14': 0, '$15': 0, '$16': 0, '$17': 4, '$18': 3, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 275
_________________________
*** Forwarding EX->EX(rs) ***
MEM
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 0
ReadData: 0
rd: 1
rt: 18

0 0 0
EX
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
WriteData: 0
rd: 0
rt: 0

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 17, 0, 0, 24182784, 268500996, 4]

IF
pc: 0x400050
instruction: ['10101101011100101111111111111100', 4194384]
IFID: ['10101101011100101111111111111100', 4194384]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 0, 4194380, [11, 17, 0, 0, 24182784, 268500996, 4]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 0, 0, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376]]
MEMWB: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 0, 1, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500996, '$12': 3, '$13': 5, '$14': 1, '$15': 0, '$16': 0, '$17': 4, '$18': 3, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 276
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
ReadData: 0
rd: 0
rt: 0

1 268500996 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268500996
WriteData: 4
rd: 17
rt: 17

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 18, 31, -4, 24313852, 268500996, 3]

IF
pc: 0x400054
instruction: ['00001000000100000000000000001100', 4194388]
IFID: ['00001000000100000000000000001100', 4194388]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 0, 4194384, [11, 18, 31, -4, 24313852, 268500996, 3]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268500996, 4, 17, 17, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 0, 0]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500996, '$12': 3, '$13': 5, '$14': 1, '$15': 0, '$16': 0, '$17': 4, '$18': 3, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 277
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268500996
ReadData: 0
rd: 17
rt: 17

1 268500996 -4
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268500992
WriteData: 3
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 1}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [0, 16, 0, 12, 1048588, 0, 0]

jumping to: 0x400030
IF
pc: 0x400030
instruction: ['00010001110011001111111111111001', 4194352]
IFID: ['00010001110011001111111111111001', 4194352]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 1}, 0, 4194388, [0, 16, 0, 12, 1048588, 0, 0]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268500992, 3, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268500996, 0, 17, 17]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500996, '$12': 3, '$13': 5, '$14': 1, '$15': 0, '$16': 0, '$17': 4, '$18': 3, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 278
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268500992
ReadData: 0
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 10
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [14, 12, 31, -7, 30212089, 1, 3]

IF
pc: 0x400034
instruction: ['10001101011100010000000000000000', 4194356]
IFID: ['10001101011100010000000000000000', 4194356]
IDEX: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, 10, 4194352, [14, 12, 31, -7, 30212089, 1, 3]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268500992, 268500992, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268500992, 0, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500996, '$12': 3, '$13': 5, '$14': 1, '$15': 0, '$16': 0, '$17': 4, '$18': 3, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 279
_________________________
0 1 3
EX
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
WriteData: 3
rd: 12
rt: 12

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 17, 0, 0, 24182784, 268500996, 4]

IF
pc: 0x400038
instruction: ['00100001011010110000000000000100', 4194360]
IFID: ['00100001011010110000000000000100', 4194360]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194356, [11, 17, 0, 0, 24182784, 268500996, 4]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 3, 12, 12, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268500992, 0, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500996, '$12': 3, '$13': 5, '$14': 1, '$15': 0, '$16': 0, '$17': 4, '$18': 3, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 280
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
ReadData: 0
rd: 12
rt: 12

1 268500996 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268500996
WriteData: 4
rd: 17
rt: 17

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 11, 0, 4, 23789572, 268500996, 268500996]

IF
pc: 0x40003c
instruction: ['10001101011100100000000000000000', 4194364]
IFID: ['10001101011100100000000000000000', 4194364]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194360, [11, 11, 0, 4, 23789572, 268500996, 268500996]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268500996, 4, 17, 17, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 12, 12]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500996, '$12': 3, '$13': 5, '$14': 1, '$15': 0, '$16': 0, '$17': 4, '$18': 3, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 281
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268500996
ReadData: 4
rd: 17
rt: 17

1 268500996 4
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501000
WriteData: 268500996
rd: 11
rt: 11

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 18, 0, 0, 24248320, 268500996, 3]

*** Forwarding EX->EX(rs) ***
IF
pc: 0x400040
instruction: ['00100001110011100000000000000001', 4194368]
IFID: ['00100001110011100000000000000001', 4194368]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194364, [11, 18, 0, 0, 24248320, 268501000, 3]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501000, 268500996, 11, 11, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268500996, 4, 17, 17]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500996, '$12': 3, '$13': 5, '$14': 1, '$15': 0, '$16': 0, '$17': 4, '$18': 3, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 282
_________________________
*** Forwarding EX->EX(rs) ***
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501000
ReadData: 0
rd: 11
rt: 11

1 268501000 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501000
WriteData: 3
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [14, 14, 0, 1, 30277633, 1, 1]

IF
pc: 0x400044
instruction: ['00000010001100100000100000101010', 4194372]
IFID: ['00000010001100100000100000101010', 4194372]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194368, [14, 14, 0, 1, 30277633, 1, 1]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501000, 3, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501000, 0, 11, 11]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500996, '$12': 3, '$13': 5, '$14': 1, '$15': 0, '$16': 0, '$17': 4, '$18': 3, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 283
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501000
ReadData: 2
rd: 18
rt: 18

1 1 1
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 2
WriteData: 1
rd: 14
rt: 14

ID
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 9
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [17, 18, 1, 2090, 36833322, 4, 3]

*** Forwarding, MEM->EX(rt) ***
*** Previous 2nd EX - forwarding, MEM->EX(rt) ***
IF
pc: 0x400048
instruction: ['00010100001000001111111111111001', 4194376]
IFID: ['00010100001000001111111111111001', 4194376]
IDEX: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 9, 4194372, [17, 18, 1, 2090, 36833322, 4, 2]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 2, 1, 14, 14, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501000, 2, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501000, '$12': 3, '$13': 5, '$14': 1, '$15': 0, '$16': 0, '$17': 4, '$18': 3, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 284
_________________________
*** Forwarding, MEM->EX(rt) ***
*** Previous 2nd EX - forwarding, MEM->EX(rt) ***
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 2
ReadData: 0
rd: 14
rt: 14

0 4 2
EX
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 0
WriteData: 2
rd: 1
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 11
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [1, 0, 31, -7, 2162681, 0, 0]

*** Forwarding EX->EX(rs) ***
IF
pc: 0x40004c
instruction: ['10101101011100010000000000000000', 4194380]
IFID: ['10101101011100010000000000000000', 4194380]
IDEX: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, 11, 4194376, [1, 0, 31, -7, 2162681, 0, 0]]
EXMEM: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 2, 1, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 2, 0, 14, 14]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501000, '$12': 3, '$13': 5, '$14': 1, '$15': 0, '$16': 0, '$17': 4, '$18': 2, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 285
_________________________
*** Forwarding EX->EX(rs) ***
MEM
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 0
ReadData: 0
rd: 1
rt: 18

0 0 0
EX
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
WriteData: 0
rd: 0
rt: 0

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 17, 0, 0, 24182784, 268501000, 4]

IF
pc: 0x400050
instruction: ['10101101011100101111111111111100', 4194384]
IFID: ['10101101011100101111111111111100', 4194384]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 0, 4194380, [11, 17, 0, 0, 24182784, 268501000, 4]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 0, 0, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376]]
MEMWB: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 0, 1, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501000, '$12': 3, '$13': 5, '$14': 2, '$15': 0, '$16': 0, '$17': 4, '$18': 2, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 286
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
ReadData: 0
rd: 0
rt: 0

1 268501000 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268501000
WriteData: 4
rd: 17
rt: 17

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 18, 31, -4, 24313852, 268501000, 2]

IF
pc: 0x400054
instruction: ['00001000000100000000000000001100', 4194388]
IFID: ['00001000000100000000000000001100', 4194388]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 0, 4194384, [11, 18, 31, -4, 24313852, 268501000, 2]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501000, 4, 17, 17, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 0, 0]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501000, '$12': 3, '$13': 5, '$14': 2, '$15': 0, '$16': 0, '$17': 4, '$18': 2, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 287
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268501000
ReadData: 0
rd: 17
rt: 17

1 268501000 -4
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268500996
WriteData: 2
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 1}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [0, 16, 0, 12, 1048588, 0, 0]

jumping to: 0x400030
IF
pc: 0x400030
instruction: ['00010001110011001111111111111001', 4194352]
IFID: ['00010001110011001111111111111001', 4194352]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 1}, 0, 4194388, [0, 16, 0, 12, 1048588, 0, 0]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268500996, 2, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501000, 0, 17, 17]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501000, '$12': 3, '$13': 5, '$14': 2, '$15': 0, '$16': 0, '$17': 4, '$18': 2, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 288
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268500996
ReadData: 0
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 10
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [14, 12, 31, -7, 30212089, 2, 3]

IF
pc: 0x400034
instruction: ['10001101011100010000000000000000', 4194356]
IFID: ['10001101011100010000000000000000', 4194356]
IDEX: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, 10, 4194352, [14, 12, 31, -7, 30212089, 2, 3]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268500996, 268500996, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268500996, 0, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501000, '$12': 3, '$13': 5, '$14': 2, '$15': 0, '$16': 0, '$17': 4, '$18': 2, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 289
_________________________
0 2 3
EX
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
WriteData: 3
rd: 12
rt: 12

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 17, 0, 0, 24182784, 268501000, 4]

IF
pc: 0x400038
instruction: ['00100001011010110000000000000100', 4194360]
IFID: ['00100001011010110000000000000100', 4194360]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194356, [11, 17, 0, 0, 24182784, 268501000, 4]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 3, 12, 12, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268500996, 0, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501000, '$12': 3, '$13': 5, '$14': 2, '$15': 0, '$16': 0, '$17': 4, '$18': 2, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 290
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
ReadData: 0
rd: 12
rt: 12

1 268501000 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501000
WriteData: 4
rd: 17
rt: 17

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 11, 0, 4, 23789572, 268501000, 268501000]

IF
pc: 0x40003c
instruction: ['10001101011100100000000000000000', 4194364]
IFID: ['10001101011100100000000000000000', 4194364]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194360, [11, 11, 0, 4, 23789572, 268501000, 268501000]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501000, 4, 17, 17, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 12, 12]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501000, '$12': 3, '$13': 5, '$14': 2, '$15': 0, '$16': 0, '$17': 4, '$18': 2, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 291
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501000
ReadData: 4
rd: 17
rt: 17

1 268501000 4
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501004
WriteData: 268501000
rd: 11
rt: 11

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 18, 0, 0, 24248320, 268501000, 2]

*** Forwarding EX->EX(rs) ***
IF
pc: 0x400040
instruction: ['00100001110011100000000000000001', 4194368]
IFID: ['00100001110011100000000000000001', 4194368]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194364, [11, 18, 0, 0, 24248320, 268501004, 2]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501004, 268501000, 11, 11, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501000, 4, 17, 17]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501000, '$12': 3, '$13': 5, '$14': 2, '$15': 0, '$16': 0, '$17': 4, '$18': 2, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 292
_________________________
*** Forwarding EX->EX(rs) ***
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501004
ReadData: 0
rd: 11
rt: 11

1 268501004 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501004
WriteData: 2
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [14, 14, 0, 1, 30277633, 2, 2]

IF
pc: 0x400044
instruction: ['00000010001100100000100000101010', 4194372]
IFID: ['00000010001100100000100000101010', 4194372]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194368, [14, 14, 0, 1, 30277633, 2, 2]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501004, 2, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501004, 0, 11, 11]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501000, '$12': 3, '$13': 5, '$14': 2, '$15': 0, '$16': 0, '$17': 4, '$18': 2, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 293
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501004
ReadData: 1
rd: 18
rt: 18

1 2 1
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 3
WriteData: 2
rd: 14
rt: 14

ID
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 9
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [17, 18, 1, 2090, 36833322, 4, 2]

*** Forwarding, MEM->EX(rt) ***
*** Previous 2nd EX - forwarding, MEM->EX(rt) ***
IF
pc: 0x400048
instruction: ['00010100001000001111111111111001', 4194376]
IFID: ['00010100001000001111111111111001', 4194376]
IDEX: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 9, 4194372, [17, 18, 1, 2090, 36833322, 4, 1]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 3, 2, 14, 14, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501004, 1, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501004, '$12': 3, '$13': 5, '$14': 2, '$15': 0, '$16': 0, '$17': 4, '$18': 2, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 294
_________________________
*** Forwarding, MEM->EX(rt) ***
*** Previous 2nd EX - forwarding, MEM->EX(rt) ***
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 3
ReadData: 0
rd: 14
rt: 14

0 4 1
EX
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 0
WriteData: 1
rd: 1
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 11
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [1, 0, 31, -7, 2162681, 0, 0]

*** Forwarding EX->EX(rs) ***
IF
pc: 0x40004c
instruction: ['10101101011100010000000000000000', 4194380]
IFID: ['10101101011100010000000000000000', 4194380]
IDEX: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, 11, 4194376, [1, 0, 31, -7, 2162681, 0, 0]]
EXMEM: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 1, 1, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 3, 0, 14, 14]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501004, '$12': 3, '$13': 5, '$14': 2, '$15': 0, '$16': 0, '$17': 4, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 295
_________________________
*** Forwarding EX->EX(rs) ***
MEM
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 0
ReadData: 0
rd: 1
rt: 18

0 0 0
EX
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
WriteData: 0
rd: 0
rt: 0

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 17, 0, 0, 24182784, 268501004, 4]

IF
pc: 0x400050
instruction: ['10101101011100101111111111111100', 4194384]
IFID: ['10101101011100101111111111111100', 4194384]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 0, 4194380, [11, 17, 0, 0, 24182784, 268501004, 4]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 0, 0, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376]]
MEMWB: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 0, 1, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501004, '$12': 3, '$13': 5, '$14': 3, '$15': 0, '$16': 0, '$17': 4, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 296
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
ReadData: 0
rd: 0
rt: 0

1 268501004 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268501004
WriteData: 4
rd: 17
rt: 17

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 18, 31, -4, 24313852, 268501004, 1]

IF
pc: 0x400054
instruction: ['00001000000100000000000000001100', 4194388]
IFID: ['00001000000100000000000000001100', 4194388]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 0, 4194384, [11, 18, 31, -4, 24313852, 268501004, 1]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501004, 4, 17, 17, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 0, 0]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501004, '$12': 3, '$13': 5, '$14': 3, '$15': 0, '$16': 0, '$17': 4, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 297
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268501004
ReadData: 0
rd: 17
rt: 17

1 268501004 -4
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268501000
WriteData: 1
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 1}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [0, 16, 0, 12, 1048588, 0, 0]

jumping to: 0x400030
IF
pc: 0x400030
instruction: ['00010001110011001111111111111001', 4194352]
IFID: ['00010001110011001111111111111001', 4194352]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 1}, 0, 4194388, [0, 16, 0, 12, 1048588, 0, 0]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501000, 1, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501004, 0, 17, 17]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501004, '$12': 3, '$13': 5, '$14': 3, '$15': 0, '$16': 0, '$17': 4, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 298
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268501000
ReadData: 0
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 10
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [14, 12, 31, -7, 30212089, 3, 3]

IF
pc: 0x400034
instruction: ['10001101011100010000000000000000', 4194356]
IFID: ['10001101011100010000000000000000', 4194356]
IDEX: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, 10, 4194352, [14, 12, 31, -7, 30212089, 3, 3]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501000, 268501000, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501000, 0, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501004, '$12': 3, '$13': 5, '$14': 3, '$15': 0, '$16': 0, '$17': 4, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 299
_________________________
0 3 3
EX
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: True
WriteData: 3
rd: 12
rt: 12

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 17, 0, 0, 24182784, 268501004, 4]

IF
pc: 0x400038
instruction: ['00100001011010110000000000000100', 4194360]
flushing pipeline
flushing pipeline, PC set to  0x400018
IFID: ['00100001011010110000000000000100', 4194360]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194356, [11, 17, 0, 0, 24182784, 268501004, 4]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, True, 3, 12, 12, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501000, 0, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501004, '$12': 3, '$13': 5, '$14': 3, '$15': 0, '$16': 0, '$17': 4, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 300
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: True
ReadData: 0
rd: 12
rt: 12

IF
pc: 0x400018
instruction: ['00010001101110000000000000001111', 4194328]
IFID: ['00010001101110000000000000001111', 4194328]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194356, [11, 17, 0, 0, 24182784, 268501004, 4]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, True, 3, 12, 12, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, True, 0, 12, 12]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501004, '$12': 3, '$13': 5, '$14': 3, '$15': 0, '$16': 0, '$17': 4, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 301
_________________________
ID
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 10
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [13, 24, 0, 15, 28835855, 5, 7]

IF
pc: 0x40001c
instruction: ['00000011000011010110000000100010', 4194332]
IFID: ['00000011000011010110000000100010', 4194332]
IDEX: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, 10, 4194328, [13, 24, 0, 15, 28835855, 5, 7]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, True, 3, 12, 12, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, True, 0, 12, 12]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501004, '$12': 3, '$13': 5, '$14': 3, '$15': 0, '$16': 0, '$17': 4, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 302
_________________________
0 5 7
EX
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
WriteData: 7
rd: 24
rt: 24

ID
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 15
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [24, 13, 12, 24610, 51208226, 7, 5]

IF
pc: 0x400020
instruction: ['00000000000000000111000000100000', 4194336]
IFID: ['00000000000000000111000000100000', 4194336]
IDEX: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 15, 4194332, [24, 13, 12, 24610, 51208226, 7, 5]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 7, 24, 24, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, True, 0, 12, 12]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501004, '$12': 3, '$13': 5, '$14': 3, '$15': 0, '$16': 0, '$17': 4, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 303
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
ReadData: 0
rd: 24
rt: 24

0 7 5
EX
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 2
WriteData: 5
rd: 12
rt: 13

ID
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [0, 0, 14, 28704, 28704, 0, 0]

IF
pc: 0x400024
instruction: ['00000001001000000101100000100000', 4194340]
IFID: ['00000001001000000101100000100000', 4194340]
IDEX: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 4194336, [0, 0, 14, 28704, 28704, 0, 0]]
EXMEM: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 2, 5, 12, 13, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 24, 24]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501004, '$12': 3, '$13': 5, '$14': 3, '$15': 0, '$16': 0, '$17': 4, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 304
_________________________
MEM
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 2
ReadData: 0
rd: 12
rt: 13

0 0 0
EX
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 0
WriteData: 0
rd: 14
rt: 0

ID
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [9, 0, 11, 22560, 18896928, 268500992, 0]

IF
pc: 0x400028
instruction: ['00100001101011010000000000000001', 4194344]
IFID: ['00100001101011010000000000000001', 4194344]
IDEX: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 4194340, [9, 0, 11, 22560, 18896928, 268500992, 0]]
EXMEM: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 0, 14, 0, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336]]
MEMWB: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 2, 0, 12, 13]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501004, '$12': 3, '$13': 5, '$14': 3, '$15': 0, '$16': 0, '$17': 4, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 305
_________________________
MEM
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 0
ReadData: 0
rd: 14
rt: 0

0 268500992 0
EX
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268500992
WriteData: 0
rd: 11
rt: 0

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [13, 13, 0, 1, 28114945, 5, 5]

IF
pc: 0x40002c
instruction: ['00001000000100000000000000001100', 4194348]
IFID: ['00001000000100000000000000001100', 4194348]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194344, [13, 13, 0, 1, 28114945, 5, 5]]
EXMEM: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 268500992, 0, 11, 0, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340]]
MEMWB: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 0, 14, 0]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501004, '$12': 2, '$13': 5, '$14': 3, '$15': 0, '$16': 0, '$17': 4, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 306
_________________________
MEM
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268500992
ReadData: 0
rd: 11
rt: 0

1 5 1
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 6
WriteData: 5
rd: 13
rt: 13

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 1}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [0, 16, 0, 12, 1048588, 0, 0]

jumping to: 0x400030
IF
pc: 0x400030
instruction: ['00010001110011001111111111111001', 4194352]
IFID: ['00010001110011001111111111111001', 4194352]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 1}, 0, 4194348, [0, 16, 0, 12, 1048588, 0, 0]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 6, 5, 13, 13, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344]]
MEMWB: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 268500992, 0, 11, 0]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501004, '$12': 2, '$13': 5, '$14': 0, '$15': 0, '$16': 0, '$17': 4, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 307
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 6
ReadData: 0
rd: 13
rt: 13

ID
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 10
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [14, 12, 31, -7, 30212089, 0, 2]

IF
pc: 0x400034
instruction: ['10001101011100010000000000000000', 4194356]
IFID: ['10001101011100010000000000000000', 4194356]
IDEX: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, 10, 4194352, [14, 12, 31, -7, 30212089, 0, 2]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 6, 5, 13, 13, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 6, 0, 13, 13]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500992, '$12': 2, '$13': 5, '$14': 0, '$15': 0, '$16': 0, '$17': 4, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 308
_________________________
0 0 2
EX
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
WriteData: 2
rd: 12
rt: 12

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 17, 0, 0, 24182784, 268500992, 4]

IF
pc: 0x400038
instruction: ['00100001011010110000000000000100', 4194360]
IFID: ['00100001011010110000000000000100', 4194360]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194356, [11, 17, 0, 0, 24182784, 268500992, 4]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 2, 12, 12, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 6, 0, 13, 13]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500992, '$12': 2, '$13': 6, '$14': 0, '$15': 0, '$16': 0, '$17': 4, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 309
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
ReadData: 0
rd: 12
rt: 12

1 268500992 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268500992
WriteData: 4
rd: 17
rt: 17

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 11, 0, 4, 23789572, 268500992, 268500992]

IF
pc: 0x40003c
instruction: ['10001101011100100000000000000000', 4194364]
IFID: ['10001101011100100000000000000000', 4194364]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194360, [11, 11, 0, 4, 23789572, 268500992, 268500992]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268500992, 4, 17, 17, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 12, 12]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500992, '$12': 2, '$13': 6, '$14': 0, '$15': 0, '$16': 0, '$17': 4, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 310
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268500992
ReadData: 3
rd: 17
rt: 17

1 268500992 4
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268500996
WriteData: 268500992
rd: 11
rt: 11

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 18, 0, 0, 24248320, 268500992, 1]

*** Forwarding EX->EX(rs) ***
IF
pc: 0x400040
instruction: ['00100001110011100000000000000001', 4194368]
IFID: ['00100001110011100000000000000001', 4194368]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194364, [11, 18, 0, 0, 24248320, 268500996, 1]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268500996, 268500992, 11, 11, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268500992, 3, 17, 17]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500992, '$12': 2, '$13': 6, '$14': 0, '$15': 0, '$16': 0, '$17': 4, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 311
_________________________
*** Forwarding EX->EX(rs) ***
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268500996
ReadData: 0
rd: 11
rt: 11

1 268500996 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268500996
WriteData: 1
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [14, 14, 0, 1, 30277633, 0, 0]

IF
pc: 0x400044
instruction: ['00000010001100100000100000101010', 4194372]
IFID: ['00000010001100100000100000101010', 4194372]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194368, [14, 14, 0, 1, 30277633, 0, 0]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268500996, 1, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268500996, 0, 11, 11]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500992, '$12': 2, '$13': 6, '$14': 0, '$15': 0, '$16': 0, '$17': 3, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 312
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268500996
ReadData: 2
rd: 18
rt: 18

1 0 1
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 1
WriteData: 0
rd: 14
rt: 14

ID
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 9
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [17, 18, 1, 2090, 36833322, 3, 1]

*** Forwarding, MEM->EX(rt) ***
*** Previous 2nd EX - forwarding, MEM->EX(rt) ***
IF
pc: 0x400048
instruction: ['00010100001000001111111111111001', 4194376]
IFID: ['00010100001000001111111111111001', 4194376]
IDEX: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 9, 4194372, [17, 18, 1, 2090, 36833322, 3, 2]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 1, 0, 14, 14, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268500996, 2, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500996, '$12': 2, '$13': 6, '$14': 0, '$15': 0, '$16': 0, '$17': 3, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 313
_________________________
*** Forwarding, MEM->EX(rt) ***
*** Previous 2nd EX - forwarding, MEM->EX(rt) ***
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 1
ReadData: 0
rd: 14
rt: 14

0 3 2
EX
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 0
WriteData: 2
rd: 1
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 11
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [1, 0, 31, -7, 2162681, 0, 0]

*** Forwarding EX->EX(rs) ***
IF
pc: 0x40004c
instruction: ['10101101011100010000000000000000', 4194380]
IFID: ['10101101011100010000000000000000', 4194380]
IDEX: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, 11, 4194376, [1, 0, 31, -7, 2162681, 0, 0]]
EXMEM: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 2, 1, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 1, 0, 14, 14]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500996, '$12': 2, '$13': 6, '$14': 0, '$15': 0, '$16': 0, '$17': 3, '$18': 2, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 314
_________________________
*** Forwarding EX->EX(rs) ***
MEM
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 0
ReadData: 0
rd: 1
rt: 18

0 0 0
EX
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
WriteData: 0
rd: 0
rt: 0

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 17, 0, 0, 24182784, 268500996, 3]

IF
pc: 0x400050
instruction: ['10101101011100101111111111111100', 4194384]
IFID: ['10101101011100101111111111111100', 4194384]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 0, 4194380, [11, 17, 0, 0, 24182784, 268500996, 3]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 0, 0, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376]]
MEMWB: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 0, 1, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500996, '$12': 2, '$13': 6, '$14': 1, '$15': 0, '$16': 0, '$17': 3, '$18': 2, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 315
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
ReadData: 0
rd: 0
rt: 0

1 268500996 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268500996
WriteData: 3
rd: 17
rt: 17

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 18, 31, -4, 24313852, 268500996, 2]

IF
pc: 0x400054
instruction: ['00001000000100000000000000001100', 4194388]
IFID: ['00001000000100000000000000001100', 4194388]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 0, 4194384, [11, 18, 31, -4, 24313852, 268500996, 2]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268500996, 3, 17, 17, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 0, 0]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500996, '$12': 2, '$13': 6, '$14': 1, '$15': 0, '$16': 0, '$17': 3, '$18': 2, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 316
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268500996
ReadData: 0
rd: 17
rt: 17

1 268500996 -4
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268500992
WriteData: 2
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 1}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [0, 16, 0, 12, 1048588, 0, 0]

jumping to: 0x400030
IF
pc: 0x400030
instruction: ['00010001110011001111111111111001', 4194352]
IFID: ['00010001110011001111111111111001', 4194352]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 1}, 0, 4194388, [0, 16, 0, 12, 1048588, 0, 0]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268500992, 2, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268500996, 0, 17, 17]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500996, '$12': 2, '$13': 6, '$14': 1, '$15': 0, '$16': 0, '$17': 3, '$18': 2, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 317
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268500992
ReadData: 0
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 10
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [14, 12, 31, -7, 30212089, 1, 2]

IF
pc: 0x400034
instruction: ['10001101011100010000000000000000', 4194356]
IFID: ['10001101011100010000000000000000', 4194356]
IDEX: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, 10, 4194352, [14, 12, 31, -7, 30212089, 1, 2]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268500992, 268500992, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268500992, 0, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500996, '$12': 2, '$13': 6, '$14': 1, '$15': 0, '$16': 0, '$17': 3, '$18': 2, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 318
_________________________
0 1 2
EX
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
WriteData: 2
rd: 12
rt: 12

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 17, 0, 0, 24182784, 268500996, 3]

IF
pc: 0x400038
instruction: ['00100001011010110000000000000100', 4194360]
IFID: ['00100001011010110000000000000100', 4194360]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194356, [11, 17, 0, 0, 24182784, 268500996, 3]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 2, 12, 12, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268500992, 0, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500996, '$12': 2, '$13': 6, '$14': 1, '$15': 0, '$16': 0, '$17': 3, '$18': 2, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 319
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
ReadData: 0
rd: 12
rt: 12

1 268500996 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268500996
WriteData: 3
rd: 17
rt: 17

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 11, 0, 4, 23789572, 268500996, 268500996]

IF
pc: 0x40003c
instruction: ['10001101011100100000000000000000', 4194364]
IFID: ['10001101011100100000000000000000', 4194364]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194360, [11, 11, 0, 4, 23789572, 268500996, 268500996]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268500996, 3, 17, 17, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 12, 12]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500996, '$12': 2, '$13': 6, '$14': 1, '$15': 0, '$16': 0, '$17': 3, '$18': 2, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 320
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268500996
ReadData: 3
rd: 17
rt: 17

1 268500996 4
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501000
WriteData: 268500996
rd: 11
rt: 11

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 18, 0, 0, 24248320, 268500996, 2]

*** Forwarding EX->EX(rs) ***
IF
pc: 0x400040
instruction: ['00100001110011100000000000000001', 4194368]
IFID: ['00100001110011100000000000000001', 4194368]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194364, [11, 18, 0, 0, 24248320, 268501000, 2]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501000, 268500996, 11, 11, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268500996, 3, 17, 17]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500996, '$12': 2, '$13': 6, '$14': 1, '$15': 0, '$16': 0, '$17': 3, '$18': 2, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 321
_________________________
*** Forwarding EX->EX(rs) ***
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501000
ReadData: 0
rd: 11
rt: 11

1 268501000 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501000
WriteData: 2
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [14, 14, 0, 1, 30277633, 1, 1]

IF
pc: 0x400044
instruction: ['00000010001100100000100000101010', 4194372]
IFID: ['00000010001100100000100000101010', 4194372]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194368, [14, 14, 0, 1, 30277633, 1, 1]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501000, 2, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501000, 0, 11, 11]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500996, '$12': 2, '$13': 6, '$14': 1, '$15': 0, '$16': 0, '$17': 3, '$18': 2, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 322
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268501000
ReadData: 1
rd: 18
rt: 18

1 1 1
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 2
WriteData: 1
rd: 14
rt: 14

ID
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 9
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [17, 18, 1, 2090, 36833322, 3, 2]

*** Forwarding, MEM->EX(rt) ***
*** Previous 2nd EX - forwarding, MEM->EX(rt) ***
IF
pc: 0x400048
instruction: ['00010100001000001111111111111001', 4194376]
IFID: ['00010100001000001111111111111001', 4194376]
IDEX: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 9, 4194372, [17, 18, 1, 2090, 36833322, 3, 1]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 2, 1, 14, 14, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268501000, 1, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501000, '$12': 2, '$13': 6, '$14': 1, '$15': 0, '$16': 0, '$17': 3, '$18': 2, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 323
_________________________
*** Forwarding, MEM->EX(rt) ***
*** Previous 2nd EX - forwarding, MEM->EX(rt) ***
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 2
ReadData: 0
rd: 14
rt: 14

0 3 1
EX
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 0
WriteData: 1
rd: 1
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 11
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [1, 0, 31, -7, 2162681, 0, 0]

*** Forwarding EX->EX(rs) ***
IF
pc: 0x40004c
instruction: ['10101101011100010000000000000000', 4194380]
IFID: ['10101101011100010000000000000000', 4194380]
IDEX: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, 11, 4194376, [1, 0, 31, -7, 2162681, 0, 0]]
EXMEM: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 1, 1, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 2, 0, 14, 14]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501000, '$12': 2, '$13': 6, '$14': 1, '$15': 0, '$16': 0, '$17': 3, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 324
_________________________
*** Forwarding EX->EX(rs) ***
MEM
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 0
ReadData: 0
rd: 1
rt: 18

0 0 0
EX
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
WriteData: 0
rd: 0
rt: 0

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 17, 0, 0, 24182784, 268501000, 3]

IF
pc: 0x400050
instruction: ['10101101011100101111111111111100', 4194384]
IFID: ['10101101011100101111111111111100', 4194384]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 0, 4194380, [11, 17, 0, 0, 24182784, 268501000, 3]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 0, 0, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376]]
MEMWB: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 0, 1, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501000, '$12': 2, '$13': 6, '$14': 2, '$15': 0, '$16': 0, '$17': 3, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 325
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
ReadData: 0
rd: 0
rt: 0

1 268501000 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268501000
WriteData: 3
rd: 17
rt: 17

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 18, 31, -4, 24313852, 268501000, 1]

IF
pc: 0x400054
instruction: ['00001000000100000000000000001100', 4194388]
IFID: ['00001000000100000000000000001100', 4194388]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 0, 4194384, [11, 18, 31, -4, 24313852, 268501000, 1]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501000, 3, 17, 17, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 0, 0]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501000, '$12': 2, '$13': 6, '$14': 2, '$15': 0, '$16': 0, '$17': 3, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 326
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268501000
ReadData: 0
rd: 17
rt: 17

1 268501000 -4
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268500996
WriteData: 1
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 1}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [0, 16, 0, 12, 1048588, 0, 0]

jumping to: 0x400030
IF
pc: 0x400030
instruction: ['00010001110011001111111111111001', 4194352]
IFID: ['00010001110011001111111111111001', 4194352]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 1}, 0, 4194388, [0, 16, 0, 12, 1048588, 0, 0]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268500996, 1, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268501000, 0, 17, 17]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501000, '$12': 2, '$13': 6, '$14': 2, '$15': 0, '$16': 0, '$17': 3, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 327
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268500996
ReadData: 0
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 10
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [14, 12, 31, -7, 30212089, 2, 2]

IF
pc: 0x400034
instruction: ['10001101011100010000000000000000', 4194356]
IFID: ['10001101011100010000000000000000', 4194356]
IDEX: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, 10, 4194352, [14, 12, 31, -7, 30212089, 2, 2]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268500996, 268500996, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268500996, 0, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501000, '$12': 2, '$13': 6, '$14': 2, '$15': 0, '$16': 0, '$17': 3, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 328
_________________________
0 2 2
EX
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: True
WriteData: 2
rd: 12
rt: 12

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 17, 0, 0, 24182784, 268501000, 3]

IF
pc: 0x400038
instruction: ['00100001011010110000000000000100', 4194360]
flushing pipeline
flushing pipeline, PC set to  0x400018
IFID: ['00100001011010110000000000000100', 4194360]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194356, [11, 17, 0, 0, 24182784, 268501000, 3]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, True, 2, 12, 12, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268500996, 0, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501000, '$12': 2, '$13': 6, '$14': 2, '$15': 0, '$16': 0, '$17': 3, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 329
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: True
ReadData: 0
rd: 12
rt: 12

IF
pc: 0x400018
instruction: ['00010001101110000000000000001111', 4194328]
IFID: ['00010001101110000000000000001111', 4194328]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194356, [11, 17, 0, 0, 24182784, 268501000, 3]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, True, 2, 12, 12, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, True, 0, 12, 12]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501000, '$12': 2, '$13': 6, '$14': 2, '$15': 0, '$16': 0, '$17': 3, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 330
_________________________
ID
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 10
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [13, 24, 0, 15, 28835855, 6, 7]

IF
pc: 0x40001c
instruction: ['00000011000011010110000000100010', 4194332]
IFID: ['00000011000011010110000000100010', 4194332]
IDEX: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, 10, 4194328, [13, 24, 0, 15, 28835855, 6, 7]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, True, 2, 12, 12, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, True, 0, 12, 12]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501000, '$12': 2, '$13': 6, '$14': 2, '$15': 0, '$16': 0, '$17': 3, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 331
_________________________
0 6 7
EX
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
WriteData: 7
rd: 24
rt: 24

ID
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 15
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [24, 13, 12, 24610, 51208226, 7, 6]

IF
pc: 0x400020
instruction: ['00000000000000000111000000100000', 4194336]
IFID: ['00000000000000000111000000100000', 4194336]
IDEX: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 15, 4194332, [24, 13, 12, 24610, 51208226, 7, 6]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 7, 24, 24, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, True, 0, 12, 12]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501000, '$12': 2, '$13': 6, '$14': 2, '$15': 0, '$16': 0, '$17': 3, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 332
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
ReadData: 0
rd: 24
rt: 24

0 7 6
EX
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 1
WriteData: 6
rd: 12
rt: 13

ID
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [0, 0, 14, 28704, 28704, 0, 0]

IF
pc: 0x400024
instruction: ['00000001001000000101100000100000', 4194340]
IFID: ['00000001001000000101100000100000', 4194340]
IDEX: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 4194336, [0, 0, 14, 28704, 28704, 0, 0]]
EXMEM: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 1, 6, 12, 13, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 24, 24]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501000, '$12': 2, '$13': 6, '$14': 2, '$15': 0, '$16': 0, '$17': 3, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 333
_________________________
MEM
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 1
ReadData: 0
rd: 12
rt: 13

0 0 0
EX
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 0
WriteData: 0
rd: 14
rt: 0

ID
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [9, 0, 11, 22560, 18896928, 268500992, 0]

IF
pc: 0x400028
instruction: ['00100001101011010000000000000001', 4194344]
IFID: ['00100001101011010000000000000001', 4194344]
IDEX: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 4194340, [9, 0, 11, 22560, 18896928, 268500992, 0]]
EXMEM: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 0, 14, 0, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336]]
MEMWB: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 1, 0, 12, 13]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501000, '$12': 2, '$13': 6, '$14': 2, '$15': 0, '$16': 0, '$17': 3, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 334
_________________________
MEM
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 0
ReadData: 0
rd: 14
rt: 0

0 268500992 0
EX
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268500992
WriteData: 0
rd: 11
rt: 0

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [13, 13, 0, 1, 28114945, 6, 6]

IF
pc: 0x40002c
instruction: ['00001000000100000000000000001100', 4194348]
IFID: ['00001000000100000000000000001100', 4194348]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194344, [13, 13, 0, 1, 28114945, 6, 6]]
EXMEM: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 268500992, 0, 11, 0, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340]]
MEMWB: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 0, 14, 0]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501000, '$12': 1, '$13': 6, '$14': 2, '$15': 0, '$16': 0, '$17': 3, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 335
_________________________
MEM
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268500992
ReadData: 0
rd: 11
rt: 0

1 6 1
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 7
WriteData: 6
rd: 13
rt: 13

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 1}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [0, 16, 0, 12, 1048588, 0, 0]

jumping to: 0x400030
IF
pc: 0x400030
instruction: ['00010001110011001111111111111001', 4194352]
IFID: ['00010001110011001111111111111001', 4194352]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 1}, 0, 4194348, [0, 16, 0, 12, 1048588, 0, 0]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 7, 6, 13, 13, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344]]
MEMWB: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 268500992, 0, 11, 0]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268501000, '$12': 1, '$13': 6, '$14': 0, '$15': 0, '$16': 0, '$17': 3, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 336
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 7
ReadData: 0
rd: 13
rt: 13

ID
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 10
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [14, 12, 31, -7, 30212089, 0, 1]

IF
pc: 0x400034
instruction: ['10001101011100010000000000000000', 4194356]
IFID: ['10001101011100010000000000000000', 4194356]
IDEX: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, 10, 4194352, [14, 12, 31, -7, 30212089, 0, 1]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 7, 6, 13, 13, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 7, 0, 13, 13]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500992, '$12': 1, '$13': 6, '$14': 0, '$15': 0, '$16': 0, '$17': 3, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 337
_________________________
0 0 1
EX
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
WriteData: 1
rd: 12
rt: 12

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 17, 0, 0, 24182784, 268500992, 3]

IF
pc: 0x400038
instruction: ['00100001011010110000000000000100', 4194360]
IFID: ['00100001011010110000000000000100', 4194360]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194356, [11, 17, 0, 0, 24182784, 268500992, 3]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 1, 12, 12, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 7, 0, 13, 13]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500992, '$12': 1, '$13': 7, '$14': 0, '$15': 0, '$16': 0, '$17': 3, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 338
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
ReadData: 0
rd: 12
rt: 12

1 268500992 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268500992
WriteData: 3
rd: 17
rt: 17

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 11, 0, 4, 23789572, 268500992, 268500992]

IF
pc: 0x40003c
instruction: ['10001101011100100000000000000000', 4194364]
IFID: ['10001101011100100000000000000000', 4194364]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194360, [11, 11, 0, 4, 23789572, 268500992, 268500992]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268500992, 3, 17, 17, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 12, 12]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500992, '$12': 1, '$13': 7, '$14': 0, '$15': 0, '$16': 0, '$17': 3, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 339
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268500992
ReadData: 2
rd: 17
rt: 17

1 268500992 4
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268500996
WriteData: 268500992
rd: 11
rt: 11

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 18, 0, 0, 24248320, 268500992, 1]

*** Forwarding EX->EX(rs) ***
IF
pc: 0x400040
instruction: ['00100001110011100000000000000001', 4194368]
IFID: ['00100001110011100000000000000001', 4194368]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194364, [11, 18, 0, 0, 24248320, 268500996, 1]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268500996, 268500992, 11, 11, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268500992, 2, 17, 17]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500992, '$12': 1, '$13': 7, '$14': 0, '$15': 0, '$16': 0, '$17': 3, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 340
_________________________
*** Forwarding EX->EX(rs) ***
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268500996
ReadData: 0
rd: 11
rt: 11

1 268500996 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268500996
WriteData: 1
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [14, 14, 0, 1, 30277633, 0, 0]

IF
pc: 0x400044
instruction: ['00000010001100100000100000101010', 4194372]
IFID: ['00000010001100100000100000101010', 4194372]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194368, [14, 14, 0, 1, 30277633, 0, 0]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268500996, 1, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268500996, 0, 11, 11]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500992, '$12': 1, '$13': 7, '$14': 0, '$15': 0, '$16': 0, '$17': 2, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 341
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 268500996
ReadData: 1
rd: 18
rt: 18

1 0 1
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 1
WriteData: 0
rd: 14
rt: 14

ID
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 9
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [17, 18, 1, 2090, 36833322, 2, 1]

*** Forwarding, MEM->EX(rt) ***
*** Previous 2nd EX - forwarding, MEM->EX(rt) ***
IF
pc: 0x400048
instruction: ['00010100001000001111111111111001', 4194376]
IFID: ['00010100001000001111111111111001', 4194376]
IDEX: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 9, 4194372, [17, 18, 1, 2090, 36833322, 2, 1]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 1, 0, 14, 14, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 268500996, 1, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500996, '$12': 1, '$13': 7, '$14': 0, '$15': 0, '$16': 0, '$17': 2, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 342
_________________________
*** Forwarding, MEM->EX(rt) ***
*** Previous 2nd EX - forwarding, MEM->EX(rt) ***
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 1
ReadData: 0
rd: 14
rt: 14

0 2 1
EX
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 0
WriteData: 1
rd: 1
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 11
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [1, 0, 31, -7, 2162681, 0, 0]

*** Forwarding EX->EX(rs) ***
IF
pc: 0x40004c
instruction: ['10101101011100010000000000000000', 4194380]
IFID: ['10101101011100010000000000000000', 4194380]
IDEX: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, 11, 4194376, [1, 0, 31, -7, 2162681, 0, 0]]
EXMEM: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 1, 1, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 1, 0, 14, 14]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500996, '$12': 1, '$13': 7, '$14': 0, '$15': 0, '$16': 0, '$17': 2, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 343
_________________________
*** Forwarding EX->EX(rs) ***
MEM
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
ALUResult: 0
ReadData: 0
rd: 1
rt: 18

0 0 0
EX
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
WriteData: 0
rd: 0
rt: 0

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 17, 0, 0, 24182784, 268500996, 2]

IF
pc: 0x400050
instruction: ['10101101011100101111111111111100', 4194384]
IFID: ['10101101011100101111111111111100', 4194384]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 0, 4194380, [11, 17, 0, 0, 24182784, 268500996, 2]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 0, 0, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376]]
MEMWB: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 0, 0, 1, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500996, '$12': 1, '$13': 7, '$14': 1, '$15': 0, '$16': 0, '$17': 2, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 344
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: False
ReadData: 0
rd: 0
rt: 0

1 268500996 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268500996
WriteData: 2
rd: 17
rt: 17

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 18, 31, -4, 24313852, 268500996, 1]

IF
pc: 0x400054
instruction: ['00001000000100000000000000001100', 4194388]
IFID: ['00001000000100000000000000001100', 4194388]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 0, 4194384, [11, 18, 31, -4, 24313852, 268500996, 1]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268500996, 2, 17, 17, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 14, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, False, 0, 0, 0]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500996, '$12': 1, '$13': 7, '$14': 1, '$15': 0, '$16': 0, '$17': 2, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 345
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268500996
ReadData: 0
rd: 17
rt: 17

1 268500996 -4
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268500992
WriteData: 1
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 1}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [0, 16, 0, 12, 1048588, 0, 0]

jumping to: 0x400030
IF
pc: 0x400030
instruction: ['00010001110011001111111111111001', 4194352]
IFID: ['00010001110011001111111111111001', 4194352]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 1}, 0, 4194388, [0, 16, 0, 12, 1048588, 0, 0]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268500992, 1, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268500996, 0, 17, 17]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500996, '$12': 1, '$13': 7, '$14': 1, '$15': 0, '$16': 0, '$17': 2, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 346
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}
ALUResult: 268500992
ReadData: 0
rd: 18
rt: 18

ID
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 10
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [14, 12, 31, -7, 30212089, 1, 1]

IF
pc: 0x400034
instruction: ['10001101011100010000000000000000', 4194356]
IFID: ['10001101011100010000000000000000', 4194356]
IDEX: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, 10, 4194352, [14, 12, 31, -7, 30212089, 1, 1]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268500992, 268500992, 18, 18, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268500992, 0, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500996, '$12': 1, '$13': 7, '$14': 1, '$15': 0, '$16': 0, '$17': 2, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 347
_________________________
0 1 1
EX
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: True
WriteData: 1
rd: 12
rt: 12

ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [11, 17, 0, 0, 24182784, 268500996, 2]

IF
pc: 0x400038
instruction: ['00100001011010110000000000000100', 4194360]
flushing pipeline
flushing pipeline, PC set to  0x400018
IFID: ['00100001011010110000000000000100', 4194360]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194356, [11, 17, 0, 0, 24182784, 268500996, 2]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, True, 1, 12, 12, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 0, 'MemWrite': 3, 'ALUSrc': 1, 'RegWrite': 0, 'Jump': 0}, 268500992, 0, 18, 18]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500996, '$12': 1, '$13': 7, '$14': 1, '$15': 0, '$16': 0, '$17': 2, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 348
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: True
ReadData: 0
rd: 12
rt: 12

IF
pc: 0x400018
instruction: ['00010001101110000000000000001111', 4194328]
IFID: ['00010001101110000000000000001111', 4194328]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 3, 'MemtoReg': 1, 'ALUOp': 0, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194356, [11, 17, 0, 0, 24182784, 268500996, 2]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, True, 1, 12, 12, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, True, 0, 12, 12]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500996, '$12': 1, '$13': 7, '$14': 1, '$15': 0, '$16': 0, '$17': 2, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 349
_________________________
ID
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
alucontrol_singals: 10
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [13, 24, 0, 15, 28835855, 7, 7]

IF
pc: 0x40001c
instruction: ['00000011000011010110000000100010', 4194332]
IFID: ['00000011000011010110000000100010', 4194332]
IDEX: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, 10, 4194328, [13, 24, 0, 15, 28835855, 7, 7]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, True, 1, 12, 12, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, True, 0, 12, 12]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500996, '$12': 1, '$13': 7, '$14': 1, '$15': 0, '$16': 0, '$17': 2, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 350
_________________________
0 7 7
EX
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: True
WriteData: 7
rd: 24
rt: 24

ID
control_signals: {'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 15
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [24, 13, 12, 24610, 51208226, 7, 7]

IF
pc: 0x400020
instruction: ['00000000000000000111000000100000', 4194336]
flushing pipeline
flushing pipeline, PC set to  0x400058
IFID: ['00000000000000000111000000100000', 4194336]
IDEX: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 15, 4194332, [24, 13, 12, 24610, 51208226, 7, 7]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, True, 7, 24, 24, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, True, 0, 12, 12]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500996, '$12': 1, '$13': 7, '$14': 1, '$15': 0, '$16': 0, '$17': 2, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 351
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}
ALUResult: True
ReadData: 0
rd: 24
rt: 24

IF
pc: 0x400058
instruction: ['00100000000011000000000000000000', 4194392]
IFID: ['00100000000011000000000000000000', 4194392]
IDEX: [{'RegDst': 1, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 2, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 1, 'Jump': 0}, 15, 4194332, [24, 13, 12, 24610, 51208226, 7, 7]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, True, 7, 24, 24, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, True, 0, 24, 24]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500996, '$12': 1, '$13': 7, '$14': 1, '$15': 0, '$16': 0, '$17': 2, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 352
_________________________
ID
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
alucontrol_singals: 0
take_branch: 0
rs, rt, rd, imm, address, rd1, rd2: [0, 12, 0, 0, 786432, 0, 1]

IFID: ['00100000000011000000000000000000', 4194392]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194392, [0, 12, 0, 0, 786432, 0, 1]]
EXMEM: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, True, 7, 24, 24, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, True, 0, 24, 24]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500996, '$12': 1, '$13': 7, '$14': 1, '$15': 0, '$16': 0, '$17': 2, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 353
_________________________
1 0 0
EX
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 0
WriteData: 1
rd: 12
rt: 12

IFID: ['00100000000011000000000000000000', 4194392]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194392, [0, 12, 0, 0, 786432, 0, 1]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 1, 12, 12, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [0, 4194392]]
MEMWB: [{'RegDst': 0, 'Branch': 1, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 1, 'MemWrite': 0, 'ALUSrc': 0, 'RegWrite': 0, 'Jump': 0}, True, 0, 24, 24]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500996, '$12': 1, '$13': 7, '$14': 1, '$15': 0, '$16': 0, '$17': 2, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 354
_________________________
MEM
control_signals: {'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}
ALUResult: 0
ReadData: 0
rd: 12
rt: 12

IFID: ['00100000000011000000000000000000', 4194392]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194392, [0, 12, 0, 0, 786432, 0, 1]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 1, 12, 12, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [0, 4194392]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 0, 12, 12]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500996, '$12': 1, '$13': 7, '$14': 1, '$15': 0, '$16': 0, '$17': 2, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 355
_________________________
*** Previous 2nd EX - forwarding, MEM->EX(rt) ***
*** Forwarding EX->EX(rt) ***
IFID: ['00100000000011000000000000000000', 4194392]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194392, [0, 12, 0, 0, 786432, 0, 0]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 1, 12, 12, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [0, 4194392]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 0, 12, 12]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500996, '$12': 0, '$13': 7, '$14': 1, '$15': 0, '$16': 0, '$17': 2, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 356
_________________________
IFID: ['00100000000011000000000000000000', 4194392]
IDEX: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 4194392, [0, 12, 0, 0, 786432, 0, 0]]
EXMEM: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 1, 12, 12, [4097, 4194304], [0, 4194308], [7, 4194312], [0, 4194316], [0, 4194320], [-1, 4194324], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [24610, 4194332], [28704, 4194336], [22560, 4194340], [1, 4194344], [-7, 4194352], [0, 4194356], [4, 4194360], [0, 4194364], [1, 4194368], [2090, 4194372], [-7, 4194376], [0, 4194380], [-4, 4194384], [-7, 4194352], [15, 4194328], [0, 4194392]]
MEMWB: [{'RegDst': 0, 'Branch': 0, 'MemRead': 0, 'MemtoReg': 0, 'ALUOp': 4, 'MemWrite': 0, 'ALUSrc': 1, 'RegWrite': 1, 'Jump': 0}, 0, 0, 12, 12]
{'$0': 0, '$1': 0, '$2': 0, '$3': 0, '$4': 0, '$5': 0, '$6': 0, '$7': 0, '$8': 0, '$9': 268500992, '$10': 0, '$11': 268500996, '$12': 0, '$13': 7, '$14': 1, '$15': 0, '$16': 0, '$17': 2, '$18': 1, '$19': 0, '$20': 0, '$21': -1, '$22': 0, '$23': 0, '$24': 7, '$25': 0, '$26': 0, '$27': 0, '$28': 0, '$29': 0, '$30': 0, '$31': 0, 'hi': 0, 'lo': 0}
CLOCK: 357
_________________________
